/*
 * Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
 * Copyright (c) 2011, 2012 Open Networking Foundation
 * Copyright 2013, Big Switch Networks, Inc. This library was generated by the LoxiGen Compiler.
 * Copyright 2018, Red Hat, Inc.
 */
// Automatically generated by LOXI from template module.go
// Do not modify

package of13

import (
	"fmt"
	"net"

	"github.com/skydive-project/goloxi"
)

type Oxm struct {
	TypeLen uint32
}

type IOxm interface {
	goloxi.Serializable
	GetTypeLen() uint32
	GetName() string
	GetValue() interface{}
}

func (self *Oxm) GetTypeLen() uint32 {
	return self.TypeLen
}

func (self *Oxm) Serialize(encoder *goloxi.Encoder) error {
	encoder.PutUint32(uint32(self.TypeLen))

	return nil
}

func decodeOxm(decoder *goloxi.Decoder) (IOxm, error) {
	oxm := &Oxm{}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("Oxm packet too short: %d < 4", decoder.Length())
	}
	oxm.TypeLen = uint32(decoder.ReadUint32())

	switch oxm.TypeLen {
	case 110204:
		return decodeNxmTunMetadata47(oxm, decoder)
	case 129026:
		return decodeOxmConnTrackingTpSrc(oxm, decoder)
	case 65540:
		return decodeNxmReg0(oxm, decoder)
	case 77830:
		return decodeNxmNdSll(oxm, decoder)
	case 80897:
		return decodeNxmMplsTtl(oxm, decoder)
	case 73736:
		return decodeNxmTunId(oxm, decoder)
	case 2:
		return decodeNxmInPort(oxm, decoder)
	case 2147484944:
		return decodeOxmMetadataMasked(oxm, decoder)
	case 122896:
		return decodeNxmXxreg1(oxm, decoder)
	case 94588:
		return decodeNxmTunMetadata16Masked(oxm, decoder)
	case 111228:
		return decodeNxmTunMetadata49(oxm, decoder)
	case 2147485702:
		return decodeOxmEthSrc(oxm, decoder)
	case 2147499266:
		return decodeOxmIcmpv6CodeMasked(oxm, decoder)
	case 2147503112:
		return decodeOxmTunnelId(oxm, decoder)
	case 95612:
		return decodeNxmTunMetadata18Masked(oxm, decoder)
	case 112252:
		return decodeNxmTunMetadata51(oxm, decoder)
	case 96892:
		return decodeNxmTunMetadata21(oxm, decoder)
	case 96636:
		return decodeNxmTunMetadata20Masked(oxm, decoder)
	case 2147495176:
		return decodeOxmArpSpaMasked(oxm, decoder)
	case 121872:
		return decodeNxmTunIpv6Dst(oxm, decoder)
	case 126980:
		return decodeOxmConnTrackingNwSrc(oxm, decoder)
	case 97660:
		return decodeNxmTunMetadata22Masked(oxm, decoder)
	case 94332:
		return decodeNxmTunMetadata16(oxm, decoder)
	case 2147483652:
		return decodeOxmInPort(oxm, decoder)
	case 2050:
		return decodeNxmVlanTci(oxm, decoder)
	case 3073:
		return decodeNxmNwProto(oxm, decoder)
	case 82180:
		return decodeNxmTunDstMasked(oxm, decoder)
	case 2147502338:
		return decodeOxmMplsBosMasked(oxm, decoder)
	case 121120:
		return decodeOxmConnTrackingLabelMasked(oxm, decoder)
	case 98684:
		return decodeNxmTunMetadata24Masked(oxm, decoder)
	case 66564:
		return decodeNxmReg2(oxm, decoder)
	case 115324:
		return decodeNxmTunMetadata57(oxm, decoder)
	case 95356:
		return decodeNxmTunMetadata18(oxm, decoder)
	case 2147487745:
		return decodeOxmIpDscp(oxm, decoder)
	case 120848:
		return decodeOxmConnTrackingLabel(oxm, decoder)
	case 85250:
		return decodeNxmTunGbpIdMasked(oxm, decoder)
	case 2147490564:
		return decodeOxmTcpSrcMasked(oxm, decoder)
	case 99708:
		return decodeNxmTunMetadata26Masked(oxm, decoder)
	case 198660:
		return decodeOxmBsnL3InterfaceClassId(oxm, decoder)
	case 2147488769:
		return decodeOxmIpProto(oxm, decoder)
	case 199172:
		return decodeOxmBsnL3SrcClassId(oxm, decoder)
	case 100732:
		return decodeNxmTunMetadata28Masked(oxm, decoder)
	case 1030:
		return decodeNxmEthSrc(oxm, decoder)
	case 68612:
		return decodeNxmReg6(oxm, decoder)
	case 117372:
		return decodeNxmTunMetadata61(oxm, decoder)
	case 5122:
		return decodeNxmTcpDst(oxm, decoder)
	case 93564:
		return decodeNxmTunMetadata14Masked(oxm, decoder)
	case 209156:
		return decodeOxmBsnInnerVlanVidMasked(oxm, decoder)
	case 101244:
		return decodeNxmTunMetadata29Masked(oxm, decoder)
	case 81672:
		return decodeOxmTunnelIpv4SrcMasked(oxm, decoder)
	case 101756:
		return decodeNxmTunMetadata30Masked(oxm, decoder)
	case 4100:
		return decodeNxmIpDst(oxm, decoder)
	case 118396:
		return decodeNxmTunMetadata63(oxm, decoder)
	case 119042:
		return decodeNxmTunFlagsMasked(oxm, decoder)
	case 127236:
		return decodeNxmCtNwSrcMasked(oxm, decoder)
	case 78086:
		return decodeNxmNdSllMasked(oxm, decoder)
	case 200968:
		return decodeOxmBsnUdf0Masked(oxm, decoder)
	case 2147496204:
		return decodeOxmArpShaMasked(oxm, decoder)
	case 76048:
		return decodeNxmIpv6DstMasked(oxm, decoder)
	case 86140:
		return decodeNxmTunMetadata0(oxm, decoder)
	case 119556:
		return decodeNxmCtStateMasked(oxm, decoder)
	case 102780:
		return decodeNxmTunMetadata32Masked(oxm, decoder)
	case 70660:
		return decodeNxmReg10(oxm, decoder)
	case 2147491076:
		return decodeOxmTcpDstMasked(oxm, decoder)
	case 196896:
		return decodeOxmBsnInPorts128Masked(oxm, decoder)
	case 78849:
		return decodeNxmIpFrag(oxm, decoder)
	case 87164:
		return decodeNxmTunMetadata2(oxm, decoder)
	case 120580:
		return decodeNxmCtMarkMasked(oxm, decoder)
	case 103804:
		return decodeNxmTunMetadata34Masked(oxm, decoder)
	case 202756:
		return decodeOxmBsnUdf4(oxm, decoder)
	case 204802:
		return decodeOxmBsnTcpFlags(oxm, decoder)
	case 205825:
		return decodeOxmBsnL2CacheHit(oxm, decoder)
	case 88188:
		return decodeNxmTunMetadata4(oxm, decoder)
	case 2147491588:
		return decodeOxmUdpSrcMasked(oxm, decoder)
	case 104828:
		return decodeNxmTunMetadata36Masked(oxm, decoder)
	case 72708:
		return decodeNxmReg14(oxm, decoder)
	case 2147492866:
		return decodeOxmSctpDst(oxm, decoder)
	case 2147493889:
		return decodeOxmIcmpv4Code(oxm, decoder)
	case 200196:
		return decodeOxmBsnEgrPortGroupId(oxm, decoder)
	case 89212:
		return decodeNxmTunMetadata6(oxm, decoder)
	case 2147500300:
		return decodeOxmIpv6NdSllMasked(oxm, decoder)
	case 105852:
		return decodeNxmTunMetadata38Masked(oxm, decoder)
	case 113020:
		return decodeNxmTunMetadata52Masked(oxm, decoder)
	case 8196:
		return decodeNxmArpSpa(oxm, decoder)
	case 76801:
		return decodeNxmIcmpv6Code(oxm, decoder)
	case 70148:
		return decodeNxmReg9(oxm, decoder)
	case 119560:
		return decodeOxmConnTrackingStateMasked(oxm, decoder)
	case 90236:
		return decodeNxmTunMetadata8(oxm, decoder)
	case 106876:
		return decodeNxmTunMetadata40Masked(oxm, decoder)
	case 4294923528:
		return decodeOxmOvsTcpFlagsMasked(oxm, decoder)
	case 120584:
		return decodeOxmConnTrackingMarkMasked(oxm, decoder)
	case 91260:
		return decodeNxmTunMetadata10(oxm, decoder)
	case 107900:
		return decodeNxmTunMetadata42Masked(oxm, decoder)
	case 126722:
		return decodeOxmConnTrackingNwProtoMasked(oxm, decoder)
	case 206852:
		return decodeOxmBsnIngressPortGroupId(oxm, decoder)
	case 208898:
		return decodeOxmBsnInnerVlanVid(oxm, decoder)
	case 209921:
		return decodeOxmBsnIpFragmentation(oxm, decoder)
	case 92284:
		return decodeNxmTunMetadata12(oxm, decoder)
	case 108924:
		return decodeNxmTunMetadata44Masked(oxm, decoder)
	case 74758:
		return decodeNxmArpTha(oxm, decoder)
	case 121104:
		return decodeNxmCtLabelMasked(oxm, decoder)
	case 2147494916:
		return decodeOxmArpSpa(oxm, decoder)
	case 79873:
		return decodeNxmNwEcn(oxm, decoder)
	case 196624:
		return decodeOxmBsnInPorts128(oxm, decoder)
	case 2147489284:
		return decodeOxmIpv4Src(oxm, decoder)
	case 93308:
		return decodeNxmTunMetadata14(oxm, decoder)
	case 2147492612:
		return decodeOxmSctpSrcMasked(oxm, decoder)
	case 2561:
		return decodeNxmNwTos(oxm, decoder)
	case 129538:
		return decodeOxmConnTrackingTpDst(oxm, decoder)
	case 2147500550:
		return decodeOxmIpv6NdTll(oxm, decoder)
	case 84484:
		return decodeNxmConjId(oxm, decoder)
	case 78342:
		return decodeNxmNdTll(oxm, decoder)
	case 4866:
		return decodeNxmTcpSrcMasked(oxm, decoder)
	case 121360:
		return decodeNxmTunIpv6Src(oxm, decoder)
	case 71428:
		return decodeNxmReg11Masked(oxm, decoder)
	case 2147499009:
		return decodeOxmIcmpv6Code(oxm, decoder)
	case 774:
		return decodeNxmEthDstMasked(oxm, decoder)
	case 201480:
		return decodeOxmBsnUdf1Masked(oxm, decoder)
	case 111996:
		return decodeNxmTunMetadata50Masked(oxm, decoder)
	case 2147495942:
		return decodeOxmArpSha(oxm, decoder)
	case 2147497988:
		return decodeOxmIpv6Flabel(oxm, decoder)
	case 208652:
		return decodeOxmBsnInnerEthSrcMasked(oxm, decoder)
	case 2147503376:
		return decodeOxmTunnelIdMasked(oxm, decoder)
	case 96380:
		return decodeNxmTunMetadata20(oxm, decoder)
	case 113276:
		return decodeNxmTunMetadata53(oxm, decoder)
	case 129796:
		return decodeOxmConnTrackingTpDstMasked(oxm, decoder)
	case 75536:
		return decodeNxmIpv6SrcMasked(oxm, decoder)
	case 2147502081:
		return decodeOxmMplsBos(oxm, decoder)
	case 2147489544:
		return decodeOxmIpv4SrcMasked(oxm, decoder)
	case 97404:
		return decodeNxmTunMetadata22(oxm, decoder)
	case 114044:
		return decodeNxmTunMetadata54Masked(oxm, decoder)
	case 198402:
		return decodeOxmBsnGlobalVrfAllowedMasked(oxm, decoder)
	case 94844:
		return decodeNxmTunMetadata17(oxm, decoder)
	case 81924:
		return decodeOxmTunnelIpv4Dst(oxm, decoder)
	case 2147486980:
		return decodeOxmVlanVidMasked(oxm, decoder)
	case 127752:
		return decodeOxmConnTrackingNwDstMasked(oxm, decoder)
	case 98428:
		return decodeNxmTunMetadata24(oxm, decoder)
	case 66308:
		return decodeNxmReg1Masked(oxm, decoder)
	case 2147489026:
		return decodeOxmIpProtoMasked(oxm, decoder)
	case 115068:
		return decodeNxmTunMetadata56Masked(oxm, decoder)
	case 2147501060:
		return decodeOxmMplsLabel(oxm, decoder)
	case 84994:
		return decodeNxmTunGbpId(oxm, decoder)
	case 202244:
		return decodeOxmBsnUdf3(oxm, decoder)
	case 99452:
		return decodeNxmTunMetadata26(oxm, decoder)
	case 67332:
		return decodeNxmReg3Masked(oxm, decoder)
	case 116092:
		return decodeNxmTunMetadata58Masked(oxm, decoder)
	case 2147500038:
		return decodeOxmIpv6NdSll(oxm, decoder)
	case 83972:
		return decodeNxmRecircId(oxm, decoder)
	case 2147497760:
		return decodeOxmIpv6DstMasked(oxm, decoder)
	case 72196:
		return decodeNxmReg13(oxm, decoder)
	case 100476:
		return decodeNxmTunMetadata28(oxm, decoder)
	case 68356:
		return decodeNxmReg5Masked(oxm, decoder)
	case 117116:
		return decodeNxmTunMetadata60Masked(oxm, decoder)
	case 2147488514:
		return decodeOxmIpEcnMasked(oxm, decoder)
	case 112764:
		return decodeNxmTunMetadata52(oxm, decoder)
	case 110972:
		return decodeNxmTunMetadata48Masked(oxm, decoder)
	case 101500:
		return decodeNxmTunMetadata30(oxm, decoder)
	case 3844:
		return decodeNxmIpSrcMasked(oxm, decoder)
	case 118140:
		return decodeNxmTunMetadata62Masked(oxm, decoder)
	case 123664:
		return decodeNxmXxreg2Masked(oxm, decoder)
	case 117628:
		return decodeNxmTunMetadata61Masked(oxm, decoder)
	case 129794:
		return decodeNxmCtTpDstMasked(oxm, decoder)
	case 127748:
		return decodeNxmCtNwDstMasked(oxm, decoder)
	case 78598:
		return decodeNxmNdTllMasked(oxm, decoder)
	case 207624:
		return decodeOxmBsnVxlanNetworkIdMasked(oxm, decoder)
	case 2147496716:
		return decodeOxmArpThaMasked(oxm, decoder)
	case 197384:
		return decodeOxmBsnLagIdMasked(oxm, decoder)
	case 121616:
		return decodeNxmTunIpv6SrcMasked(oxm, decoder)
	case 102524:
		return decodeNxmTunMetadata32(oxm, decoder)
	case 70404:
		return decodeNxmReg9Masked(oxm, decoder)
	case 75792:
		return decodeNxmIpv6Dst(oxm, decoder)
	case 86908:
		return decodeNxmTunMetadata1Masked(oxm, decoder)
	case 120324:
		return decodeOxmConnTrackingMark(oxm, decoder)
	case 87932:
		return decodeNxmTunMetadata3Masked(oxm, decoder)
	case 199432:
		return decodeOxmBsnL3SrcClassIdMasked(oxm, decoder)
	case 104572:
		return decodeNxmTunMetadata36(oxm, decoder)
	case 3588:
		return decodeNxmIpSrc(oxm, decoder)
	case 72452:
		return decodeNxmReg13Masked(oxm, decoder)
	case 4294923270:
		return decodeOxmOvsTcpFlags(oxm, decoder)
	case 69892:
		return decodeNxmReg8Masked(oxm, decoder)
	case 88956:
		return decodeNxmTunMetadata5Masked(oxm, decoder)
	case 200456:
		return decodeOxmBsnEgrPortGroupIdMasked(oxm, decoder)
	case 2147497248:
		return decodeOxmIpv6SrcMasked(oxm, decoder)
	case 105596:
		return decodeNxmTunMetadata38(oxm, decoder)
	case 73476:
		return decodeNxmReg15Masked(oxm, decoder)
	case 2147493634:
		return decodeOxmIcmpv4TypeMasked(oxm, decoder)
	case 95100:
		return decodeNxmTunMetadata17Masked(oxm, decoder)
	case 2147496976:
		return decodeOxmIpv6Src(oxm, decoder)
	case 106620:
		return decodeNxmTunMetadata40(oxm, decoder)
	case 8964:
		return decodeNxmArpTpaMasked(oxm, decoder)
	case 128784:
		return decodeNxmCtIpv6DstMasked(oxm, decoder)
	case 91004:
		return decodeNxmTunMetadata9Masked(oxm, decoder)
	case 202504:
		return decodeOxmBsnUdf3Masked(oxm, decoder)
	case 107644:
		return decodeNxmTunMetadata42(oxm, decoder)
	case 2147498248:
		return decodeOxmIpv6FlabelMasked(oxm, decoder)
	case 92028:
		return decodeNxmTunMetadata11Masked(oxm, decoder)
	case 203528:
		return decodeOxmBsnUdf5Masked(oxm, decoder)
	case 8708:
		return decodeNxmArpTpa(oxm, decoder)
	case 108668:
		return decodeNxmTunMetadata44(oxm, decoder)
	case 74502:
		return decodeNxmArpShaMasked(oxm, decoder)
	case 2147494660:
		return decodeOxmArpOpMasked(oxm, decoder)
	case 197636:
		return decodeOxmBsnVrf(oxm, decoder)
	case 93052:
		return decodeNxmTunMetadata13Masked(oxm, decoder)
	case 204292:
		return decodeOxmBsnUdf7(oxm, decoder)
	case 109692:
		return decodeNxmTunMetadata46(oxm, decoder)
	case 67588:
		return decodeNxmReg4(oxm, decoder)
	case 7169:
		return decodeNxmIcmpCode(oxm, decoder)
	case 82946:
		return decodeNxmTcpFlags(oxm, decoder)
	case 203780:
		return decodeOxmBsnUdf6(oxm, decoder)
	case 207878:
		return decodeOxmBsnInnerEthDst(oxm, decoder)
	case 198145:
		return decodeOxmBsnGlobalVrfAllowed(oxm, decoder)
	case 2147484680:
		return decodeOxmMetadata(oxm, decoder)
	case 1538:
		return decodeNxmEthType(oxm, decoder)
	case 205576:
		return decodeOxmBsnVlanXlatePortGroupIdMasked(oxm, decoder)
	case 128016:
		return decodeOxmConnTrackingIpv6Src(oxm, decoder)
	case 110716:
		return decodeNxmTunMetadata48(oxm, decoder)
	case 209668:
		return decodeOxmBsnVfiMasked(oxm, decoder)
	case 127492:
		return decodeOxmConnTrackingNwDst(oxm, decoder)
	case 2147498754:
		return decodeOxmIcmpv6TypeMasked(oxm, decoder)
	case 2147485190:
		return decodeOxmEthDst(oxm, decoder)
	case 111740:
		return decodeNxmTunMetadata50(oxm, decoder)
	case 96124:
		return decodeNxmTunMetadata19Masked(oxm, decoder)
	case 122384:
		return decodeNxmXxreg0(oxm, decoder)
	case 97148:
		return decodeNxmTunMetadata21Masked(oxm, decoder)
	case 2147503876:
		return decodeOxmIpv6ExthdrMasked(oxm, decoder)
	case 2147495688:
		return decodeOxmArpTpaMasked(oxm, decoder)
	case 113788:
		return decodeNxmTunMetadata54(oxm, decoder)
	case 81668:
		return decodeNxmTunSrcMasked(oxm, decoder)
	case 2147501826:
		return decodeOxmMplsTcMasked(oxm, decoder)
	case 103548:
		return decodeNxmTunMetadata34(oxm, decoder)
	case 98172:
		return decodeNxmTunMetadata23Masked(oxm, decoder)
	case 66052:
		return decodeNxmReg1(oxm, decoder)
	case 114812:
		return decodeNxmTunMetadata56(oxm, decoder)
	case 2147486210:
		return decodeOxmEthType(oxm, decoder)
	case 2147487233:
		return decodeOxmVlanPcp(oxm, decoder)
	case 82692:
		return decodeNxmPktMarkMasked(oxm, decoder)
	case 99196:
		return decodeNxmTunMetadata25Masked(oxm, decoder)
	case 67076:
		return decodeNxmReg3(oxm, decoder)
	case 115836:
		return decodeNxmTunMetadata58(oxm, decoder)
	case 2147488257:
		return decodeOxmIpEcn(oxm, decoder)
	case 83716:
		return decodeNxmDpHashMasked(oxm, decoder)
	case 100220:
		return decodeNxmTunMetadata27Masked(oxm, decoder)
	case 518:
		return decodeNxmEthDst(oxm, decoder)
	case 68100:
		return decodeNxmReg5(oxm, decoder)
	case 116860:
		return decodeNxmTunMetadata60(oxm, decoder)
	case 4610:
		return decodeNxmTcpSrc(oxm, decoder)
	case 89980:
		return decodeNxmTunMetadata7Masked(oxm, decoder)
	case 69124:
		return decodeNxmReg7(oxm, decoder)
	case 117884:
		return decodeNxmTunMetadata62(oxm, decoder)
	case 5634:
		return decodeNxmUdpSrc(oxm, decoder)
	case 6657:
		return decodeNxmIcmpType(oxm, decoder)
	case 123408:
		return decodeNxmXxreg2(oxm, decoder)
	case 79105:
		return decodeNxmIpFragMasked(oxm, decoder)
	case 210178:
		return decodeOxmBsnIpFragmentationMasked(oxm, decoder)
	case 70916:
		return decodeNxmReg10Masked(oxm, decoder)
	case 1286:
		return decodeNxmEthSrcMasked(oxm, decoder)
	case 204040:
		return decodeOxmBsnUdf6Masked(oxm, decoder)
	case 102268:
		return decodeNxmTunMetadata31Masked(oxm, decoder)
	case 208140:
		return decodeOxmBsnInnerEthDstMasked(oxm, decoder)
	case 201220:
		return decodeOxmBsnUdf1(oxm, decoder)
	case 128272:
		return decodeNxmCtIpv6SrcMasked(oxm, decoder)
	case 6146:
		return decodeNxmUdpDst(oxm, decoder)
	case 2147490306:
		return decodeOxmTcpSrc(oxm, decoder)
	case 199684:
		return decodeOxmBsnL3DstClassId(oxm, decoder)
	case 128288:
		return decodeOxmConnTrackingIpv6SrcMasked(oxm, decoder)
	case 86652:
		return decodeNxmTunMetadata1(oxm, decoder)
	case 120068:
		return decodeOxmConnTrackingZoneMasked(oxm, decoder)
	case 103292:
		return decodeNxmTunMetadata33Masked(oxm, decoder)
	case 71172:
		return decodeNxmReg11(oxm, decoder)
	case 2147491330:
		return decodeOxmUdpSrc(oxm, decoder)
	case 69636:
		return decodeNxmReg8(oxm, decoder)
	case 87676:
		return decodeNxmTunMetadata3(oxm, decoder)
	case 82184:
		return decodeOxmTunnelIpv4DstMasked(oxm, decoder)
	case 104316:
		return decodeNxmTunMetadata35Masked(oxm, decoder)
	case 203268:
		return decodeOxmBsnUdf5(oxm, decoder)
	case 2147492354:
		return decodeOxmSctpSrc(oxm, decoder)
	case 2147493377:
		return decodeOxmIcmpv4Type(oxm, decoder)
	case 102012:
		return decodeNxmTunMetadata31(oxm, decoder)
	case 77584:
		return decodeNxmNdTargetMasked(oxm, decoder)
	case 88700:
		return decodeNxmTunMetadata5(oxm, decoder)
	case 105340:
		return decodeNxmTunMetadata37Masked(oxm, decoder)
	case 73220:
		return decodeNxmReg15(oxm, decoder)
	case 76289:
		return decodeNxmIcmpv6Type(oxm, decoder)
	case 109948:
		return decodeNxmTunMetadata46Masked(oxm, decoder)
	case 89724:
		return decodeNxmTunMetadata7(oxm, decoder)
	case 2147500812:
		return decodeOxmIpv6NdTllMasked(oxm, decoder)
	case 106364:
		return decodeNxmTunMetadata39Masked(oxm, decoder)
	case 205316:
		return decodeOxmBsnVlanXlatePortGroupId(oxm, decoder)
	case 2147494402:
		return decodeOxmArpOp(oxm, decoder)
	case 128528:
		return decodeOxmConnTrackingIpv6Dst(oxm, decoder)
	case 123920:
		return decodeNxmXxreg3(oxm, decoder)
	case 90748:
		return decodeNxmTunMetadata9(oxm, decoder)
	case 2147487490:
		return decodeOxmVlanPcpMasked(oxm, decoder)
	case 2147492100:
		return decodeOxmUdpDstMasked(oxm, decoder)
	case 2147501320:
		return decodeOxmMplsLabelMasked(oxm, decoder)
	case 107388:
		return decodeNxmTunMetadata41Masked(oxm, decoder)
	case 2147490818:
		return decodeOxmTcpDst(oxm, decoder)
	case 200708:
		return decodeOxmBsnUdf0(oxm, decoder)
	case 91772:
		return decodeNxmTunMetadata11(oxm, decoder)
	case 108412:
		return decodeNxmTunMetadata43Masked(oxm, decoder)
	case 74246:
		return decodeNxmArpSha(oxm, decoder)
	case 207364:
		return decodeOxmBsnVxlanNetworkId(oxm, decoder)
	case 209410:
		return decodeOxmBsnVfi(oxm, decoder)
	case 2147498497:
		return decodeOxmIcmpv6Type(oxm, decoder)
	case 92796:
		return decodeNxmTunMetadata13(oxm, decoder)
	case 109436:
		return decodeNxmTunMetadata45Masked(oxm, decoder)
	case 2147495428:
		return decodeOxmArpTpa(oxm, decoder)
	case 80385:
		return decodeNxmNwTtl(oxm, decoder)
	case 126465:
		return decodeOxmConnTrackingNwProto(oxm, decoder)
	case 7682:
		return decodeNxmArpOp(oxm, decoder)
	case 79364:
		return decodeNxmIpv6Label(oxm, decoder)
	case 208390:
		return decodeOxmBsnInnerEthSrc(oxm, decoder)
	case 110460:
		return decodeNxmTunMetadata47Masked(oxm, decoder)
	case 129282:
		return decodeNxmCtTpSrcMasked(oxm, decoder)
	case 83202:
		return decodeNxmTcpFlagsMasked(oxm, decoder)
	case 75280:
		return decodeNxmIpv6Src(oxm, decoder)
	case 8452:
		return decodeNxmArpSpaMasked(oxm, decoder)
	case 75014:
		return decodeNxmArpThaMasked(oxm, decoder)
	case 111484:
		return decodeNxmTunMetadata49Masked(oxm, decoder)
	case 207112:
		return decodeOxmBsnIngressPortGroupIdMasked(oxm, decoder)
	case 2147489796:
		return decodeOxmIpv4Dst(oxm, decoder)
	case 206400:
		return decodeOxmBsnInPorts512(oxm, decoder)
	case 95868:
		return decodeNxmTunMetadata19(oxm, decoder)
	case 129284:
		return decodeOxmConnTrackingTpSrcMasked(oxm, decoder)
	case 112508:
		return decodeNxmTunMetadata51Masked(oxm, decoder)
	case 2147496454:
		return decodeOxmArpTha(oxm, decoder)
	case 2147491842:
		return decodeOxmUdpDst(oxm, decoder)
	case 2147501569:
		return decodeOxmMplsTc(oxm, decoder)
	case 201732:
		return decodeOxmBsnUdf2(oxm, decoder)
	case 122128:
		return decodeNxmTunIpv6DstMasked(oxm, decoder)
	case 113532:
		return decodeNxmTunMetadata53Masked(oxm, decoder)
	case 81412:
		return decodeOxmTunnelIpv4Src(oxm, decoder)
	case 114300:
		return decodeNxmTunMetadata55(oxm, decoder)
	case 71684:
		return decodeNxmReg12(oxm, decoder)
	case 127240:
		return decodeOxmConnTrackingNwSrcMasked(oxm, decoder)
	case 97916:
		return decodeNxmTunMetadata23(oxm, decoder)
	case 65796:
		return decodeNxmReg0Masked(oxm, decoder)
	case 114556:
		return decodeNxmTunMetadata55Masked(oxm, decoder)
	case 2306:
		return decodeNxmVlanTciMasked(oxm, decoder)
	case 82436:
		return decodeNxmPktMark(oxm, decoder)
	case 85505:
		return decodeNxmTunGbpFlags(oxm, decoder)
	case 98940:
		return decodeNxmTunMetadata25(oxm, decoder)
	case 66820:
		return decodeNxmReg2Masked(oxm, decoder)
	case 115580:
		return decodeNxmTunMetadata57Masked(oxm, decoder)
	case 83460:
		return decodeNxmDpHash(oxm, decoder)
	case 2147503618:
		return decodeOxmIpv6Exthdr(oxm, decoder)
	case 2147490056:
		return decodeOxmIpv4DstMasked(oxm, decoder)
	case 99964:
		return decodeNxmTunMetadata27(oxm, decoder)
	case 118786:
		return decodeNxmTunFlags(oxm, decoder)
	case 67844:
		return decodeNxmReg4Masked(oxm, decoder)
	case 2147484164:
		return decodeOxmInPhyPort(oxm, decoder)
	case 116604:
		return decodeNxmTunMetadata59Masked(oxm, decoder)
	case 2147488002:
		return decodeOxmIpDscpMasked(oxm, decoder)
	case 100988:
		return decodeNxmTunMetadata29(oxm, decoder)
	case 119810:
		return decodeOxmConnTrackingZone(oxm, decoder)
	case 68868:
		return decodeNxmReg6Masked(oxm, decoder)
	case 116348:
		return decodeNxmTunMetadata59(oxm, decoder)
	case 5378:
		return decodeNxmTcpDstMasked(oxm, decoder)
	case 123152:
		return decodeNxmXxreg1Masked(oxm, decoder)
	case 2147486468:
		return decodeOxmEthTypeMasked(oxm, decoder)
	case 2147483912:
		return decodeOxmInPortMasked(oxm, decoder)
	case 85761:
		return decodeNxmTunGbpFlagsMasked(oxm, decoder)
	case 5890:
		return decodeNxmUdpSrcMasked(oxm, decoder)
	case 79620:
		return decodeNxmIpv6LabelMasked(oxm, decoder)
	case 4356:
		return decodeNxmIpDstMasked(oxm, decoder)
	case 204552:
		return decodeOxmBsnUdf7Masked(oxm, decoder)
	case 118652:
		return decodeNxmTunMetadata63Masked(oxm, decoder)
	case 6402:
		return decodeNxmUdpDstMasked(oxm, decoder)
	case 2147485452:
		return decodeOxmEthDstMasked(oxm, decoder)
	case 124176:
		return decodeNxmXxreg3Masked(oxm, decoder)
	case 122640:
		return decodeNxmXxreg0Masked(oxm, decoder)
	case 69380:
		return decodeNxmReg7Masked(oxm, decoder)
	case 86396:
		return decodeNxmTunMetadata0Masked(oxm, decoder)
	case 197896:
		return decodeOxmBsnVrfMasked(oxm, decoder)
	case 128800:
		return decodeOxmConnTrackingIpv6DstMasked(oxm, decoder)
	case 103036:
		return decodeNxmTunMetadata33(oxm, decoder)
	case 87420:
		return decodeNxmTunMetadata2Masked(oxm, decoder)
	case 198920:
		return decodeOxmBsnL3InterfaceClassIdMasked(oxm, decoder)
	case 104060:
		return decodeNxmTunMetadata35(oxm, decoder)
	case 71940:
		return decodeNxmReg12Masked(oxm, decoder)
	case 2147484424:
		return decodeOxmInPhyPortMasked(oxm, decoder)
	case 77328:
		return decodeNxmNdTarget(oxm, decoder)
	case 88444:
		return decodeNxmTunMetadata4Masked(oxm, decoder)
	case 199944:
		return decodeOxmBsnL3DstClassIdMasked(oxm, decoder)
	case 105084:
		return decodeNxmTunMetadata37(oxm, decoder)
	case 72964:
		return decodeNxmReg14Masked(oxm, decoder)
	case 206082:
		return decodeOxmBsnL2CacheHitMasked(oxm, decoder)
	case 89468:
		return decodeNxmTunMetadata6Masked(oxm, decoder)
	case 94076:
		return decodeNxmTunMetadata15Masked(oxm, decoder)
	case 206720:
		return decodeOxmBsnInPorts512Masked(oxm, decoder)
	case 106108:
		return decodeNxmTunMetadata39(oxm, decoder)
	case 205060:
		return decodeOxmBsnTcpFlagsMasked(oxm, decoder)
	case 197124:
		return decodeOxmBsnLagId(oxm, decoder)
	case 2147494146:
		return decodeOxmIcmpv4CodeMasked(oxm, decoder)
	case 2147497488:
		return decodeOxmIpv6Dst(oxm, decoder)
	case 90492:
		return decodeNxmTunMetadata8Masked(oxm, decoder)
	case 201992:
		return decodeOxmBsnUdf2Masked(oxm, decoder)
	case 107132:
		return decodeNxmTunMetadata41(oxm, decoder)
	case 2147493124:
		return decodeOxmSctpDstMasked(oxm, decoder)
	case 2147485964:
		return decodeOxmEthSrcMasked(oxm, decoder)
	case 91516:
		return decodeNxmTunMetadata10Masked(oxm, decoder)
	case 119300:
		return decodeOxmConnTrackingState(oxm, decoder)
	case 203016:
		return decodeOxmBsnUdf4Masked(oxm, decoder)
	case 2147499808:
		return decodeOxmIpv6NdTargetMasked(oxm, decoder)
	case 108156:
		return decodeNxmTunMetadata43(oxm, decoder)
	case 2147499536:
		return decodeOxmIpv6NdTarget(oxm, decoder)
	case 92540:
		return decodeNxmTunMetadata12Masked(oxm, decoder)
	case 109180:
		return decodeNxmTunMetadata45(oxm, decoder)
	case 2147486722:
		return decodeOxmVlanVid(oxm, decoder)
	case 93820:
		return decodeNxmTunMetadata15(oxm, decoder)
	case 73992:
		return decodeNxmTunIdMasked(oxm, decoder)
	default:
		return nil, fmt.Errorf("Invalid type '%d' for 'Oxm'", oxm.TypeLen)
	}
}

func NewOxm(_type_len uint32) *Oxm {
	return &Oxm{
		TypeLen: _type_len,
	}
}

type NxmArpOp struct {
	*Oxm
	Value uint16
}

func (self *NxmArpOp) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmArpOp(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpOp, error) {
	nxmarpop := &NxmArpOp{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmArpOp packet too short: %d < 2", decoder.Length())
	}
	nxmarpop.Value = uint16(decoder.ReadUint16())
	return nxmarpop, nil
}

func NewNxmArpOp() *NxmArpOp {
	return &NxmArpOp{
		Oxm: NewOxm(7682),
	}
}
func (self *NxmArpOp) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpOp) GetName() string {
	return "nxm_arp_op"
}

type NxmArpSha struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *NxmArpSha) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmArpSha(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpSha, error) {
	nxmarpsha := &NxmArpSha{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("NxmArpSha packet too short: %d < 6", decoder.Length())
	}
	nxmarpsha.Value = net.HardwareAddr(decoder.Read(6))
	return nxmarpsha, nil
}

func NewNxmArpSha() *NxmArpSha {
	return &NxmArpSha{
		Oxm: NewOxm(74246),
	}
}
func (self *NxmArpSha) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpSha) GetName() string {
	return "nxm_arp_sha"
}

type NxmArpShaMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *NxmArpShaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmArpShaMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpShaMasked, error) {
	nxmarpshamasked := &NxmArpShaMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("NxmArpShaMasked packet too short: %d < 12", decoder.Length())
	}
	nxmarpshamasked.Value = net.HardwareAddr(decoder.Read(6))
	nxmarpshamasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return nxmarpshamasked, nil
}

func NewNxmArpShaMasked() *NxmArpShaMasked {
	return &NxmArpShaMasked{
		Oxm: NewOxm(74502),
	}
}
func (self *NxmArpShaMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpShaMasked) GetName() string {
	return "nxm_arp_sha_masked"
}

type NxmArpSpa struct {
	*Oxm
	Value net.IP
}

func (self *NxmArpSpa) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmArpSpa(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpSpa, error) {
	nxmarpspa := &NxmArpSpa{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmArpSpa packet too short: %d < 4", decoder.Length())
	}
	nxmarpspa.Value = net.IP(decoder.Read(4))
	return nxmarpspa, nil
}

func NewNxmArpSpa() *NxmArpSpa {
	return &NxmArpSpa{
		Oxm: NewOxm(8196),
	}
}
func (self *NxmArpSpa) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpSpa) GetName() string {
	return "nxm_arp_spa"
}

type NxmArpSpaMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmArpSpaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmArpSpaMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpSpaMasked, error) {
	nxmarpspamasked := &NxmArpSpaMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmArpSpaMasked packet too short: %d < 8", decoder.Length())
	}
	nxmarpspamasked.Value = net.IP(decoder.Read(4))
	nxmarpspamasked.ValueMask = net.IP(decoder.Read(4))
	return nxmarpspamasked, nil
}

func NewNxmArpSpaMasked() *NxmArpSpaMasked {
	return &NxmArpSpaMasked{
		Oxm: NewOxm(8452),
	}
}
func (self *NxmArpSpaMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpSpaMasked) GetName() string {
	return "nxm_arp_spa_masked"
}

type NxmArpTha struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *NxmArpTha) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmArpTha(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpTha, error) {
	nxmarptha := &NxmArpTha{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("NxmArpTha packet too short: %d < 6", decoder.Length())
	}
	nxmarptha.Value = net.HardwareAddr(decoder.Read(6))
	return nxmarptha, nil
}

func NewNxmArpTha() *NxmArpTha {
	return &NxmArpTha{
		Oxm: NewOxm(74758),
	}
}
func (self *NxmArpTha) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpTha) GetName() string {
	return "nxm_arp_tha"
}

type NxmArpThaMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *NxmArpThaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmArpThaMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpThaMasked, error) {
	nxmarpthamasked := &NxmArpThaMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("NxmArpThaMasked packet too short: %d < 12", decoder.Length())
	}
	nxmarpthamasked.Value = net.HardwareAddr(decoder.Read(6))
	nxmarpthamasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return nxmarpthamasked, nil
}

func NewNxmArpThaMasked() *NxmArpThaMasked {
	return &NxmArpThaMasked{
		Oxm: NewOxm(75014),
	}
}
func (self *NxmArpThaMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpThaMasked) GetName() string {
	return "nxm_arp_tha_masked"
}

type NxmArpTpa struct {
	*Oxm
	Value net.IP
}

func (self *NxmArpTpa) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmArpTpa(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpTpa, error) {
	nxmarptpa := &NxmArpTpa{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmArpTpa packet too short: %d < 4", decoder.Length())
	}
	nxmarptpa.Value = net.IP(decoder.Read(4))
	return nxmarptpa, nil
}

func NewNxmArpTpa() *NxmArpTpa {
	return &NxmArpTpa{
		Oxm: NewOxm(8708),
	}
}
func (self *NxmArpTpa) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpTpa) GetName() string {
	return "nxm_arp_tpa"
}

type NxmArpTpaMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmArpTpaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmArpTpaMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmArpTpaMasked, error) {
	nxmarptpamasked := &NxmArpTpaMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmArpTpaMasked packet too short: %d < 8", decoder.Length())
	}
	nxmarptpamasked.Value = net.IP(decoder.Read(4))
	nxmarptpamasked.ValueMask = net.IP(decoder.Read(4))
	return nxmarptpamasked, nil
}

func NewNxmArpTpaMasked() *NxmArpTpaMasked {
	return &NxmArpTpaMasked{
		Oxm: NewOxm(8964),
	}
}
func (self *NxmArpTpaMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmArpTpaMasked) GetName() string {
	return "nxm_arp_tpa_masked"
}

type NxmConjId struct {
	*Oxm
	Value uint32
}

func (self *NxmConjId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmConjId(parent *Oxm, decoder *goloxi.Decoder) (*NxmConjId, error) {
	nxmconjid := &NxmConjId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmConjId packet too short: %d < 4", decoder.Length())
	}
	nxmconjid.Value = uint32(decoder.ReadUint32())
	return nxmconjid, nil
}

func NewNxmConjId() *NxmConjId {
	return &NxmConjId{
		Oxm: NewOxm(84484),
	}
}
func (self *NxmConjId) GetValue() interface{} {
	return self.Value
}

func (self *NxmConjId) GetName() string {
	return "nxm_conj_id"
}

type NxmCtIpv6Dst struct {
	*Oxm
	Value net.IP
}

func (self *NxmCtIpv6Dst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeNxmCtIpv6Dst(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtIpv6Dst, error) {
	nxmctipv6dst := &NxmCtIpv6Dst{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmCtIpv6Dst packet too short: %d < 16", decoder.Length())
	}
	nxmctipv6dst.Value = net.IP(decoder.Read(16))
	return nxmctipv6dst, nil
}

func NewNxmCtIpv6Dst() *NxmCtIpv6Dst {
	return &NxmCtIpv6Dst{
		Oxm: NewOxm(128528),
	}
}
func (self *NxmCtIpv6Dst) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtIpv6Dst) GetName() string {
	return "nxm_ct_ipv6_dst"
}

type NxmCtIpv6DstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmCtIpv6DstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeNxmCtIpv6DstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtIpv6DstMasked, error) {
	nxmctipv6dstmasked := &NxmCtIpv6DstMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmCtIpv6DstMasked packet too short: %d < 32", decoder.Length())
	}
	nxmctipv6dstmasked.Value = net.IP(decoder.Read(16))
	nxmctipv6dstmasked.ValueMask = net.IP(decoder.Read(16))
	return nxmctipv6dstmasked, nil
}

func NewNxmCtIpv6DstMasked() *NxmCtIpv6DstMasked {
	return &NxmCtIpv6DstMasked{
		Oxm: NewOxm(128784),
	}
}
func (self *NxmCtIpv6DstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtIpv6DstMasked) GetName() string {
	return "nxm_ct_ipv6_dst_masked"
}

type NxmCtIpv6Src struct {
	*Oxm
	Value net.IP
}

func (self *NxmCtIpv6Src) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeNxmCtIpv6Src(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtIpv6Src, error) {
	nxmctipv6src := &NxmCtIpv6Src{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmCtIpv6Src packet too short: %d < 16", decoder.Length())
	}
	nxmctipv6src.Value = net.IP(decoder.Read(16))
	return nxmctipv6src, nil
}

func NewNxmCtIpv6Src() *NxmCtIpv6Src {
	return &NxmCtIpv6Src{
		Oxm: NewOxm(128016),
	}
}
func (self *NxmCtIpv6Src) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtIpv6Src) GetName() string {
	return "nxm_ct_ipv6_src"
}

type NxmCtIpv6SrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmCtIpv6SrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeNxmCtIpv6SrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtIpv6SrcMasked, error) {
	nxmctipv6srcmasked := &NxmCtIpv6SrcMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmCtIpv6SrcMasked packet too short: %d < 32", decoder.Length())
	}
	nxmctipv6srcmasked.Value = net.IP(decoder.Read(16))
	nxmctipv6srcmasked.ValueMask = net.IP(decoder.Read(16))
	return nxmctipv6srcmasked, nil
}

func NewNxmCtIpv6SrcMasked() *NxmCtIpv6SrcMasked {
	return &NxmCtIpv6SrcMasked{
		Oxm: NewOxm(128272),
	}
}
func (self *NxmCtIpv6SrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtIpv6SrcMasked) GetName() string {
	return "nxm_ct_ipv6_src_masked"
}

type NxmCtLabel struct {
	*Oxm
	Value uint128
}

func (self *NxmCtLabel) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))

	return nil
}

func decodeNxmCtLabel(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtLabel, error) {
	nxmctlabel := &NxmCtLabel{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmCtLabel packet too short: %d < 16", decoder.Length())
	}
	nxmctlabel.Value = uint128(decoder.ReadUint128())
	return nxmctlabel, nil
}

func NewNxmCtLabel() *NxmCtLabel {
	return &NxmCtLabel{
		Oxm: NewOxm(120848),
	}
}
func (self *NxmCtLabel) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtLabel) GetName() string {
	return "nxm_ct_label"
}

type NxmCtLabelMasked struct {
	*Oxm
	Value     uint128
	ValueMask uint128
}

func (self *NxmCtLabelMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))
	encoder.PutUint128(uint128(self.ValueMask))

	return nil
}

func decodeNxmCtLabelMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtLabelMasked, error) {
	nxmctlabelmasked := &NxmCtLabelMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmCtLabelMasked packet too short: %d < 32", decoder.Length())
	}
	nxmctlabelmasked.Value = uint128(decoder.ReadUint128())
	nxmctlabelmasked.ValueMask = uint128(decoder.ReadUint128())
	return nxmctlabelmasked, nil
}

func NewNxmCtLabelMasked() *NxmCtLabelMasked {
	return &NxmCtLabelMasked{
		Oxm: NewOxm(121104),
	}
}
func (self *NxmCtLabelMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtLabelMasked) GetName() string {
	return "nxm_ct_label_masked"
}

type NxmCtMark struct {
	*Oxm
	Value uint32
}

func (self *NxmCtMark) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmCtMark(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtMark, error) {
	nxmctmark := &NxmCtMark{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmCtMark packet too short: %d < 4", decoder.Length())
	}
	nxmctmark.Value = uint32(decoder.ReadUint32())
	return nxmctmark, nil
}

func NewNxmCtMark() *NxmCtMark {
	return &NxmCtMark{
		Oxm: NewOxm(120324),
	}
}
func (self *NxmCtMark) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtMark) GetName() string {
	return "nxm_ct_mark"
}

type NxmCtMarkMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmCtMarkMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmCtMarkMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtMarkMasked, error) {
	nxmctmarkmasked := &NxmCtMarkMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmCtMarkMasked packet too short: %d < 8", decoder.Length())
	}
	nxmctmarkmasked.Value = uint32(decoder.ReadUint32())
	nxmctmarkmasked.ValueMask = uint32(decoder.ReadUint32())
	return nxmctmarkmasked, nil
}

func NewNxmCtMarkMasked() *NxmCtMarkMasked {
	return &NxmCtMarkMasked{
		Oxm: NewOxm(120580),
	}
}
func (self *NxmCtMarkMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtMarkMasked) GetName() string {
	return "nxm_ct_mark_masked"
}

type NxmCtNwDst struct {
	*Oxm
	Value net.IP
}

func (self *NxmCtNwDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmCtNwDst(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtNwDst, error) {
	nxmctnwdst := &NxmCtNwDst{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmCtNwDst packet too short: %d < 4", decoder.Length())
	}
	nxmctnwdst.Value = net.IP(decoder.Read(4))
	return nxmctnwdst, nil
}

func NewNxmCtNwDst() *NxmCtNwDst {
	return &NxmCtNwDst{
		Oxm: NewOxm(127492),
	}
}
func (self *NxmCtNwDst) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtNwDst) GetName() string {
	return "nxm_ct_nw_dst"
}

type NxmCtNwDstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmCtNwDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmCtNwDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtNwDstMasked, error) {
	nxmctnwdstmasked := &NxmCtNwDstMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmCtNwDstMasked packet too short: %d < 8", decoder.Length())
	}
	nxmctnwdstmasked.Value = net.IP(decoder.Read(4))
	nxmctnwdstmasked.ValueMask = net.IP(decoder.Read(4))
	return nxmctnwdstmasked, nil
}

func NewNxmCtNwDstMasked() *NxmCtNwDstMasked {
	return &NxmCtNwDstMasked{
		Oxm: NewOxm(127748),
	}
}
func (self *NxmCtNwDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtNwDstMasked) GetName() string {
	return "nxm_ct_nw_dst_masked"
}

type NxmCtNwProto struct {
	*Oxm
	Value uint8
}

func (self *NxmCtNwProto) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmCtNwProto(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtNwProto, error) {
	nxmctnwproto := &NxmCtNwProto{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmCtNwProto packet too short: %d < 1", decoder.Length())
	}
	nxmctnwproto.Value = uint8(decoder.ReadByte())
	return nxmctnwproto, nil
}

func NewNxmCtNwProto() *NxmCtNwProto {
	return &NxmCtNwProto{
		Oxm: NewOxm(126465),
	}
}
func (self *NxmCtNwProto) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtNwProto) GetName() string {
	return "nxm_ct_nw_proto"
}

type NxmCtNwSrc struct {
	*Oxm
	Value net.IP
}

func (self *NxmCtNwSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmCtNwSrc(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtNwSrc, error) {
	nxmctnwsrc := &NxmCtNwSrc{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmCtNwSrc packet too short: %d < 4", decoder.Length())
	}
	nxmctnwsrc.Value = net.IP(decoder.Read(4))
	return nxmctnwsrc, nil
}

func NewNxmCtNwSrc() *NxmCtNwSrc {
	return &NxmCtNwSrc{
		Oxm: NewOxm(126980),
	}
}
func (self *NxmCtNwSrc) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtNwSrc) GetName() string {
	return "nxm_ct_nw_src"
}

type NxmCtNwSrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmCtNwSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmCtNwSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtNwSrcMasked, error) {
	nxmctnwsrcmasked := &NxmCtNwSrcMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmCtNwSrcMasked packet too short: %d < 8", decoder.Length())
	}
	nxmctnwsrcmasked.Value = net.IP(decoder.Read(4))
	nxmctnwsrcmasked.ValueMask = net.IP(decoder.Read(4))
	return nxmctnwsrcmasked, nil
}

func NewNxmCtNwSrcMasked() *NxmCtNwSrcMasked {
	return &NxmCtNwSrcMasked{
		Oxm: NewOxm(127236),
	}
}
func (self *NxmCtNwSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtNwSrcMasked) GetName() string {
	return "nxm_ct_nw_src_masked"
}

type NxmCtState struct {
	*Oxm
	Value []byte
}

func (self *NxmCtState) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmCtState(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtState, error) {
	nxmctstate := &NxmCtState{Oxm: parent}
	nxmctstate.Value = decoder.Read(decoder.Length())
	return nxmctstate, nil
}

func NewNxmCtState() *NxmCtState {
	return &NxmCtState{
		Oxm: NewOxm(119300),
	}
}
func (self *NxmCtState) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtState) GetName() string {
	return "nxm_ct_state"
}

type NxmCtStateMasked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmCtStateMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmCtStateMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtStateMasked, error) {
	nxmctstatemasked := &NxmCtStateMasked{Oxm: parent}
	nxmctstatemasked.Value = decoder.Read(decoder.Length())
	nxmctstatemasked.ValueMask = decoder.Read(decoder.Length())
	return nxmctstatemasked, nil
}

func NewNxmCtStateMasked() *NxmCtStateMasked {
	return &NxmCtStateMasked{
		Oxm: NewOxm(119556),
	}
}
func (self *NxmCtStateMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtStateMasked) GetName() string {
	return "nxm_ct_state_masked"
}

type NxmCtTpDst struct {
	*Oxm
	Value uint16
}

func (self *NxmCtTpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmCtTpDst(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtTpDst, error) {
	nxmcttpdst := &NxmCtTpDst{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmCtTpDst packet too short: %d < 2", decoder.Length())
	}
	nxmcttpdst.Value = uint16(decoder.ReadUint16())
	return nxmcttpdst, nil
}

func NewNxmCtTpDst() *NxmCtTpDst {
	return &NxmCtTpDst{
		Oxm: NewOxm(129538),
	}
}
func (self *NxmCtTpDst) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtTpDst) GetName() string {
	return "nxm_ct_tp_dst"
}

type NxmCtTpDstMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmCtTpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmCtTpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtTpDstMasked, error) {
	nxmcttpdstmasked := &NxmCtTpDstMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmCtTpDstMasked packet too short: %d < 4", decoder.Length())
	}
	nxmcttpdstmasked.Value = uint16(decoder.ReadUint16())
	nxmcttpdstmasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmcttpdstmasked, nil
}

func NewNxmCtTpDstMasked() *NxmCtTpDstMasked {
	return &NxmCtTpDstMasked{
		Oxm: NewOxm(129794),
	}
}
func (self *NxmCtTpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtTpDstMasked) GetName() string {
	return "nxm_ct_tp_dst_masked"
}

type NxmCtTpSrc struct {
	*Oxm
	Value uint16
}

func (self *NxmCtTpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmCtTpSrc(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtTpSrc, error) {
	nxmcttpsrc := &NxmCtTpSrc{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmCtTpSrc packet too short: %d < 2", decoder.Length())
	}
	nxmcttpsrc.Value = uint16(decoder.ReadUint16())
	return nxmcttpsrc, nil
}

func NewNxmCtTpSrc() *NxmCtTpSrc {
	return &NxmCtTpSrc{
		Oxm: NewOxm(129026),
	}
}
func (self *NxmCtTpSrc) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtTpSrc) GetName() string {
	return "nxm_ct_tp_src"
}

type NxmCtTpSrcMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmCtTpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmCtTpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtTpSrcMasked, error) {
	nxmcttpsrcmasked := &NxmCtTpSrcMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmCtTpSrcMasked packet too short: %d < 4", decoder.Length())
	}
	nxmcttpsrcmasked.Value = uint16(decoder.ReadUint16())
	nxmcttpsrcmasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmcttpsrcmasked, nil
}

func NewNxmCtTpSrcMasked() *NxmCtTpSrcMasked {
	return &NxmCtTpSrcMasked{
		Oxm: NewOxm(129282),
	}
}
func (self *NxmCtTpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtTpSrcMasked) GetName() string {
	return "nxm_ct_tp_src_masked"
}

type NxmCtZone struct {
	*Oxm
	Value uint16
}

func (self *NxmCtZone) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmCtZone(parent *Oxm, decoder *goloxi.Decoder) (*NxmCtZone, error) {
	nxmctzone := &NxmCtZone{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmCtZone packet too short: %d < 2", decoder.Length())
	}
	nxmctzone.Value = uint16(decoder.ReadUint16())
	return nxmctzone, nil
}

func NewNxmCtZone() *NxmCtZone {
	return &NxmCtZone{
		Oxm: NewOxm(119810),
	}
}
func (self *NxmCtZone) GetValue() interface{} {
	return self.Value
}

func (self *NxmCtZone) GetName() string {
	return "nxm_ct_zone"
}

type NxmDpHash struct {
	*Oxm
	Value uint32
}

func (self *NxmDpHash) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmDpHash(parent *Oxm, decoder *goloxi.Decoder) (*NxmDpHash, error) {
	nxmdphash := &NxmDpHash{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmDpHash packet too short: %d < 4", decoder.Length())
	}
	nxmdphash.Value = uint32(decoder.ReadUint32())
	return nxmdphash, nil
}

func NewNxmDpHash() *NxmDpHash {
	return &NxmDpHash{
		Oxm: NewOxm(83460),
	}
}
func (self *NxmDpHash) GetValue() interface{} {
	return self.Value
}

func (self *NxmDpHash) GetName() string {
	return "nxm_dp_hash"
}

type NxmDpHashMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmDpHashMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmDpHashMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmDpHashMasked, error) {
	nxmdphashmasked := &NxmDpHashMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmDpHashMasked packet too short: %d < 8", decoder.Length())
	}
	nxmdphashmasked.Value = uint32(decoder.ReadUint32())
	nxmdphashmasked.ValueMask = uint32(decoder.ReadUint32())
	return nxmdphashmasked, nil
}

func NewNxmDpHashMasked() *NxmDpHashMasked {
	return &NxmDpHashMasked{
		Oxm: NewOxm(83716),
	}
}
func (self *NxmDpHashMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmDpHashMasked) GetName() string {
	return "nxm_dp_hash_masked"
}

type NxmEthDst struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *NxmEthDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmEthDst(parent *Oxm, decoder *goloxi.Decoder) (*NxmEthDst, error) {
	nxmethdst := &NxmEthDst{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("NxmEthDst packet too short: %d < 6", decoder.Length())
	}
	nxmethdst.Value = net.HardwareAddr(decoder.Read(6))
	return nxmethdst, nil
}

func NewNxmEthDst() *NxmEthDst {
	return &NxmEthDst{
		Oxm: NewOxm(518),
	}
}
func (self *NxmEthDst) GetValue() interface{} {
	return self.Value
}

func (self *NxmEthDst) GetName() string {
	return "nxm_eth_dst"
}

type NxmEthDstMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *NxmEthDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmEthDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmEthDstMasked, error) {
	nxmethdstmasked := &NxmEthDstMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("NxmEthDstMasked packet too short: %d < 12", decoder.Length())
	}
	nxmethdstmasked.Value = net.HardwareAddr(decoder.Read(6))
	nxmethdstmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return nxmethdstmasked, nil
}

func NewNxmEthDstMasked() *NxmEthDstMasked {
	return &NxmEthDstMasked{
		Oxm: NewOxm(774),
	}
}
func (self *NxmEthDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmEthDstMasked) GetName() string {
	return "nxm_eth_dst_masked"
}

type NxmEthSrc struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *NxmEthSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmEthSrc(parent *Oxm, decoder *goloxi.Decoder) (*NxmEthSrc, error) {
	nxmethsrc := &NxmEthSrc{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("NxmEthSrc packet too short: %d < 6", decoder.Length())
	}
	nxmethsrc.Value = net.HardwareAddr(decoder.Read(6))
	return nxmethsrc, nil
}

func NewNxmEthSrc() *NxmEthSrc {
	return &NxmEthSrc{
		Oxm: NewOxm(1030),
	}
}
func (self *NxmEthSrc) GetValue() interface{} {
	return self.Value
}

func (self *NxmEthSrc) GetName() string {
	return "nxm_eth_src"
}

type NxmEthSrcMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *NxmEthSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmEthSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmEthSrcMasked, error) {
	nxmethsrcmasked := &NxmEthSrcMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("NxmEthSrcMasked packet too short: %d < 12", decoder.Length())
	}
	nxmethsrcmasked.Value = net.HardwareAddr(decoder.Read(6))
	nxmethsrcmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return nxmethsrcmasked, nil
}

func NewNxmEthSrcMasked() *NxmEthSrcMasked {
	return &NxmEthSrcMasked{
		Oxm: NewOxm(1286),
	}
}
func (self *NxmEthSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmEthSrcMasked) GetName() string {
	return "nxm_eth_src_masked"
}

type NxmEthType struct {
	*Oxm
	Value uint16
}

func (self *NxmEthType) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmEthType(parent *Oxm, decoder *goloxi.Decoder) (*NxmEthType, error) {
	nxmethtype := &NxmEthType{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmEthType packet too short: %d < 2", decoder.Length())
	}
	nxmethtype.Value = uint16(decoder.ReadUint16())
	return nxmethtype, nil
}

func NewNxmEthType() *NxmEthType {
	return &NxmEthType{
		Oxm: NewOxm(1538),
	}
}
func (self *NxmEthType) GetValue() interface{} {
	return self.Value
}

func (self *NxmEthType) GetName() string {
	return "nxm_eth_type"
}

type NxmIcmpCode struct {
	*Oxm
	Value uint8
}

func (self *NxmIcmpCode) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmIcmpCode(parent *Oxm, decoder *goloxi.Decoder) (*NxmIcmpCode, error) {
	nxmicmpcode := &NxmIcmpCode{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmIcmpCode packet too short: %d < 1", decoder.Length())
	}
	nxmicmpcode.Value = uint8(decoder.ReadByte())
	return nxmicmpcode, nil
}

func NewNxmIcmpCode() *NxmIcmpCode {
	return &NxmIcmpCode{
		Oxm: NewOxm(7169),
	}
}
func (self *NxmIcmpCode) GetValue() interface{} {
	return self.Value
}

func (self *NxmIcmpCode) GetName() string {
	return "nxm_icmp_code"
}

type NxmIcmpType struct {
	*Oxm
	Value uint8
}

func (self *NxmIcmpType) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmIcmpType(parent *Oxm, decoder *goloxi.Decoder) (*NxmIcmpType, error) {
	nxmicmptype := &NxmIcmpType{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmIcmpType packet too short: %d < 1", decoder.Length())
	}
	nxmicmptype.Value = uint8(decoder.ReadByte())
	return nxmicmptype, nil
}

func NewNxmIcmpType() *NxmIcmpType {
	return &NxmIcmpType{
		Oxm: NewOxm(6657),
	}
}
func (self *NxmIcmpType) GetValue() interface{} {
	return self.Value
}

func (self *NxmIcmpType) GetName() string {
	return "nxm_icmp_type"
}

type NxmIcmpv6Code struct {
	*Oxm
	Value uint8
}

func (self *NxmIcmpv6Code) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmIcmpv6Code(parent *Oxm, decoder *goloxi.Decoder) (*NxmIcmpv6Code, error) {
	nxmicmpv6code := &NxmIcmpv6Code{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmIcmpv6Code packet too short: %d < 1", decoder.Length())
	}
	nxmicmpv6code.Value = uint8(decoder.ReadByte())
	return nxmicmpv6code, nil
}

func NewNxmIcmpv6Code() *NxmIcmpv6Code {
	return &NxmIcmpv6Code{
		Oxm: NewOxm(76801),
	}
}
func (self *NxmIcmpv6Code) GetValue() interface{} {
	return self.Value
}

func (self *NxmIcmpv6Code) GetName() string {
	return "nxm_icmpv6_code"
}

type NxmIcmpv6Type struct {
	*Oxm
	Value uint8
}

func (self *NxmIcmpv6Type) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmIcmpv6Type(parent *Oxm, decoder *goloxi.Decoder) (*NxmIcmpv6Type, error) {
	nxmicmpv6type := &NxmIcmpv6Type{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmIcmpv6Type packet too short: %d < 1", decoder.Length())
	}
	nxmicmpv6type.Value = uint8(decoder.ReadByte())
	return nxmicmpv6type, nil
}

func NewNxmIcmpv6Type() *NxmIcmpv6Type {
	return &NxmIcmpv6Type{
		Oxm: NewOxm(76289),
	}
}
func (self *NxmIcmpv6Type) GetValue() interface{} {
	return self.Value
}

func (self *NxmIcmpv6Type) GetName() string {
	return "nxm_icmpv6_type"
}

type NxmInPort struct {
	*Oxm
	Value []byte
}

func (self *NxmInPort) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmInPort(parent *Oxm, decoder *goloxi.Decoder) (*NxmInPort, error) {
	nxminport := &NxmInPort{Oxm: parent}
	nxminport.Value = decoder.Read(decoder.Length())
	return nxminport, nil
}

func NewNxmInPort() *NxmInPort {
	return &NxmInPort{
		Oxm: NewOxm(2),
	}
}
func (self *NxmInPort) GetValue() interface{} {
	return self.Value
}

func (self *NxmInPort) GetName() string {
	return "nxm_in_port"
}

type NxmIpDst struct {
	*Oxm
	Value net.IP
}

func (self *NxmIpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmIpDst(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpDst, error) {
	nxmipdst := &NxmIpDst{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmIpDst packet too short: %d < 4", decoder.Length())
	}
	nxmipdst.Value = net.IP(decoder.Read(4))
	return nxmipdst, nil
}

func NewNxmIpDst() *NxmIpDst {
	return &NxmIpDst{
		Oxm: NewOxm(4100),
	}
}
func (self *NxmIpDst) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpDst) GetName() string {
	return "nxm_ip_dst"
}

type NxmIpDstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmIpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmIpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpDstMasked, error) {
	nxmipdstmasked := &NxmIpDstMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmIpDstMasked packet too short: %d < 8", decoder.Length())
	}
	nxmipdstmasked.Value = net.IP(decoder.Read(4))
	nxmipdstmasked.ValueMask = net.IP(decoder.Read(4))
	return nxmipdstmasked, nil
}

func NewNxmIpDstMasked() *NxmIpDstMasked {
	return &NxmIpDstMasked{
		Oxm: NewOxm(4356),
	}
}
func (self *NxmIpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpDstMasked) GetName() string {
	return "nxm_ip_dst_masked"
}

type NxmIpFrag struct {
	*Oxm
	Value []byte
}

func (self *NxmIpFrag) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmIpFrag(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpFrag, error) {
	nxmipfrag := &NxmIpFrag{Oxm: parent}
	nxmipfrag.Value = decoder.Read(decoder.Length())
	return nxmipfrag, nil
}

func NewNxmIpFrag() *NxmIpFrag {
	return &NxmIpFrag{
		Oxm: NewOxm(78849),
	}
}
func (self *NxmIpFrag) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpFrag) GetName() string {
	return "nxm_ip_frag"
}

type NxmIpFragMasked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmIpFragMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmIpFragMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpFragMasked, error) {
	nxmipfragmasked := &NxmIpFragMasked{Oxm: parent}
	nxmipfragmasked.Value = decoder.Read(decoder.Length())
	nxmipfragmasked.ValueMask = decoder.Read(decoder.Length())
	return nxmipfragmasked, nil
}

func NewNxmIpFragMasked() *NxmIpFragMasked {
	return &NxmIpFragMasked{
		Oxm: NewOxm(79105),
	}
}
func (self *NxmIpFragMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpFragMasked) GetName() string {
	return "nxm_ip_frag_masked"
}

type NxmIpSrc struct {
	*Oxm
	Value net.IP
}

func (self *NxmIpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmIpSrc(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpSrc, error) {
	nxmipsrc := &NxmIpSrc{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmIpSrc packet too short: %d < 4", decoder.Length())
	}
	nxmipsrc.Value = net.IP(decoder.Read(4))
	return nxmipsrc, nil
}

func NewNxmIpSrc() *NxmIpSrc {
	return &NxmIpSrc{
		Oxm: NewOxm(3588),
	}
}
func (self *NxmIpSrc) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpSrc) GetName() string {
	return "nxm_ip_src"
}

type NxmIpSrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmIpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmIpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpSrcMasked, error) {
	nxmipsrcmasked := &NxmIpSrcMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmIpSrcMasked packet too short: %d < 8", decoder.Length())
	}
	nxmipsrcmasked.Value = net.IP(decoder.Read(4))
	nxmipsrcmasked.ValueMask = net.IP(decoder.Read(4))
	return nxmipsrcmasked, nil
}

func NewNxmIpSrcMasked() *NxmIpSrcMasked {
	return &NxmIpSrcMasked{
		Oxm: NewOxm(3844),
	}
}
func (self *NxmIpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpSrcMasked) GetName() string {
	return "nxm_ip_src_masked"
}

type NxmIpv6Dst struct {
	*Oxm
	Value net.IP
}

func (self *NxmIpv6Dst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeNxmIpv6Dst(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpv6Dst, error) {
	nxmipv6dst := &NxmIpv6Dst{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmIpv6Dst packet too short: %d < 16", decoder.Length())
	}
	nxmipv6dst.Value = net.IP(decoder.Read(16))
	return nxmipv6dst, nil
}

func NewNxmIpv6Dst() *NxmIpv6Dst {
	return &NxmIpv6Dst{
		Oxm: NewOxm(75792),
	}
}
func (self *NxmIpv6Dst) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpv6Dst) GetName() string {
	return "nxm_ipv6_dst"
}

type NxmIpv6DstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmIpv6DstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeNxmIpv6DstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpv6DstMasked, error) {
	nxmipv6dstmasked := &NxmIpv6DstMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmIpv6DstMasked packet too short: %d < 32", decoder.Length())
	}
	nxmipv6dstmasked.Value = net.IP(decoder.Read(16))
	nxmipv6dstmasked.ValueMask = net.IP(decoder.Read(16))
	return nxmipv6dstmasked, nil
}

func NewNxmIpv6DstMasked() *NxmIpv6DstMasked {
	return &NxmIpv6DstMasked{
		Oxm: NewOxm(76048),
	}
}
func (self *NxmIpv6DstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpv6DstMasked) GetName() string {
	return "nxm_ipv6_dst_masked"
}

type NxmIpv6Label struct {
	*Oxm
	Value uint32
}

func (self *NxmIpv6Label) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmIpv6Label(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpv6Label, error) {
	nxmipv6label := &NxmIpv6Label{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmIpv6Label packet too short: %d < 4", decoder.Length())
	}
	nxmipv6label.Value = uint32(decoder.ReadUint32())
	return nxmipv6label, nil
}

func NewNxmIpv6Label() *NxmIpv6Label {
	return &NxmIpv6Label{
		Oxm: NewOxm(79364),
	}
}
func (self *NxmIpv6Label) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpv6Label) GetName() string {
	return "nxm_ipv6_label"
}

type NxmIpv6LabelMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmIpv6LabelMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmIpv6LabelMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpv6LabelMasked, error) {
	nxmipv6labelmasked := &NxmIpv6LabelMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmIpv6LabelMasked packet too short: %d < 8", decoder.Length())
	}
	nxmipv6labelmasked.Value = uint32(decoder.ReadUint32())
	nxmipv6labelmasked.ValueMask = uint32(decoder.ReadUint32())
	return nxmipv6labelmasked, nil
}

func NewNxmIpv6LabelMasked() *NxmIpv6LabelMasked {
	return &NxmIpv6LabelMasked{
		Oxm: NewOxm(79620),
	}
}
func (self *NxmIpv6LabelMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpv6LabelMasked) GetName() string {
	return "nxm_ipv6_label_masked"
}

type NxmIpv6Src struct {
	*Oxm
	Value net.IP
}

func (self *NxmIpv6Src) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeNxmIpv6Src(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpv6Src, error) {
	nxmipv6src := &NxmIpv6Src{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmIpv6Src packet too short: %d < 16", decoder.Length())
	}
	nxmipv6src.Value = net.IP(decoder.Read(16))
	return nxmipv6src, nil
}

func NewNxmIpv6Src() *NxmIpv6Src {
	return &NxmIpv6Src{
		Oxm: NewOxm(75280),
	}
}
func (self *NxmIpv6Src) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpv6Src) GetName() string {
	return "nxm_ipv6_src"
}

type NxmIpv6SrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmIpv6SrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeNxmIpv6SrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmIpv6SrcMasked, error) {
	nxmipv6srcmasked := &NxmIpv6SrcMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmIpv6SrcMasked packet too short: %d < 32", decoder.Length())
	}
	nxmipv6srcmasked.Value = net.IP(decoder.Read(16))
	nxmipv6srcmasked.ValueMask = net.IP(decoder.Read(16))
	return nxmipv6srcmasked, nil
}

func NewNxmIpv6SrcMasked() *NxmIpv6SrcMasked {
	return &NxmIpv6SrcMasked{
		Oxm: NewOxm(75536),
	}
}
func (self *NxmIpv6SrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmIpv6SrcMasked) GetName() string {
	return "nxm_ipv6_src_masked"
}

type NxmMplsTtl struct {
	*Oxm
	Value uint8
}

func (self *NxmMplsTtl) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmMplsTtl(parent *Oxm, decoder *goloxi.Decoder) (*NxmMplsTtl, error) {
	nxmmplsttl := &NxmMplsTtl{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmMplsTtl packet too short: %d < 1", decoder.Length())
	}
	nxmmplsttl.Value = uint8(decoder.ReadByte())
	return nxmmplsttl, nil
}

func NewNxmMplsTtl() *NxmMplsTtl {
	return &NxmMplsTtl{
		Oxm: NewOxm(80897),
	}
}
func (self *NxmMplsTtl) GetValue() interface{} {
	return self.Value
}

func (self *NxmMplsTtl) GetName() string {
	return "nxm_mpls_ttl"
}

type NxmNdSll struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *NxmNdSll) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmNdSll(parent *Oxm, decoder *goloxi.Decoder) (*NxmNdSll, error) {
	nxmndsll := &NxmNdSll{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("NxmNdSll packet too short: %d < 6", decoder.Length())
	}
	nxmndsll.Value = net.HardwareAddr(decoder.Read(6))
	return nxmndsll, nil
}

func NewNxmNdSll() *NxmNdSll {
	return &NxmNdSll{
		Oxm: NewOxm(77830),
	}
}
func (self *NxmNdSll) GetValue() interface{} {
	return self.Value
}

func (self *NxmNdSll) GetName() string {
	return "nxm_nd_sll"
}

type NxmNdSllMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *NxmNdSllMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmNdSllMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmNdSllMasked, error) {
	nxmndsllmasked := &NxmNdSllMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("NxmNdSllMasked packet too short: %d < 12", decoder.Length())
	}
	nxmndsllmasked.Value = net.HardwareAddr(decoder.Read(6))
	nxmndsllmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return nxmndsllmasked, nil
}

func NewNxmNdSllMasked() *NxmNdSllMasked {
	return &NxmNdSllMasked{
		Oxm: NewOxm(78086),
	}
}
func (self *NxmNdSllMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmNdSllMasked) GetName() string {
	return "nxm_nd_sll_masked"
}

type NxmNdTarget struct {
	*Oxm
	Value net.IP
}

func (self *NxmNdTarget) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeNxmNdTarget(parent *Oxm, decoder *goloxi.Decoder) (*NxmNdTarget, error) {
	nxmndtarget := &NxmNdTarget{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmNdTarget packet too short: %d < 16", decoder.Length())
	}
	nxmndtarget.Value = net.IP(decoder.Read(16))
	return nxmndtarget, nil
}

func NewNxmNdTarget() *NxmNdTarget {
	return &NxmNdTarget{
		Oxm: NewOxm(77328),
	}
}
func (self *NxmNdTarget) GetValue() interface{} {
	return self.Value
}

func (self *NxmNdTarget) GetName() string {
	return "nxm_nd_target"
}

type NxmNdTargetMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmNdTargetMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeNxmNdTargetMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmNdTargetMasked, error) {
	nxmndtargetmasked := &NxmNdTargetMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmNdTargetMasked packet too short: %d < 32", decoder.Length())
	}
	nxmndtargetmasked.Value = net.IP(decoder.Read(16))
	nxmndtargetmasked.ValueMask = net.IP(decoder.Read(16))
	return nxmndtargetmasked, nil
}

func NewNxmNdTargetMasked() *NxmNdTargetMasked {
	return &NxmNdTargetMasked{
		Oxm: NewOxm(77584),
	}
}
func (self *NxmNdTargetMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmNdTargetMasked) GetName() string {
	return "nxm_nd_target_masked"
}

type NxmNdTll struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *NxmNdTll) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmNdTll(parent *Oxm, decoder *goloxi.Decoder) (*NxmNdTll, error) {
	nxmndtll := &NxmNdTll{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("NxmNdTll packet too short: %d < 6", decoder.Length())
	}
	nxmndtll.Value = net.HardwareAddr(decoder.Read(6))
	return nxmndtll, nil
}

func NewNxmNdTll() *NxmNdTll {
	return &NxmNdTll{
		Oxm: NewOxm(78342),
	}
}
func (self *NxmNdTll) GetValue() interface{} {
	return self.Value
}

func (self *NxmNdTll) GetName() string {
	return "nxm_nd_tll"
}

type NxmNdTllMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *NxmNdTllMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmNdTllMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmNdTllMasked, error) {
	nxmndtllmasked := &NxmNdTllMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("NxmNdTllMasked packet too short: %d < 12", decoder.Length())
	}
	nxmndtllmasked.Value = net.HardwareAddr(decoder.Read(6))
	nxmndtllmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return nxmndtllmasked, nil
}

func NewNxmNdTllMasked() *NxmNdTllMasked {
	return &NxmNdTllMasked{
		Oxm: NewOxm(78598),
	}
}
func (self *NxmNdTllMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmNdTllMasked) GetName() string {
	return "nxm_nd_tll_masked"
}

type NxmNwEcn struct {
	*Oxm
	Value uint8
}

func (self *NxmNwEcn) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmNwEcn(parent *Oxm, decoder *goloxi.Decoder) (*NxmNwEcn, error) {
	nxmnwecn := &NxmNwEcn{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmNwEcn packet too short: %d < 1", decoder.Length())
	}
	nxmnwecn.Value = uint8(decoder.ReadByte())
	return nxmnwecn, nil
}

func NewNxmNwEcn() *NxmNwEcn {
	return &NxmNwEcn{
		Oxm: NewOxm(79873),
	}
}
func (self *NxmNwEcn) GetValue() interface{} {
	return self.Value
}

func (self *NxmNwEcn) GetName() string {
	return "nxm_nw_ecn"
}

type NxmNwProto struct {
	*Oxm
	Value uint8
}

func (self *NxmNwProto) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmNwProto(parent *Oxm, decoder *goloxi.Decoder) (*NxmNwProto, error) {
	nxmnwproto := &NxmNwProto{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmNwProto packet too short: %d < 1", decoder.Length())
	}
	nxmnwproto.Value = uint8(decoder.ReadByte())
	return nxmnwproto, nil
}

func NewNxmNwProto() *NxmNwProto {
	return &NxmNwProto{
		Oxm: NewOxm(3073),
	}
}
func (self *NxmNwProto) GetValue() interface{} {
	return self.Value
}

func (self *NxmNwProto) GetName() string {
	return "nxm_nw_proto"
}

type NxmNwTos struct {
	*Oxm
	Value uint8
}

func (self *NxmNwTos) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmNwTos(parent *Oxm, decoder *goloxi.Decoder) (*NxmNwTos, error) {
	nxmnwtos := &NxmNwTos{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmNwTos packet too short: %d < 1", decoder.Length())
	}
	nxmnwtos.Value = uint8(decoder.ReadByte())
	return nxmnwtos, nil
}

func NewNxmNwTos() *NxmNwTos {
	return &NxmNwTos{
		Oxm: NewOxm(2561),
	}
}
func (self *NxmNwTos) GetValue() interface{} {
	return self.Value
}

func (self *NxmNwTos) GetName() string {
	return "nxm_nw_tos"
}

type NxmNwTtl struct {
	*Oxm
	Value uint8
}

func (self *NxmNwTtl) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmNwTtl(parent *Oxm, decoder *goloxi.Decoder) (*NxmNwTtl, error) {
	nxmnwttl := &NxmNwTtl{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmNwTtl packet too short: %d < 1", decoder.Length())
	}
	nxmnwttl.Value = uint8(decoder.ReadByte())
	return nxmnwttl, nil
}

func NewNxmNwTtl() *NxmNwTtl {
	return &NxmNwTtl{
		Oxm: NewOxm(80385),
	}
}
func (self *NxmNwTtl) GetValue() interface{} {
	return self.Value
}

func (self *NxmNwTtl) GetName() string {
	return "nxm_nw_ttl"
}

type NxmPktMark struct {
	*Oxm
	Value uint32
}

func (self *NxmPktMark) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmPktMark(parent *Oxm, decoder *goloxi.Decoder) (*NxmPktMark, error) {
	nxmpktmark := &NxmPktMark{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmPktMark packet too short: %d < 4", decoder.Length())
	}
	nxmpktmark.Value = uint32(decoder.ReadUint32())
	return nxmpktmark, nil
}

func NewNxmPktMark() *NxmPktMark {
	return &NxmPktMark{
		Oxm: NewOxm(82436),
	}
}
func (self *NxmPktMark) GetValue() interface{} {
	return self.Value
}

func (self *NxmPktMark) GetName() string {
	return "nxm_pkt_mark"
}

type NxmPktMarkMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmPktMarkMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmPktMarkMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmPktMarkMasked, error) {
	nxmpktmarkmasked := &NxmPktMarkMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmPktMarkMasked packet too short: %d < 8", decoder.Length())
	}
	nxmpktmarkmasked.Value = uint32(decoder.ReadUint32())
	nxmpktmarkmasked.ValueMask = uint32(decoder.ReadUint32())
	return nxmpktmarkmasked, nil
}

func NewNxmPktMarkMasked() *NxmPktMarkMasked {
	return &NxmPktMarkMasked{
		Oxm: NewOxm(82692),
	}
}
func (self *NxmPktMarkMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmPktMarkMasked) GetName() string {
	return "nxm_pkt_mark_masked"
}

type NxmRecircId struct {
	*Oxm
	Value uint32
}

func (self *NxmRecircId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmRecircId(parent *Oxm, decoder *goloxi.Decoder) (*NxmRecircId, error) {
	nxmrecircid := &NxmRecircId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmRecircId packet too short: %d < 4", decoder.Length())
	}
	nxmrecircid.Value = uint32(decoder.ReadUint32())
	return nxmrecircid, nil
}

func NewNxmRecircId() *NxmRecircId {
	return &NxmRecircId{
		Oxm: NewOxm(83972),
	}
}
func (self *NxmRecircId) GetValue() interface{} {
	return self.Value
}

func (self *NxmRecircId) GetName() string {
	return "nxm_recirc_id"
}

type NxmReg0 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg0) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg0(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg0, error) {
	nxmreg0 := &NxmReg0{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg0 packet too short: %d < 4", decoder.Length())
	}
	nxmreg0.Value = uint32(decoder.ReadUint32())
	return nxmreg0, nil
}

func NewNxmReg0() *NxmReg0 {
	return &NxmReg0{
		Oxm: NewOxm(65540),
	}
}
func (self *NxmReg0) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg0) GetName() string {
	return "nxm_reg0"
}

type NxmReg0Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg0Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg0Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg0Masked, error) {
	nxmreg0masked := &NxmReg0Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg0Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg0masked.Value = uint32(decoder.ReadUint32())
	nxmreg0masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg0masked, nil
}

func NewNxmReg0Masked() *NxmReg0Masked {
	return &NxmReg0Masked{
		Oxm: NewOxm(65796),
	}
}
func (self *NxmReg0Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg0Masked) GetName() string {
	return "nxm_reg0_masked"
}

type NxmReg1 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg1) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg1(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg1, error) {
	nxmreg1 := &NxmReg1{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg1 packet too short: %d < 4", decoder.Length())
	}
	nxmreg1.Value = uint32(decoder.ReadUint32())
	return nxmreg1, nil
}

func NewNxmReg1() *NxmReg1 {
	return &NxmReg1{
		Oxm: NewOxm(66052),
	}
}
func (self *NxmReg1) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg1) GetName() string {
	return "nxm_reg1"
}

type NxmReg10 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg10) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg10(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg10, error) {
	nxmreg10 := &NxmReg10{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg10 packet too short: %d < 4", decoder.Length())
	}
	nxmreg10.Value = uint32(decoder.ReadUint32())
	return nxmreg10, nil
}

func NewNxmReg10() *NxmReg10 {
	return &NxmReg10{
		Oxm: NewOxm(70660),
	}
}
func (self *NxmReg10) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg10) GetName() string {
	return "nxm_reg10"
}

type NxmReg10Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg10Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg10Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg10Masked, error) {
	nxmreg10masked := &NxmReg10Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg10Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg10masked.Value = uint32(decoder.ReadUint32())
	nxmreg10masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg10masked, nil
}

func NewNxmReg10Masked() *NxmReg10Masked {
	return &NxmReg10Masked{
		Oxm: NewOxm(70916),
	}
}
func (self *NxmReg10Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg10Masked) GetName() string {
	return "nxm_reg10_masked"
}

type NxmReg11 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg11) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg11(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg11, error) {
	nxmreg11 := &NxmReg11{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg11 packet too short: %d < 4", decoder.Length())
	}
	nxmreg11.Value = uint32(decoder.ReadUint32())
	return nxmreg11, nil
}

func NewNxmReg11() *NxmReg11 {
	return &NxmReg11{
		Oxm: NewOxm(71172),
	}
}
func (self *NxmReg11) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg11) GetName() string {
	return "nxm_reg11"
}

type NxmReg11Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg11Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg11Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg11Masked, error) {
	nxmreg11masked := &NxmReg11Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg11Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg11masked.Value = uint32(decoder.ReadUint32())
	nxmreg11masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg11masked, nil
}

func NewNxmReg11Masked() *NxmReg11Masked {
	return &NxmReg11Masked{
		Oxm: NewOxm(71428),
	}
}
func (self *NxmReg11Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg11Masked) GetName() string {
	return "nxm_reg11_masked"
}

type NxmReg12 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg12) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg12(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg12, error) {
	nxmreg12 := &NxmReg12{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg12 packet too short: %d < 4", decoder.Length())
	}
	nxmreg12.Value = uint32(decoder.ReadUint32())
	return nxmreg12, nil
}

func NewNxmReg12() *NxmReg12 {
	return &NxmReg12{
		Oxm: NewOxm(71684),
	}
}
func (self *NxmReg12) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg12) GetName() string {
	return "nxm_reg12"
}

type NxmReg12Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg12Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg12Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg12Masked, error) {
	nxmreg12masked := &NxmReg12Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg12Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg12masked.Value = uint32(decoder.ReadUint32())
	nxmreg12masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg12masked, nil
}

func NewNxmReg12Masked() *NxmReg12Masked {
	return &NxmReg12Masked{
		Oxm: NewOxm(71940),
	}
}
func (self *NxmReg12Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg12Masked) GetName() string {
	return "nxm_reg12_masked"
}

type NxmReg13 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg13) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg13(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg13, error) {
	nxmreg13 := &NxmReg13{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg13 packet too short: %d < 4", decoder.Length())
	}
	nxmreg13.Value = uint32(decoder.ReadUint32())
	return nxmreg13, nil
}

func NewNxmReg13() *NxmReg13 {
	return &NxmReg13{
		Oxm: NewOxm(72196),
	}
}
func (self *NxmReg13) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg13) GetName() string {
	return "nxm_reg13"
}

type NxmReg13Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg13Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg13Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg13Masked, error) {
	nxmreg13masked := &NxmReg13Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg13Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg13masked.Value = uint32(decoder.ReadUint32())
	nxmreg13masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg13masked, nil
}

func NewNxmReg13Masked() *NxmReg13Masked {
	return &NxmReg13Masked{
		Oxm: NewOxm(72452),
	}
}
func (self *NxmReg13Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg13Masked) GetName() string {
	return "nxm_reg13_masked"
}

type NxmReg14 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg14) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg14(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg14, error) {
	nxmreg14 := &NxmReg14{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg14 packet too short: %d < 4", decoder.Length())
	}
	nxmreg14.Value = uint32(decoder.ReadUint32())
	return nxmreg14, nil
}

func NewNxmReg14() *NxmReg14 {
	return &NxmReg14{
		Oxm: NewOxm(72708),
	}
}
func (self *NxmReg14) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg14) GetName() string {
	return "nxm_reg14"
}

type NxmReg14Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg14Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg14Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg14Masked, error) {
	nxmreg14masked := &NxmReg14Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg14Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg14masked.Value = uint32(decoder.ReadUint32())
	nxmreg14masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg14masked, nil
}

func NewNxmReg14Masked() *NxmReg14Masked {
	return &NxmReg14Masked{
		Oxm: NewOxm(72964),
	}
}
func (self *NxmReg14Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg14Masked) GetName() string {
	return "nxm_reg14_masked"
}

type NxmReg15 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg15) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg15(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg15, error) {
	nxmreg15 := &NxmReg15{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg15 packet too short: %d < 4", decoder.Length())
	}
	nxmreg15.Value = uint32(decoder.ReadUint32())
	return nxmreg15, nil
}

func NewNxmReg15() *NxmReg15 {
	return &NxmReg15{
		Oxm: NewOxm(73220),
	}
}
func (self *NxmReg15) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg15) GetName() string {
	return "nxm_reg15"
}

type NxmReg15Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg15Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg15Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg15Masked, error) {
	nxmreg15masked := &NxmReg15Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg15Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg15masked.Value = uint32(decoder.ReadUint32())
	nxmreg15masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg15masked, nil
}

func NewNxmReg15Masked() *NxmReg15Masked {
	return &NxmReg15Masked{
		Oxm: NewOxm(73476),
	}
}
func (self *NxmReg15Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg15Masked) GetName() string {
	return "nxm_reg15_masked"
}

type NxmReg1Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg1Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg1Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg1Masked, error) {
	nxmreg1masked := &NxmReg1Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg1Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg1masked.Value = uint32(decoder.ReadUint32())
	nxmreg1masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg1masked, nil
}

func NewNxmReg1Masked() *NxmReg1Masked {
	return &NxmReg1Masked{
		Oxm: NewOxm(66308),
	}
}
func (self *NxmReg1Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg1Masked) GetName() string {
	return "nxm_reg1_masked"
}

type NxmReg2 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg2) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg2(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg2, error) {
	nxmreg2 := &NxmReg2{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg2 packet too short: %d < 4", decoder.Length())
	}
	nxmreg2.Value = uint32(decoder.ReadUint32())
	return nxmreg2, nil
}

func NewNxmReg2() *NxmReg2 {
	return &NxmReg2{
		Oxm: NewOxm(66564),
	}
}
func (self *NxmReg2) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg2) GetName() string {
	return "nxm_reg2"
}

type NxmReg2Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg2Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg2Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg2Masked, error) {
	nxmreg2masked := &NxmReg2Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg2Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg2masked.Value = uint32(decoder.ReadUint32())
	nxmreg2masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg2masked, nil
}

func NewNxmReg2Masked() *NxmReg2Masked {
	return &NxmReg2Masked{
		Oxm: NewOxm(66820),
	}
}
func (self *NxmReg2Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg2Masked) GetName() string {
	return "nxm_reg2_masked"
}

type NxmReg3 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg3) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg3(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg3, error) {
	nxmreg3 := &NxmReg3{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg3 packet too short: %d < 4", decoder.Length())
	}
	nxmreg3.Value = uint32(decoder.ReadUint32())
	return nxmreg3, nil
}

func NewNxmReg3() *NxmReg3 {
	return &NxmReg3{
		Oxm: NewOxm(67076),
	}
}
func (self *NxmReg3) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg3) GetName() string {
	return "nxm_reg3"
}

type NxmReg3Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg3Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg3Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg3Masked, error) {
	nxmreg3masked := &NxmReg3Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg3Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg3masked.Value = uint32(decoder.ReadUint32())
	nxmreg3masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg3masked, nil
}

func NewNxmReg3Masked() *NxmReg3Masked {
	return &NxmReg3Masked{
		Oxm: NewOxm(67332),
	}
}
func (self *NxmReg3Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg3Masked) GetName() string {
	return "nxm_reg3_masked"
}

type NxmReg4 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg4) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg4(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg4, error) {
	nxmreg4 := &NxmReg4{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg4 packet too short: %d < 4", decoder.Length())
	}
	nxmreg4.Value = uint32(decoder.ReadUint32())
	return nxmreg4, nil
}

func NewNxmReg4() *NxmReg4 {
	return &NxmReg4{
		Oxm: NewOxm(67588),
	}
}
func (self *NxmReg4) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg4) GetName() string {
	return "nxm_reg4"
}

type NxmReg4Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg4Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg4Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg4Masked, error) {
	nxmreg4masked := &NxmReg4Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg4Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg4masked.Value = uint32(decoder.ReadUint32())
	nxmreg4masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg4masked, nil
}

func NewNxmReg4Masked() *NxmReg4Masked {
	return &NxmReg4Masked{
		Oxm: NewOxm(67844),
	}
}
func (self *NxmReg4Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg4Masked) GetName() string {
	return "nxm_reg4_masked"
}

type NxmReg5 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg5) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg5(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg5, error) {
	nxmreg5 := &NxmReg5{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg5 packet too short: %d < 4", decoder.Length())
	}
	nxmreg5.Value = uint32(decoder.ReadUint32())
	return nxmreg5, nil
}

func NewNxmReg5() *NxmReg5 {
	return &NxmReg5{
		Oxm: NewOxm(68100),
	}
}
func (self *NxmReg5) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg5) GetName() string {
	return "nxm_reg5"
}

type NxmReg5Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg5Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg5Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg5Masked, error) {
	nxmreg5masked := &NxmReg5Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg5Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg5masked.Value = uint32(decoder.ReadUint32())
	nxmreg5masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg5masked, nil
}

func NewNxmReg5Masked() *NxmReg5Masked {
	return &NxmReg5Masked{
		Oxm: NewOxm(68356),
	}
}
func (self *NxmReg5Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg5Masked) GetName() string {
	return "nxm_reg5_masked"
}

type NxmReg6 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg6) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg6(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg6, error) {
	nxmreg6 := &NxmReg6{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg6 packet too short: %d < 4", decoder.Length())
	}
	nxmreg6.Value = uint32(decoder.ReadUint32())
	return nxmreg6, nil
}

func NewNxmReg6() *NxmReg6 {
	return &NxmReg6{
		Oxm: NewOxm(68612),
	}
}
func (self *NxmReg6) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg6) GetName() string {
	return "nxm_reg6"
}

type NxmReg6Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg6Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg6Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg6Masked, error) {
	nxmreg6masked := &NxmReg6Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg6Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg6masked.Value = uint32(decoder.ReadUint32())
	nxmreg6masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg6masked, nil
}

func NewNxmReg6Masked() *NxmReg6Masked {
	return &NxmReg6Masked{
		Oxm: NewOxm(68868),
	}
}
func (self *NxmReg6Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg6Masked) GetName() string {
	return "nxm_reg6_masked"
}

type NxmReg7 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg7) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg7(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg7, error) {
	nxmreg7 := &NxmReg7{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg7 packet too short: %d < 4", decoder.Length())
	}
	nxmreg7.Value = uint32(decoder.ReadUint32())
	return nxmreg7, nil
}

func NewNxmReg7() *NxmReg7 {
	return &NxmReg7{
		Oxm: NewOxm(69124),
	}
}
func (self *NxmReg7) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg7) GetName() string {
	return "nxm_reg7"
}

type NxmReg7Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg7Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg7Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg7Masked, error) {
	nxmreg7masked := &NxmReg7Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg7Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg7masked.Value = uint32(decoder.ReadUint32())
	nxmreg7masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg7masked, nil
}

func NewNxmReg7Masked() *NxmReg7Masked {
	return &NxmReg7Masked{
		Oxm: NewOxm(69380),
	}
}
func (self *NxmReg7Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg7Masked) GetName() string {
	return "nxm_reg7_masked"
}

type NxmReg8 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg8) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg8(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg8, error) {
	nxmreg8 := &NxmReg8{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg8 packet too short: %d < 4", decoder.Length())
	}
	nxmreg8.Value = uint32(decoder.ReadUint32())
	return nxmreg8, nil
}

func NewNxmReg8() *NxmReg8 {
	return &NxmReg8{
		Oxm: NewOxm(69636),
	}
}
func (self *NxmReg8) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg8) GetName() string {
	return "nxm_reg8"
}

type NxmReg8Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg8Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg8Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg8Masked, error) {
	nxmreg8masked := &NxmReg8Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg8Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg8masked.Value = uint32(decoder.ReadUint32())
	nxmreg8masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg8masked, nil
}

func NewNxmReg8Masked() *NxmReg8Masked {
	return &NxmReg8Masked{
		Oxm: NewOxm(69892),
	}
}
func (self *NxmReg8Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg8Masked) GetName() string {
	return "nxm_reg8_masked"
}

type NxmReg9 struct {
	*Oxm
	Value uint32
}

func (self *NxmReg9) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeNxmReg9(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg9, error) {
	nxmreg9 := &NxmReg9{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmReg9 packet too short: %d < 4", decoder.Length())
	}
	nxmreg9.Value = uint32(decoder.ReadUint32())
	return nxmreg9, nil
}

func NewNxmReg9() *NxmReg9 {
	return &NxmReg9{
		Oxm: NewOxm(70148),
	}
}
func (self *NxmReg9) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg9) GetName() string {
	return "nxm_reg9"
}

type NxmReg9Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *NxmReg9Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeNxmReg9Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmReg9Masked, error) {
	nxmreg9masked := &NxmReg9Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmReg9Masked packet too short: %d < 8", decoder.Length())
	}
	nxmreg9masked.Value = uint32(decoder.ReadUint32())
	nxmreg9masked.ValueMask = uint32(decoder.ReadUint32())
	return nxmreg9masked, nil
}

func NewNxmReg9Masked() *NxmReg9Masked {
	return &NxmReg9Masked{
		Oxm: NewOxm(70404),
	}
}
func (self *NxmReg9Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmReg9Masked) GetName() string {
	return "nxm_reg9_masked"
}

type NxmTcpDst struct {
	*Oxm
	Value uint16
}

func (self *NxmTcpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmTcpDst(parent *Oxm, decoder *goloxi.Decoder) (*NxmTcpDst, error) {
	nxmtcpdst := &NxmTcpDst{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmTcpDst packet too short: %d < 2", decoder.Length())
	}
	nxmtcpdst.Value = uint16(decoder.ReadUint16())
	return nxmtcpdst, nil
}

func NewNxmTcpDst() *NxmTcpDst {
	return &NxmTcpDst{
		Oxm: NewOxm(5122),
	}
}
func (self *NxmTcpDst) GetValue() interface{} {
	return self.Value
}

func (self *NxmTcpDst) GetName() string {
	return "nxm_tcp_dst"
}

type NxmTcpDstMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmTcpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmTcpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTcpDstMasked, error) {
	nxmtcpdstmasked := &NxmTcpDstMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmTcpDstMasked packet too short: %d < 4", decoder.Length())
	}
	nxmtcpdstmasked.Value = uint16(decoder.ReadUint16())
	nxmtcpdstmasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmtcpdstmasked, nil
}

func NewNxmTcpDstMasked() *NxmTcpDstMasked {
	return &NxmTcpDstMasked{
		Oxm: NewOxm(5378),
	}
}
func (self *NxmTcpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTcpDstMasked) GetName() string {
	return "nxm_tcp_dst_masked"
}

type NxmTcpFlags struct {
	*Oxm
	Value []byte
}

func (self *NxmTcpFlags) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTcpFlags(parent *Oxm, decoder *goloxi.Decoder) (*NxmTcpFlags, error) {
	nxmtcpflags := &NxmTcpFlags{Oxm: parent}
	nxmtcpflags.Value = decoder.Read(decoder.Length())
	return nxmtcpflags, nil
}

func NewNxmTcpFlags() *NxmTcpFlags {
	return &NxmTcpFlags{
		Oxm: NewOxm(82946),
	}
}
func (self *NxmTcpFlags) GetValue() interface{} {
	return self.Value
}

func (self *NxmTcpFlags) GetName() string {
	return "nxm_tcp_flags"
}

type NxmTcpFlagsMasked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTcpFlagsMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTcpFlagsMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTcpFlagsMasked, error) {
	nxmtcpflagsmasked := &NxmTcpFlagsMasked{Oxm: parent}
	nxmtcpflagsmasked.Value = decoder.Read(decoder.Length())
	nxmtcpflagsmasked.ValueMask = decoder.Read(decoder.Length())
	return nxmtcpflagsmasked, nil
}

func NewNxmTcpFlagsMasked() *NxmTcpFlagsMasked {
	return &NxmTcpFlagsMasked{
		Oxm: NewOxm(83202),
	}
}
func (self *NxmTcpFlagsMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTcpFlagsMasked) GetName() string {
	return "nxm_tcp_flags_masked"
}

type NxmTcpSrc struct {
	*Oxm
	Value uint16
}

func (self *NxmTcpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmTcpSrc(parent *Oxm, decoder *goloxi.Decoder) (*NxmTcpSrc, error) {
	nxmtcpsrc := &NxmTcpSrc{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmTcpSrc packet too short: %d < 2", decoder.Length())
	}
	nxmtcpsrc.Value = uint16(decoder.ReadUint16())
	return nxmtcpsrc, nil
}

func NewNxmTcpSrc() *NxmTcpSrc {
	return &NxmTcpSrc{
		Oxm: NewOxm(4610),
	}
}
func (self *NxmTcpSrc) GetValue() interface{} {
	return self.Value
}

func (self *NxmTcpSrc) GetName() string {
	return "nxm_tcp_src"
}

type NxmTcpSrcMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmTcpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmTcpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTcpSrcMasked, error) {
	nxmtcpsrcmasked := &NxmTcpSrcMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmTcpSrcMasked packet too short: %d < 4", decoder.Length())
	}
	nxmtcpsrcmasked.Value = uint16(decoder.ReadUint16())
	nxmtcpsrcmasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmtcpsrcmasked, nil
}

func NewNxmTcpSrcMasked() *NxmTcpSrcMasked {
	return &NxmTcpSrcMasked{
		Oxm: NewOxm(4866),
	}
}
func (self *NxmTcpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTcpSrcMasked) GetName() string {
	return "nxm_tcp_src_masked"
}

type NxmTunDst struct {
	*Oxm
	Value net.IP
}

func (self *NxmTunDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmTunDst(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunDst, error) {
	nxmtundst := &NxmTunDst{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmTunDst packet too short: %d < 4", decoder.Length())
	}
	nxmtundst.Value = net.IP(decoder.Read(4))
	return nxmtundst, nil
}

func NewNxmTunDst() *NxmTunDst {
	return &NxmTunDst{
		Oxm: NewOxm(81924),
	}
}
func (self *NxmTunDst) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunDst) GetName() string {
	return "nxm_tun_dst"
}

type NxmTunDstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmTunDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmTunDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunDstMasked, error) {
	nxmtundstmasked := &NxmTunDstMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmTunDstMasked packet too short: %d < 8", decoder.Length())
	}
	nxmtundstmasked.Value = net.IP(decoder.Read(4))
	nxmtundstmasked.ValueMask = net.IP(decoder.Read(4))
	return nxmtundstmasked, nil
}

func NewNxmTunDstMasked() *NxmTunDstMasked {
	return &NxmTunDstMasked{
		Oxm: NewOxm(82180),
	}
}
func (self *NxmTunDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunDstMasked) GetName() string {
	return "nxm_tun_dst_masked"
}

type NxmTunFlags struct {
	*Oxm
	Value []byte
}

func (self *NxmTunFlags) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunFlags(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunFlags, error) {
	nxmtunflags := &NxmTunFlags{Oxm: parent}
	nxmtunflags.Value = decoder.Read(decoder.Length())
	return nxmtunflags, nil
}

func NewNxmTunFlags() *NxmTunFlags {
	return &NxmTunFlags{
		Oxm: NewOxm(118786),
	}
}
func (self *NxmTunFlags) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunFlags) GetName() string {
	return "nxm_tun_flags"
}

type NxmTunFlagsMasked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunFlagsMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunFlagsMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunFlagsMasked, error) {
	nxmtunflagsmasked := &NxmTunFlagsMasked{Oxm: parent}
	nxmtunflagsmasked.Value = decoder.Read(decoder.Length())
	nxmtunflagsmasked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunflagsmasked, nil
}

func NewNxmTunFlagsMasked() *NxmTunFlagsMasked {
	return &NxmTunFlagsMasked{
		Oxm: NewOxm(119042),
	}
}
func (self *NxmTunFlagsMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunFlagsMasked) GetName() string {
	return "nxm_tun_flags_masked"
}

type NxmTunGbpFlags struct {
	*Oxm
	Value uint8
}

func (self *NxmTunGbpFlags) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeNxmTunGbpFlags(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunGbpFlags, error) {
	nxmtungbpflags := &NxmTunGbpFlags{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("NxmTunGbpFlags packet too short: %d < 1", decoder.Length())
	}
	nxmtungbpflags.Value = uint8(decoder.ReadByte())
	return nxmtungbpflags, nil
}

func NewNxmTunGbpFlags() *NxmTunGbpFlags {
	return &NxmTunGbpFlags{
		Oxm: NewOxm(85505),
	}
}
func (self *NxmTunGbpFlags) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunGbpFlags) GetName() string {
	return "nxm_tun_gbp_flags"
}

type NxmTunGbpFlagsMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *NxmTunGbpFlagsMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeNxmTunGbpFlagsMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunGbpFlagsMasked, error) {
	nxmtungbpflagsmasked := &NxmTunGbpFlagsMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmTunGbpFlagsMasked packet too short: %d < 2", decoder.Length())
	}
	nxmtungbpflagsmasked.Value = uint8(decoder.ReadByte())
	nxmtungbpflagsmasked.ValueMask = uint8(decoder.ReadByte())
	return nxmtungbpflagsmasked, nil
}

func NewNxmTunGbpFlagsMasked() *NxmTunGbpFlagsMasked {
	return &NxmTunGbpFlagsMasked{
		Oxm: NewOxm(85761),
	}
}
func (self *NxmTunGbpFlagsMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunGbpFlagsMasked) GetName() string {
	return "nxm_tun_gbp_flags_masked"
}

type NxmTunGbpId struct {
	*Oxm
	Value uint16
}

func (self *NxmTunGbpId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmTunGbpId(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunGbpId, error) {
	nxmtungbpid := &NxmTunGbpId{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmTunGbpId packet too short: %d < 2", decoder.Length())
	}
	nxmtungbpid.Value = uint16(decoder.ReadUint16())
	return nxmtungbpid, nil
}

func NewNxmTunGbpId() *NxmTunGbpId {
	return &NxmTunGbpId{
		Oxm: NewOxm(84994),
	}
}
func (self *NxmTunGbpId) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunGbpId) GetName() string {
	return "nxm_tun_gbp_id"
}

type NxmTunGbpIdMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmTunGbpIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmTunGbpIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunGbpIdMasked, error) {
	nxmtungbpidmasked := &NxmTunGbpIdMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmTunGbpIdMasked packet too short: %d < 4", decoder.Length())
	}
	nxmtungbpidmasked.Value = uint16(decoder.ReadUint16())
	nxmtungbpidmasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmtungbpidmasked, nil
}

func NewNxmTunGbpIdMasked() *NxmTunGbpIdMasked {
	return &NxmTunGbpIdMasked{
		Oxm: NewOxm(85250),
	}
}
func (self *NxmTunGbpIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunGbpIdMasked) GetName() string {
	return "nxm_tun_gbp_id_masked"
}

type NxmTunId struct {
	*Oxm
	Value uint64
}

func (self *NxmTunId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint64(uint64(self.Value))

	return nil
}

func decodeNxmTunId(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunId, error) {
	nxmtunid := &NxmTunId{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmTunId packet too short: %d < 8", decoder.Length())
	}
	nxmtunid.Value = uint64(decoder.ReadUint64())
	return nxmtunid, nil
}

func NewNxmTunId() *NxmTunId {
	return &NxmTunId{
		Oxm: NewOxm(73736),
	}
}
func (self *NxmTunId) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunId) GetName() string {
	return "nxm_tun_id"
}

type NxmTunIdMasked struct {
	*Oxm
	Value     uint64
	ValueMask uint64
}

func (self *NxmTunIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint64(uint64(self.Value))
	encoder.PutUint64(uint64(self.ValueMask))

	return nil
}

func decodeNxmTunIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunIdMasked, error) {
	nxmtunidmasked := &NxmTunIdMasked{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmTunIdMasked packet too short: %d < 16", decoder.Length())
	}
	nxmtunidmasked.Value = uint64(decoder.ReadUint64())
	nxmtunidmasked.ValueMask = uint64(decoder.ReadUint64())
	return nxmtunidmasked, nil
}

func NewNxmTunIdMasked() *NxmTunIdMasked {
	return &NxmTunIdMasked{
		Oxm: NewOxm(73992),
	}
}
func (self *NxmTunIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunIdMasked) GetName() string {
	return "nxm_tun_id_masked"
}

type NxmTunIpv6Dst struct {
	*Oxm
	Value net.IP
}

func (self *NxmTunIpv6Dst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeNxmTunIpv6Dst(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunIpv6Dst, error) {
	nxmtunipv6dst := &NxmTunIpv6Dst{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmTunIpv6Dst packet too short: %d < 16", decoder.Length())
	}
	nxmtunipv6dst.Value = net.IP(decoder.Read(16))
	return nxmtunipv6dst, nil
}

func NewNxmTunIpv6Dst() *NxmTunIpv6Dst {
	return &NxmTunIpv6Dst{
		Oxm: NewOxm(121872),
	}
}
func (self *NxmTunIpv6Dst) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunIpv6Dst) GetName() string {
	return "nxm_tun_ipv6_dst"
}

type NxmTunIpv6DstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmTunIpv6DstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeNxmTunIpv6DstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunIpv6DstMasked, error) {
	nxmtunipv6dstmasked := &NxmTunIpv6DstMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmTunIpv6DstMasked packet too short: %d < 32", decoder.Length())
	}
	nxmtunipv6dstmasked.Value = net.IP(decoder.Read(16))
	nxmtunipv6dstmasked.ValueMask = net.IP(decoder.Read(16))
	return nxmtunipv6dstmasked, nil
}

func NewNxmTunIpv6DstMasked() *NxmTunIpv6DstMasked {
	return &NxmTunIpv6DstMasked{
		Oxm: NewOxm(122128),
	}
}
func (self *NxmTunIpv6DstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunIpv6DstMasked) GetName() string {
	return "nxm_tun_ipv6_dst_masked"
}

type NxmTunIpv6Src struct {
	*Oxm
	Value net.IP
}

func (self *NxmTunIpv6Src) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeNxmTunIpv6Src(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunIpv6Src, error) {
	nxmtunipv6src := &NxmTunIpv6Src{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmTunIpv6Src packet too short: %d < 16", decoder.Length())
	}
	nxmtunipv6src.Value = net.IP(decoder.Read(16))
	return nxmtunipv6src, nil
}

func NewNxmTunIpv6Src() *NxmTunIpv6Src {
	return &NxmTunIpv6Src{
		Oxm: NewOxm(121360),
	}
}
func (self *NxmTunIpv6Src) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunIpv6Src) GetName() string {
	return "nxm_tun_ipv6_src"
}

type NxmTunIpv6SrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmTunIpv6SrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeNxmTunIpv6SrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunIpv6SrcMasked, error) {
	nxmtunipv6srcmasked := &NxmTunIpv6SrcMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmTunIpv6SrcMasked packet too short: %d < 32", decoder.Length())
	}
	nxmtunipv6srcmasked.Value = net.IP(decoder.Read(16))
	nxmtunipv6srcmasked.ValueMask = net.IP(decoder.Read(16))
	return nxmtunipv6srcmasked, nil
}

func NewNxmTunIpv6SrcMasked() *NxmTunIpv6SrcMasked {
	return &NxmTunIpv6SrcMasked{
		Oxm: NewOxm(121616),
	}
}
func (self *NxmTunIpv6SrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunIpv6SrcMasked) GetName() string {
	return "nxm_tun_ipv6_src_masked"
}

type NxmTunMetadata0 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata0) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata0(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata0, error) {
	nxmtunmetadata0 := &NxmTunMetadata0{Oxm: parent}
	nxmtunmetadata0.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata0, nil
}

func NewNxmTunMetadata0() *NxmTunMetadata0 {
	return &NxmTunMetadata0{
		Oxm: NewOxm(86140),
	}
}
func (self *NxmTunMetadata0) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata0) GetName() string {
	return "nxm_tun_metadata0"
}

type NxmTunMetadata0Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata0Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata0Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata0Masked, error) {
	nxmtunmetadata0masked := &NxmTunMetadata0Masked{Oxm: parent}
	nxmtunmetadata0masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata0masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata0masked, nil
}

func NewNxmTunMetadata0Masked() *NxmTunMetadata0Masked {
	return &NxmTunMetadata0Masked{
		Oxm: NewOxm(86396),
	}
}
func (self *NxmTunMetadata0Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata0Masked) GetName() string {
	return "nxm_tun_metadata0_masked"
}

type NxmTunMetadata1 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata1) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata1(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata1, error) {
	nxmtunmetadata1 := &NxmTunMetadata1{Oxm: parent}
	nxmtunmetadata1.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata1, nil
}

func NewNxmTunMetadata1() *NxmTunMetadata1 {
	return &NxmTunMetadata1{
		Oxm: NewOxm(86652),
	}
}
func (self *NxmTunMetadata1) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata1) GetName() string {
	return "nxm_tun_metadata1"
}

type NxmTunMetadata10 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata10) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata10(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata10, error) {
	nxmtunmetadata10 := &NxmTunMetadata10{Oxm: parent}
	nxmtunmetadata10.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata10, nil
}

func NewNxmTunMetadata10() *NxmTunMetadata10 {
	return &NxmTunMetadata10{
		Oxm: NewOxm(91260),
	}
}
func (self *NxmTunMetadata10) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata10) GetName() string {
	return "nxm_tun_metadata10"
}

type NxmTunMetadata10Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata10Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata10Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata10Masked, error) {
	nxmtunmetadata10masked := &NxmTunMetadata10Masked{Oxm: parent}
	nxmtunmetadata10masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata10masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata10masked, nil
}

func NewNxmTunMetadata10Masked() *NxmTunMetadata10Masked {
	return &NxmTunMetadata10Masked{
		Oxm: NewOxm(91516),
	}
}
func (self *NxmTunMetadata10Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata10Masked) GetName() string {
	return "nxm_tun_metadata10_masked"
}

type NxmTunMetadata11 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata11) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata11(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata11, error) {
	nxmtunmetadata11 := &NxmTunMetadata11{Oxm: parent}
	nxmtunmetadata11.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata11, nil
}

func NewNxmTunMetadata11() *NxmTunMetadata11 {
	return &NxmTunMetadata11{
		Oxm: NewOxm(91772),
	}
}
func (self *NxmTunMetadata11) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata11) GetName() string {
	return "nxm_tun_metadata11"
}

type NxmTunMetadata11Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata11Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata11Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata11Masked, error) {
	nxmtunmetadata11masked := &NxmTunMetadata11Masked{Oxm: parent}
	nxmtunmetadata11masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata11masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata11masked, nil
}

func NewNxmTunMetadata11Masked() *NxmTunMetadata11Masked {
	return &NxmTunMetadata11Masked{
		Oxm: NewOxm(92028),
	}
}
func (self *NxmTunMetadata11Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata11Masked) GetName() string {
	return "nxm_tun_metadata11_masked"
}

type NxmTunMetadata12 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata12) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata12(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata12, error) {
	nxmtunmetadata12 := &NxmTunMetadata12{Oxm: parent}
	nxmtunmetadata12.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata12, nil
}

func NewNxmTunMetadata12() *NxmTunMetadata12 {
	return &NxmTunMetadata12{
		Oxm: NewOxm(92284),
	}
}
func (self *NxmTunMetadata12) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata12) GetName() string {
	return "nxm_tun_metadata12"
}

type NxmTunMetadata12Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata12Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata12Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata12Masked, error) {
	nxmtunmetadata12masked := &NxmTunMetadata12Masked{Oxm: parent}
	nxmtunmetadata12masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata12masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata12masked, nil
}

func NewNxmTunMetadata12Masked() *NxmTunMetadata12Masked {
	return &NxmTunMetadata12Masked{
		Oxm: NewOxm(92540),
	}
}
func (self *NxmTunMetadata12Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata12Masked) GetName() string {
	return "nxm_tun_metadata12_masked"
}

type NxmTunMetadata13 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata13) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata13(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata13, error) {
	nxmtunmetadata13 := &NxmTunMetadata13{Oxm: parent}
	nxmtunmetadata13.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata13, nil
}

func NewNxmTunMetadata13() *NxmTunMetadata13 {
	return &NxmTunMetadata13{
		Oxm: NewOxm(92796),
	}
}
func (self *NxmTunMetadata13) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata13) GetName() string {
	return "nxm_tun_metadata13"
}

type NxmTunMetadata13Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata13Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata13Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata13Masked, error) {
	nxmtunmetadata13masked := &NxmTunMetadata13Masked{Oxm: parent}
	nxmtunmetadata13masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata13masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata13masked, nil
}

func NewNxmTunMetadata13Masked() *NxmTunMetadata13Masked {
	return &NxmTunMetadata13Masked{
		Oxm: NewOxm(93052),
	}
}
func (self *NxmTunMetadata13Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata13Masked) GetName() string {
	return "nxm_tun_metadata13_masked"
}

type NxmTunMetadata14 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata14) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata14(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata14, error) {
	nxmtunmetadata14 := &NxmTunMetadata14{Oxm: parent}
	nxmtunmetadata14.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata14, nil
}

func NewNxmTunMetadata14() *NxmTunMetadata14 {
	return &NxmTunMetadata14{
		Oxm: NewOxm(93308),
	}
}
func (self *NxmTunMetadata14) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata14) GetName() string {
	return "nxm_tun_metadata14"
}

type NxmTunMetadata14Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata14Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata14Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata14Masked, error) {
	nxmtunmetadata14masked := &NxmTunMetadata14Masked{Oxm: parent}
	nxmtunmetadata14masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata14masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata14masked, nil
}

func NewNxmTunMetadata14Masked() *NxmTunMetadata14Masked {
	return &NxmTunMetadata14Masked{
		Oxm: NewOxm(93564),
	}
}
func (self *NxmTunMetadata14Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata14Masked) GetName() string {
	return "nxm_tun_metadata14_masked"
}

type NxmTunMetadata15 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata15) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata15(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata15, error) {
	nxmtunmetadata15 := &NxmTunMetadata15{Oxm: parent}
	nxmtunmetadata15.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata15, nil
}

func NewNxmTunMetadata15() *NxmTunMetadata15 {
	return &NxmTunMetadata15{
		Oxm: NewOxm(93820),
	}
}
func (self *NxmTunMetadata15) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata15) GetName() string {
	return "nxm_tun_metadata15"
}

type NxmTunMetadata15Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata15Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata15Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata15Masked, error) {
	nxmtunmetadata15masked := &NxmTunMetadata15Masked{Oxm: parent}
	nxmtunmetadata15masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata15masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata15masked, nil
}

func NewNxmTunMetadata15Masked() *NxmTunMetadata15Masked {
	return &NxmTunMetadata15Masked{
		Oxm: NewOxm(94076),
	}
}
func (self *NxmTunMetadata15Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata15Masked) GetName() string {
	return "nxm_tun_metadata15_masked"
}

type NxmTunMetadata16 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata16) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata16(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata16, error) {
	nxmtunmetadata16 := &NxmTunMetadata16{Oxm: parent}
	nxmtunmetadata16.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata16, nil
}

func NewNxmTunMetadata16() *NxmTunMetadata16 {
	return &NxmTunMetadata16{
		Oxm: NewOxm(94332),
	}
}
func (self *NxmTunMetadata16) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata16) GetName() string {
	return "nxm_tun_metadata16"
}

type NxmTunMetadata16Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata16Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata16Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata16Masked, error) {
	nxmtunmetadata16masked := &NxmTunMetadata16Masked{Oxm: parent}
	nxmtunmetadata16masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata16masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata16masked, nil
}

func NewNxmTunMetadata16Masked() *NxmTunMetadata16Masked {
	return &NxmTunMetadata16Masked{
		Oxm: NewOxm(94588),
	}
}
func (self *NxmTunMetadata16Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata16Masked) GetName() string {
	return "nxm_tun_metadata16_masked"
}

type NxmTunMetadata17 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata17) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata17(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata17, error) {
	nxmtunmetadata17 := &NxmTunMetadata17{Oxm: parent}
	nxmtunmetadata17.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata17, nil
}

func NewNxmTunMetadata17() *NxmTunMetadata17 {
	return &NxmTunMetadata17{
		Oxm: NewOxm(94844),
	}
}
func (self *NxmTunMetadata17) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata17) GetName() string {
	return "nxm_tun_metadata17"
}

type NxmTunMetadata17Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata17Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata17Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata17Masked, error) {
	nxmtunmetadata17masked := &NxmTunMetadata17Masked{Oxm: parent}
	nxmtunmetadata17masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata17masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata17masked, nil
}

func NewNxmTunMetadata17Masked() *NxmTunMetadata17Masked {
	return &NxmTunMetadata17Masked{
		Oxm: NewOxm(95100),
	}
}
func (self *NxmTunMetadata17Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata17Masked) GetName() string {
	return "nxm_tun_metadata17_masked"
}

type NxmTunMetadata18 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata18) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata18(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata18, error) {
	nxmtunmetadata18 := &NxmTunMetadata18{Oxm: parent}
	nxmtunmetadata18.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata18, nil
}

func NewNxmTunMetadata18() *NxmTunMetadata18 {
	return &NxmTunMetadata18{
		Oxm: NewOxm(95356),
	}
}
func (self *NxmTunMetadata18) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata18) GetName() string {
	return "nxm_tun_metadata18"
}

type NxmTunMetadata18Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata18Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata18Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata18Masked, error) {
	nxmtunmetadata18masked := &NxmTunMetadata18Masked{Oxm: parent}
	nxmtunmetadata18masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata18masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata18masked, nil
}

func NewNxmTunMetadata18Masked() *NxmTunMetadata18Masked {
	return &NxmTunMetadata18Masked{
		Oxm: NewOxm(95612),
	}
}
func (self *NxmTunMetadata18Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata18Masked) GetName() string {
	return "nxm_tun_metadata18_masked"
}

type NxmTunMetadata19 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata19) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata19(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata19, error) {
	nxmtunmetadata19 := &NxmTunMetadata19{Oxm: parent}
	nxmtunmetadata19.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata19, nil
}

func NewNxmTunMetadata19() *NxmTunMetadata19 {
	return &NxmTunMetadata19{
		Oxm: NewOxm(95868),
	}
}
func (self *NxmTunMetadata19) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata19) GetName() string {
	return "nxm_tun_metadata19"
}

type NxmTunMetadata19Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata19Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata19Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata19Masked, error) {
	nxmtunmetadata19masked := &NxmTunMetadata19Masked{Oxm: parent}
	nxmtunmetadata19masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata19masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata19masked, nil
}

func NewNxmTunMetadata19Masked() *NxmTunMetadata19Masked {
	return &NxmTunMetadata19Masked{
		Oxm: NewOxm(96124),
	}
}
func (self *NxmTunMetadata19Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata19Masked) GetName() string {
	return "nxm_tun_metadata19_masked"
}

type NxmTunMetadata1Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata1Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata1Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata1Masked, error) {
	nxmtunmetadata1masked := &NxmTunMetadata1Masked{Oxm: parent}
	nxmtunmetadata1masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata1masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata1masked, nil
}

func NewNxmTunMetadata1Masked() *NxmTunMetadata1Masked {
	return &NxmTunMetadata1Masked{
		Oxm: NewOxm(86908),
	}
}
func (self *NxmTunMetadata1Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata1Masked) GetName() string {
	return "nxm_tun_metadata1_masked"
}

type NxmTunMetadata2 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata2) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata2(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata2, error) {
	nxmtunmetadata2 := &NxmTunMetadata2{Oxm: parent}
	nxmtunmetadata2.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata2, nil
}

func NewNxmTunMetadata2() *NxmTunMetadata2 {
	return &NxmTunMetadata2{
		Oxm: NewOxm(87164),
	}
}
func (self *NxmTunMetadata2) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata2) GetName() string {
	return "nxm_tun_metadata2"
}

type NxmTunMetadata20 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata20) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata20(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata20, error) {
	nxmtunmetadata20 := &NxmTunMetadata20{Oxm: parent}
	nxmtunmetadata20.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata20, nil
}

func NewNxmTunMetadata20() *NxmTunMetadata20 {
	return &NxmTunMetadata20{
		Oxm: NewOxm(96380),
	}
}
func (self *NxmTunMetadata20) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata20) GetName() string {
	return "nxm_tun_metadata20"
}

type NxmTunMetadata20Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata20Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata20Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata20Masked, error) {
	nxmtunmetadata20masked := &NxmTunMetadata20Masked{Oxm: parent}
	nxmtunmetadata20masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata20masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata20masked, nil
}

func NewNxmTunMetadata20Masked() *NxmTunMetadata20Masked {
	return &NxmTunMetadata20Masked{
		Oxm: NewOxm(96636),
	}
}
func (self *NxmTunMetadata20Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata20Masked) GetName() string {
	return "nxm_tun_metadata20_masked"
}

type NxmTunMetadata21 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata21) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata21(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata21, error) {
	nxmtunmetadata21 := &NxmTunMetadata21{Oxm: parent}
	nxmtunmetadata21.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata21, nil
}

func NewNxmTunMetadata21() *NxmTunMetadata21 {
	return &NxmTunMetadata21{
		Oxm: NewOxm(96892),
	}
}
func (self *NxmTunMetadata21) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata21) GetName() string {
	return "nxm_tun_metadata21"
}

type NxmTunMetadata21Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata21Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata21Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata21Masked, error) {
	nxmtunmetadata21masked := &NxmTunMetadata21Masked{Oxm: parent}
	nxmtunmetadata21masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata21masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata21masked, nil
}

func NewNxmTunMetadata21Masked() *NxmTunMetadata21Masked {
	return &NxmTunMetadata21Masked{
		Oxm: NewOxm(97148),
	}
}
func (self *NxmTunMetadata21Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata21Masked) GetName() string {
	return "nxm_tun_metadata21_masked"
}

type NxmTunMetadata22 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata22) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata22(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata22, error) {
	nxmtunmetadata22 := &NxmTunMetadata22{Oxm: parent}
	nxmtunmetadata22.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata22, nil
}

func NewNxmTunMetadata22() *NxmTunMetadata22 {
	return &NxmTunMetadata22{
		Oxm: NewOxm(97404),
	}
}
func (self *NxmTunMetadata22) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata22) GetName() string {
	return "nxm_tun_metadata22"
}

type NxmTunMetadata22Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata22Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata22Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata22Masked, error) {
	nxmtunmetadata22masked := &NxmTunMetadata22Masked{Oxm: parent}
	nxmtunmetadata22masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata22masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata22masked, nil
}

func NewNxmTunMetadata22Masked() *NxmTunMetadata22Masked {
	return &NxmTunMetadata22Masked{
		Oxm: NewOxm(97660),
	}
}
func (self *NxmTunMetadata22Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata22Masked) GetName() string {
	return "nxm_tun_metadata22_masked"
}

type NxmTunMetadata23 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata23) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata23(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata23, error) {
	nxmtunmetadata23 := &NxmTunMetadata23{Oxm: parent}
	nxmtunmetadata23.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata23, nil
}

func NewNxmTunMetadata23() *NxmTunMetadata23 {
	return &NxmTunMetadata23{
		Oxm: NewOxm(97916),
	}
}
func (self *NxmTunMetadata23) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata23) GetName() string {
	return "nxm_tun_metadata23"
}

type NxmTunMetadata23Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata23Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata23Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata23Masked, error) {
	nxmtunmetadata23masked := &NxmTunMetadata23Masked{Oxm: parent}
	nxmtunmetadata23masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata23masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata23masked, nil
}

func NewNxmTunMetadata23Masked() *NxmTunMetadata23Masked {
	return &NxmTunMetadata23Masked{
		Oxm: NewOxm(98172),
	}
}
func (self *NxmTunMetadata23Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata23Masked) GetName() string {
	return "nxm_tun_metadata23_masked"
}

type NxmTunMetadata24 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata24) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata24(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata24, error) {
	nxmtunmetadata24 := &NxmTunMetadata24{Oxm: parent}
	nxmtunmetadata24.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata24, nil
}

func NewNxmTunMetadata24() *NxmTunMetadata24 {
	return &NxmTunMetadata24{
		Oxm: NewOxm(98428),
	}
}
func (self *NxmTunMetadata24) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata24) GetName() string {
	return "nxm_tun_metadata24"
}

type NxmTunMetadata24Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata24Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata24Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata24Masked, error) {
	nxmtunmetadata24masked := &NxmTunMetadata24Masked{Oxm: parent}
	nxmtunmetadata24masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata24masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata24masked, nil
}

func NewNxmTunMetadata24Masked() *NxmTunMetadata24Masked {
	return &NxmTunMetadata24Masked{
		Oxm: NewOxm(98684),
	}
}
func (self *NxmTunMetadata24Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata24Masked) GetName() string {
	return "nxm_tun_metadata24_masked"
}

type NxmTunMetadata25 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata25) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata25(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata25, error) {
	nxmtunmetadata25 := &NxmTunMetadata25{Oxm: parent}
	nxmtunmetadata25.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata25, nil
}

func NewNxmTunMetadata25() *NxmTunMetadata25 {
	return &NxmTunMetadata25{
		Oxm: NewOxm(98940),
	}
}
func (self *NxmTunMetadata25) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata25) GetName() string {
	return "nxm_tun_metadata25"
}

type NxmTunMetadata25Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata25Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata25Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata25Masked, error) {
	nxmtunmetadata25masked := &NxmTunMetadata25Masked{Oxm: parent}
	nxmtunmetadata25masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata25masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata25masked, nil
}

func NewNxmTunMetadata25Masked() *NxmTunMetadata25Masked {
	return &NxmTunMetadata25Masked{
		Oxm: NewOxm(99196),
	}
}
func (self *NxmTunMetadata25Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata25Masked) GetName() string {
	return "nxm_tun_metadata25_masked"
}

type NxmTunMetadata26 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata26) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata26(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata26, error) {
	nxmtunmetadata26 := &NxmTunMetadata26{Oxm: parent}
	nxmtunmetadata26.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata26, nil
}

func NewNxmTunMetadata26() *NxmTunMetadata26 {
	return &NxmTunMetadata26{
		Oxm: NewOxm(99452),
	}
}
func (self *NxmTunMetadata26) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata26) GetName() string {
	return "nxm_tun_metadata26"
}

type NxmTunMetadata26Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata26Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata26Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata26Masked, error) {
	nxmtunmetadata26masked := &NxmTunMetadata26Masked{Oxm: parent}
	nxmtunmetadata26masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata26masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata26masked, nil
}

func NewNxmTunMetadata26Masked() *NxmTunMetadata26Masked {
	return &NxmTunMetadata26Masked{
		Oxm: NewOxm(99708),
	}
}
func (self *NxmTunMetadata26Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata26Masked) GetName() string {
	return "nxm_tun_metadata26_masked"
}

type NxmTunMetadata27 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata27) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata27(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata27, error) {
	nxmtunmetadata27 := &NxmTunMetadata27{Oxm: parent}
	nxmtunmetadata27.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata27, nil
}

func NewNxmTunMetadata27() *NxmTunMetadata27 {
	return &NxmTunMetadata27{
		Oxm: NewOxm(99964),
	}
}
func (self *NxmTunMetadata27) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata27) GetName() string {
	return "nxm_tun_metadata27"
}

type NxmTunMetadata27Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata27Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata27Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata27Masked, error) {
	nxmtunmetadata27masked := &NxmTunMetadata27Masked{Oxm: parent}
	nxmtunmetadata27masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata27masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata27masked, nil
}

func NewNxmTunMetadata27Masked() *NxmTunMetadata27Masked {
	return &NxmTunMetadata27Masked{
		Oxm: NewOxm(100220),
	}
}
func (self *NxmTunMetadata27Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata27Masked) GetName() string {
	return "nxm_tun_metadata27_masked"
}

type NxmTunMetadata28 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata28) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata28(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata28, error) {
	nxmtunmetadata28 := &NxmTunMetadata28{Oxm: parent}
	nxmtunmetadata28.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata28, nil
}

func NewNxmTunMetadata28() *NxmTunMetadata28 {
	return &NxmTunMetadata28{
		Oxm: NewOxm(100476),
	}
}
func (self *NxmTunMetadata28) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata28) GetName() string {
	return "nxm_tun_metadata28"
}

type NxmTunMetadata28Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata28Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata28Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata28Masked, error) {
	nxmtunmetadata28masked := &NxmTunMetadata28Masked{Oxm: parent}
	nxmtunmetadata28masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata28masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata28masked, nil
}

func NewNxmTunMetadata28Masked() *NxmTunMetadata28Masked {
	return &NxmTunMetadata28Masked{
		Oxm: NewOxm(100732),
	}
}
func (self *NxmTunMetadata28Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata28Masked) GetName() string {
	return "nxm_tun_metadata28_masked"
}

type NxmTunMetadata29 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata29) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata29(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata29, error) {
	nxmtunmetadata29 := &NxmTunMetadata29{Oxm: parent}
	nxmtunmetadata29.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata29, nil
}

func NewNxmTunMetadata29() *NxmTunMetadata29 {
	return &NxmTunMetadata29{
		Oxm: NewOxm(100988),
	}
}
func (self *NxmTunMetadata29) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata29) GetName() string {
	return "nxm_tun_metadata29"
}

type NxmTunMetadata29Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata29Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata29Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata29Masked, error) {
	nxmtunmetadata29masked := &NxmTunMetadata29Masked{Oxm: parent}
	nxmtunmetadata29masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata29masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata29masked, nil
}

func NewNxmTunMetadata29Masked() *NxmTunMetadata29Masked {
	return &NxmTunMetadata29Masked{
		Oxm: NewOxm(101244),
	}
}
func (self *NxmTunMetadata29Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata29Masked) GetName() string {
	return "nxm_tun_metadata29_masked"
}

type NxmTunMetadata2Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata2Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata2Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata2Masked, error) {
	nxmtunmetadata2masked := &NxmTunMetadata2Masked{Oxm: parent}
	nxmtunmetadata2masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata2masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata2masked, nil
}

func NewNxmTunMetadata2Masked() *NxmTunMetadata2Masked {
	return &NxmTunMetadata2Masked{
		Oxm: NewOxm(87420),
	}
}
func (self *NxmTunMetadata2Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata2Masked) GetName() string {
	return "nxm_tun_metadata2_masked"
}

type NxmTunMetadata3 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata3) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata3(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata3, error) {
	nxmtunmetadata3 := &NxmTunMetadata3{Oxm: parent}
	nxmtunmetadata3.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata3, nil
}

func NewNxmTunMetadata3() *NxmTunMetadata3 {
	return &NxmTunMetadata3{
		Oxm: NewOxm(87676),
	}
}
func (self *NxmTunMetadata3) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata3) GetName() string {
	return "nxm_tun_metadata3"
}

type NxmTunMetadata30 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata30) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata30(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata30, error) {
	nxmtunmetadata30 := &NxmTunMetadata30{Oxm: parent}
	nxmtunmetadata30.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata30, nil
}

func NewNxmTunMetadata30() *NxmTunMetadata30 {
	return &NxmTunMetadata30{
		Oxm: NewOxm(101500),
	}
}
func (self *NxmTunMetadata30) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata30) GetName() string {
	return "nxm_tun_metadata30"
}

type NxmTunMetadata30Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata30Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata30Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata30Masked, error) {
	nxmtunmetadata30masked := &NxmTunMetadata30Masked{Oxm: parent}
	nxmtunmetadata30masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata30masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata30masked, nil
}

func NewNxmTunMetadata30Masked() *NxmTunMetadata30Masked {
	return &NxmTunMetadata30Masked{
		Oxm: NewOxm(101756),
	}
}
func (self *NxmTunMetadata30Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata30Masked) GetName() string {
	return "nxm_tun_metadata30_masked"
}

type NxmTunMetadata31 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata31) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata31(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata31, error) {
	nxmtunmetadata31 := &NxmTunMetadata31{Oxm: parent}
	nxmtunmetadata31.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata31, nil
}

func NewNxmTunMetadata31() *NxmTunMetadata31 {
	return &NxmTunMetadata31{
		Oxm: NewOxm(102012),
	}
}
func (self *NxmTunMetadata31) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata31) GetName() string {
	return "nxm_tun_metadata31"
}

type NxmTunMetadata31Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata31Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata31Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata31Masked, error) {
	nxmtunmetadata31masked := &NxmTunMetadata31Masked{Oxm: parent}
	nxmtunmetadata31masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata31masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata31masked, nil
}

func NewNxmTunMetadata31Masked() *NxmTunMetadata31Masked {
	return &NxmTunMetadata31Masked{
		Oxm: NewOxm(102268),
	}
}
func (self *NxmTunMetadata31Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata31Masked) GetName() string {
	return "nxm_tun_metadata31_masked"
}

type NxmTunMetadata32 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata32) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata32(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata32, error) {
	nxmtunmetadata32 := &NxmTunMetadata32{Oxm: parent}
	nxmtunmetadata32.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata32, nil
}

func NewNxmTunMetadata32() *NxmTunMetadata32 {
	return &NxmTunMetadata32{
		Oxm: NewOxm(102524),
	}
}
func (self *NxmTunMetadata32) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata32) GetName() string {
	return "nxm_tun_metadata32"
}

type NxmTunMetadata32Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata32Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata32Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata32Masked, error) {
	nxmtunmetadata32masked := &NxmTunMetadata32Masked{Oxm: parent}
	nxmtunmetadata32masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata32masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata32masked, nil
}

func NewNxmTunMetadata32Masked() *NxmTunMetadata32Masked {
	return &NxmTunMetadata32Masked{
		Oxm: NewOxm(102780),
	}
}
func (self *NxmTunMetadata32Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata32Masked) GetName() string {
	return "nxm_tun_metadata32_masked"
}

type NxmTunMetadata33 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata33) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata33(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata33, error) {
	nxmtunmetadata33 := &NxmTunMetadata33{Oxm: parent}
	nxmtunmetadata33.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata33, nil
}

func NewNxmTunMetadata33() *NxmTunMetadata33 {
	return &NxmTunMetadata33{
		Oxm: NewOxm(103036),
	}
}
func (self *NxmTunMetadata33) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata33) GetName() string {
	return "nxm_tun_metadata33"
}

type NxmTunMetadata33Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata33Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata33Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata33Masked, error) {
	nxmtunmetadata33masked := &NxmTunMetadata33Masked{Oxm: parent}
	nxmtunmetadata33masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata33masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata33masked, nil
}

func NewNxmTunMetadata33Masked() *NxmTunMetadata33Masked {
	return &NxmTunMetadata33Masked{
		Oxm: NewOxm(103292),
	}
}
func (self *NxmTunMetadata33Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata33Masked) GetName() string {
	return "nxm_tun_metadata33_masked"
}

type NxmTunMetadata34 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata34) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata34(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata34, error) {
	nxmtunmetadata34 := &NxmTunMetadata34{Oxm: parent}
	nxmtunmetadata34.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata34, nil
}

func NewNxmTunMetadata34() *NxmTunMetadata34 {
	return &NxmTunMetadata34{
		Oxm: NewOxm(103548),
	}
}
func (self *NxmTunMetadata34) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata34) GetName() string {
	return "nxm_tun_metadata34"
}

type NxmTunMetadata34Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata34Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata34Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata34Masked, error) {
	nxmtunmetadata34masked := &NxmTunMetadata34Masked{Oxm: parent}
	nxmtunmetadata34masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata34masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata34masked, nil
}

func NewNxmTunMetadata34Masked() *NxmTunMetadata34Masked {
	return &NxmTunMetadata34Masked{
		Oxm: NewOxm(103804),
	}
}
func (self *NxmTunMetadata34Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata34Masked) GetName() string {
	return "nxm_tun_metadata34_masked"
}

type NxmTunMetadata35 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata35) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata35(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata35, error) {
	nxmtunmetadata35 := &NxmTunMetadata35{Oxm: parent}
	nxmtunmetadata35.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata35, nil
}

func NewNxmTunMetadata35() *NxmTunMetadata35 {
	return &NxmTunMetadata35{
		Oxm: NewOxm(104060),
	}
}
func (self *NxmTunMetadata35) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata35) GetName() string {
	return "nxm_tun_metadata35"
}

type NxmTunMetadata35Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata35Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata35Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata35Masked, error) {
	nxmtunmetadata35masked := &NxmTunMetadata35Masked{Oxm: parent}
	nxmtunmetadata35masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata35masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata35masked, nil
}

func NewNxmTunMetadata35Masked() *NxmTunMetadata35Masked {
	return &NxmTunMetadata35Masked{
		Oxm: NewOxm(104316),
	}
}
func (self *NxmTunMetadata35Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata35Masked) GetName() string {
	return "nxm_tun_metadata35_masked"
}

type NxmTunMetadata36 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata36) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata36(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata36, error) {
	nxmtunmetadata36 := &NxmTunMetadata36{Oxm: parent}
	nxmtunmetadata36.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata36, nil
}

func NewNxmTunMetadata36() *NxmTunMetadata36 {
	return &NxmTunMetadata36{
		Oxm: NewOxm(104572),
	}
}
func (self *NxmTunMetadata36) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata36) GetName() string {
	return "nxm_tun_metadata36"
}

type NxmTunMetadata36Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata36Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata36Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata36Masked, error) {
	nxmtunmetadata36masked := &NxmTunMetadata36Masked{Oxm: parent}
	nxmtunmetadata36masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata36masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata36masked, nil
}

func NewNxmTunMetadata36Masked() *NxmTunMetadata36Masked {
	return &NxmTunMetadata36Masked{
		Oxm: NewOxm(104828),
	}
}
func (self *NxmTunMetadata36Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata36Masked) GetName() string {
	return "nxm_tun_metadata36_masked"
}

type NxmTunMetadata37 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata37) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata37(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata37, error) {
	nxmtunmetadata37 := &NxmTunMetadata37{Oxm: parent}
	nxmtunmetadata37.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata37, nil
}

func NewNxmTunMetadata37() *NxmTunMetadata37 {
	return &NxmTunMetadata37{
		Oxm: NewOxm(105084),
	}
}
func (self *NxmTunMetadata37) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata37) GetName() string {
	return "nxm_tun_metadata37"
}

type NxmTunMetadata37Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata37Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata37Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata37Masked, error) {
	nxmtunmetadata37masked := &NxmTunMetadata37Masked{Oxm: parent}
	nxmtunmetadata37masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata37masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata37masked, nil
}

func NewNxmTunMetadata37Masked() *NxmTunMetadata37Masked {
	return &NxmTunMetadata37Masked{
		Oxm: NewOxm(105340),
	}
}
func (self *NxmTunMetadata37Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata37Masked) GetName() string {
	return "nxm_tun_metadata37_masked"
}

type NxmTunMetadata38 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata38) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata38(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata38, error) {
	nxmtunmetadata38 := &NxmTunMetadata38{Oxm: parent}
	nxmtunmetadata38.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata38, nil
}

func NewNxmTunMetadata38() *NxmTunMetadata38 {
	return &NxmTunMetadata38{
		Oxm: NewOxm(105596),
	}
}
func (self *NxmTunMetadata38) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata38) GetName() string {
	return "nxm_tun_metadata38"
}

type NxmTunMetadata38Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata38Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata38Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata38Masked, error) {
	nxmtunmetadata38masked := &NxmTunMetadata38Masked{Oxm: parent}
	nxmtunmetadata38masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata38masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata38masked, nil
}

func NewNxmTunMetadata38Masked() *NxmTunMetadata38Masked {
	return &NxmTunMetadata38Masked{
		Oxm: NewOxm(105852),
	}
}
func (self *NxmTunMetadata38Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata38Masked) GetName() string {
	return "nxm_tun_metadata38_masked"
}

type NxmTunMetadata39 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata39) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata39(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata39, error) {
	nxmtunmetadata39 := &NxmTunMetadata39{Oxm: parent}
	nxmtunmetadata39.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata39, nil
}

func NewNxmTunMetadata39() *NxmTunMetadata39 {
	return &NxmTunMetadata39{
		Oxm: NewOxm(106108),
	}
}
func (self *NxmTunMetadata39) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata39) GetName() string {
	return "nxm_tun_metadata39"
}

type NxmTunMetadata39Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata39Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata39Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata39Masked, error) {
	nxmtunmetadata39masked := &NxmTunMetadata39Masked{Oxm: parent}
	nxmtunmetadata39masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata39masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata39masked, nil
}

func NewNxmTunMetadata39Masked() *NxmTunMetadata39Masked {
	return &NxmTunMetadata39Masked{
		Oxm: NewOxm(106364),
	}
}
func (self *NxmTunMetadata39Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata39Masked) GetName() string {
	return "nxm_tun_metadata39_masked"
}

type NxmTunMetadata3Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata3Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata3Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata3Masked, error) {
	nxmtunmetadata3masked := &NxmTunMetadata3Masked{Oxm: parent}
	nxmtunmetadata3masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata3masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata3masked, nil
}

func NewNxmTunMetadata3Masked() *NxmTunMetadata3Masked {
	return &NxmTunMetadata3Masked{
		Oxm: NewOxm(87932),
	}
}
func (self *NxmTunMetadata3Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata3Masked) GetName() string {
	return "nxm_tun_metadata3_masked"
}

type NxmTunMetadata4 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata4) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata4(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata4, error) {
	nxmtunmetadata4 := &NxmTunMetadata4{Oxm: parent}
	nxmtunmetadata4.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata4, nil
}

func NewNxmTunMetadata4() *NxmTunMetadata4 {
	return &NxmTunMetadata4{
		Oxm: NewOxm(88188),
	}
}
func (self *NxmTunMetadata4) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata4) GetName() string {
	return "nxm_tun_metadata4"
}

type NxmTunMetadata40 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata40) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata40(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata40, error) {
	nxmtunmetadata40 := &NxmTunMetadata40{Oxm: parent}
	nxmtunmetadata40.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata40, nil
}

func NewNxmTunMetadata40() *NxmTunMetadata40 {
	return &NxmTunMetadata40{
		Oxm: NewOxm(106620),
	}
}
func (self *NxmTunMetadata40) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata40) GetName() string {
	return "nxm_tun_metadata40"
}

type NxmTunMetadata40Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata40Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata40Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata40Masked, error) {
	nxmtunmetadata40masked := &NxmTunMetadata40Masked{Oxm: parent}
	nxmtunmetadata40masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata40masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata40masked, nil
}

func NewNxmTunMetadata40Masked() *NxmTunMetadata40Masked {
	return &NxmTunMetadata40Masked{
		Oxm: NewOxm(106876),
	}
}
func (self *NxmTunMetadata40Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata40Masked) GetName() string {
	return "nxm_tun_metadata40_masked"
}

type NxmTunMetadata41 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata41) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata41(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata41, error) {
	nxmtunmetadata41 := &NxmTunMetadata41{Oxm: parent}
	nxmtunmetadata41.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata41, nil
}

func NewNxmTunMetadata41() *NxmTunMetadata41 {
	return &NxmTunMetadata41{
		Oxm: NewOxm(107132),
	}
}
func (self *NxmTunMetadata41) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata41) GetName() string {
	return "nxm_tun_metadata41"
}

type NxmTunMetadata41Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata41Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata41Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata41Masked, error) {
	nxmtunmetadata41masked := &NxmTunMetadata41Masked{Oxm: parent}
	nxmtunmetadata41masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata41masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata41masked, nil
}

func NewNxmTunMetadata41Masked() *NxmTunMetadata41Masked {
	return &NxmTunMetadata41Masked{
		Oxm: NewOxm(107388),
	}
}
func (self *NxmTunMetadata41Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata41Masked) GetName() string {
	return "nxm_tun_metadata41_masked"
}

type NxmTunMetadata42 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata42) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata42(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata42, error) {
	nxmtunmetadata42 := &NxmTunMetadata42{Oxm: parent}
	nxmtunmetadata42.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata42, nil
}

func NewNxmTunMetadata42() *NxmTunMetadata42 {
	return &NxmTunMetadata42{
		Oxm: NewOxm(107644),
	}
}
func (self *NxmTunMetadata42) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata42) GetName() string {
	return "nxm_tun_metadata42"
}

type NxmTunMetadata42Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata42Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata42Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata42Masked, error) {
	nxmtunmetadata42masked := &NxmTunMetadata42Masked{Oxm: parent}
	nxmtunmetadata42masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata42masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata42masked, nil
}

func NewNxmTunMetadata42Masked() *NxmTunMetadata42Masked {
	return &NxmTunMetadata42Masked{
		Oxm: NewOxm(107900),
	}
}
func (self *NxmTunMetadata42Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata42Masked) GetName() string {
	return "nxm_tun_metadata42_masked"
}

type NxmTunMetadata43 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata43) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata43(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata43, error) {
	nxmtunmetadata43 := &NxmTunMetadata43{Oxm: parent}
	nxmtunmetadata43.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata43, nil
}

func NewNxmTunMetadata43() *NxmTunMetadata43 {
	return &NxmTunMetadata43{
		Oxm: NewOxm(108156),
	}
}
func (self *NxmTunMetadata43) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata43) GetName() string {
	return "nxm_tun_metadata43"
}

type NxmTunMetadata43Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata43Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata43Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata43Masked, error) {
	nxmtunmetadata43masked := &NxmTunMetadata43Masked{Oxm: parent}
	nxmtunmetadata43masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata43masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata43masked, nil
}

func NewNxmTunMetadata43Masked() *NxmTunMetadata43Masked {
	return &NxmTunMetadata43Masked{
		Oxm: NewOxm(108412),
	}
}
func (self *NxmTunMetadata43Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata43Masked) GetName() string {
	return "nxm_tun_metadata43_masked"
}

type NxmTunMetadata44 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata44) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata44(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata44, error) {
	nxmtunmetadata44 := &NxmTunMetadata44{Oxm: parent}
	nxmtunmetadata44.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata44, nil
}

func NewNxmTunMetadata44() *NxmTunMetadata44 {
	return &NxmTunMetadata44{
		Oxm: NewOxm(108668),
	}
}
func (self *NxmTunMetadata44) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata44) GetName() string {
	return "nxm_tun_metadata44"
}

type NxmTunMetadata44Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata44Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata44Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata44Masked, error) {
	nxmtunmetadata44masked := &NxmTunMetadata44Masked{Oxm: parent}
	nxmtunmetadata44masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata44masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata44masked, nil
}

func NewNxmTunMetadata44Masked() *NxmTunMetadata44Masked {
	return &NxmTunMetadata44Masked{
		Oxm: NewOxm(108924),
	}
}
func (self *NxmTunMetadata44Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata44Masked) GetName() string {
	return "nxm_tun_metadata44_masked"
}

type NxmTunMetadata45 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata45) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata45(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata45, error) {
	nxmtunmetadata45 := &NxmTunMetadata45{Oxm: parent}
	nxmtunmetadata45.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata45, nil
}

func NewNxmTunMetadata45() *NxmTunMetadata45 {
	return &NxmTunMetadata45{
		Oxm: NewOxm(109180),
	}
}
func (self *NxmTunMetadata45) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata45) GetName() string {
	return "nxm_tun_metadata45"
}

type NxmTunMetadata45Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata45Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata45Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata45Masked, error) {
	nxmtunmetadata45masked := &NxmTunMetadata45Masked{Oxm: parent}
	nxmtunmetadata45masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata45masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata45masked, nil
}

func NewNxmTunMetadata45Masked() *NxmTunMetadata45Masked {
	return &NxmTunMetadata45Masked{
		Oxm: NewOxm(109436),
	}
}
func (self *NxmTunMetadata45Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata45Masked) GetName() string {
	return "nxm_tun_metadata45_masked"
}

type NxmTunMetadata46 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata46) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata46(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata46, error) {
	nxmtunmetadata46 := &NxmTunMetadata46{Oxm: parent}
	nxmtunmetadata46.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata46, nil
}

func NewNxmTunMetadata46() *NxmTunMetadata46 {
	return &NxmTunMetadata46{
		Oxm: NewOxm(109692),
	}
}
func (self *NxmTunMetadata46) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata46) GetName() string {
	return "nxm_tun_metadata46"
}

type NxmTunMetadata46Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata46Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata46Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata46Masked, error) {
	nxmtunmetadata46masked := &NxmTunMetadata46Masked{Oxm: parent}
	nxmtunmetadata46masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata46masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata46masked, nil
}

func NewNxmTunMetadata46Masked() *NxmTunMetadata46Masked {
	return &NxmTunMetadata46Masked{
		Oxm: NewOxm(109948),
	}
}
func (self *NxmTunMetadata46Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata46Masked) GetName() string {
	return "nxm_tun_metadata46_masked"
}

type NxmTunMetadata47 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata47) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata47(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata47, error) {
	nxmtunmetadata47 := &NxmTunMetadata47{Oxm: parent}
	nxmtunmetadata47.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata47, nil
}

func NewNxmTunMetadata47() *NxmTunMetadata47 {
	return &NxmTunMetadata47{
		Oxm: NewOxm(110204),
	}
}
func (self *NxmTunMetadata47) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata47) GetName() string {
	return "nxm_tun_metadata47"
}

type NxmTunMetadata47Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata47Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata47Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata47Masked, error) {
	nxmtunmetadata47masked := &NxmTunMetadata47Masked{Oxm: parent}
	nxmtunmetadata47masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata47masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata47masked, nil
}

func NewNxmTunMetadata47Masked() *NxmTunMetadata47Masked {
	return &NxmTunMetadata47Masked{
		Oxm: NewOxm(110460),
	}
}
func (self *NxmTunMetadata47Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata47Masked) GetName() string {
	return "nxm_tun_metadata47_masked"
}

type NxmTunMetadata48 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata48) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata48(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata48, error) {
	nxmtunmetadata48 := &NxmTunMetadata48{Oxm: parent}
	nxmtunmetadata48.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata48, nil
}

func NewNxmTunMetadata48() *NxmTunMetadata48 {
	return &NxmTunMetadata48{
		Oxm: NewOxm(110716),
	}
}
func (self *NxmTunMetadata48) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata48) GetName() string {
	return "nxm_tun_metadata48"
}

type NxmTunMetadata48Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata48Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata48Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata48Masked, error) {
	nxmtunmetadata48masked := &NxmTunMetadata48Masked{Oxm: parent}
	nxmtunmetadata48masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata48masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata48masked, nil
}

func NewNxmTunMetadata48Masked() *NxmTunMetadata48Masked {
	return &NxmTunMetadata48Masked{
		Oxm: NewOxm(110972),
	}
}
func (self *NxmTunMetadata48Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata48Masked) GetName() string {
	return "nxm_tun_metadata48_masked"
}

type NxmTunMetadata49 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata49) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata49(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata49, error) {
	nxmtunmetadata49 := &NxmTunMetadata49{Oxm: parent}
	nxmtunmetadata49.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata49, nil
}

func NewNxmTunMetadata49() *NxmTunMetadata49 {
	return &NxmTunMetadata49{
		Oxm: NewOxm(111228),
	}
}
func (self *NxmTunMetadata49) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata49) GetName() string {
	return "nxm_tun_metadata49"
}

type NxmTunMetadata49Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata49Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata49Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata49Masked, error) {
	nxmtunmetadata49masked := &NxmTunMetadata49Masked{Oxm: parent}
	nxmtunmetadata49masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata49masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata49masked, nil
}

func NewNxmTunMetadata49Masked() *NxmTunMetadata49Masked {
	return &NxmTunMetadata49Masked{
		Oxm: NewOxm(111484),
	}
}
func (self *NxmTunMetadata49Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata49Masked) GetName() string {
	return "nxm_tun_metadata49_masked"
}

type NxmTunMetadata4Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata4Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata4Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata4Masked, error) {
	nxmtunmetadata4masked := &NxmTunMetadata4Masked{Oxm: parent}
	nxmtunmetadata4masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata4masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata4masked, nil
}

func NewNxmTunMetadata4Masked() *NxmTunMetadata4Masked {
	return &NxmTunMetadata4Masked{
		Oxm: NewOxm(88444),
	}
}
func (self *NxmTunMetadata4Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata4Masked) GetName() string {
	return "nxm_tun_metadata4_masked"
}

type NxmTunMetadata5 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata5) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata5(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata5, error) {
	nxmtunmetadata5 := &NxmTunMetadata5{Oxm: parent}
	nxmtunmetadata5.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata5, nil
}

func NewNxmTunMetadata5() *NxmTunMetadata5 {
	return &NxmTunMetadata5{
		Oxm: NewOxm(88700),
	}
}
func (self *NxmTunMetadata5) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata5) GetName() string {
	return "nxm_tun_metadata5"
}

type NxmTunMetadata50 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata50) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata50(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata50, error) {
	nxmtunmetadata50 := &NxmTunMetadata50{Oxm: parent}
	nxmtunmetadata50.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata50, nil
}

func NewNxmTunMetadata50() *NxmTunMetadata50 {
	return &NxmTunMetadata50{
		Oxm: NewOxm(111740),
	}
}
func (self *NxmTunMetadata50) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata50) GetName() string {
	return "nxm_tun_metadata50"
}

type NxmTunMetadata50Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata50Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata50Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata50Masked, error) {
	nxmtunmetadata50masked := &NxmTunMetadata50Masked{Oxm: parent}
	nxmtunmetadata50masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata50masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata50masked, nil
}

func NewNxmTunMetadata50Masked() *NxmTunMetadata50Masked {
	return &NxmTunMetadata50Masked{
		Oxm: NewOxm(111996),
	}
}
func (self *NxmTunMetadata50Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata50Masked) GetName() string {
	return "nxm_tun_metadata50_masked"
}

type NxmTunMetadata51 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata51) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata51(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata51, error) {
	nxmtunmetadata51 := &NxmTunMetadata51{Oxm: parent}
	nxmtunmetadata51.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata51, nil
}

func NewNxmTunMetadata51() *NxmTunMetadata51 {
	return &NxmTunMetadata51{
		Oxm: NewOxm(112252),
	}
}
func (self *NxmTunMetadata51) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata51) GetName() string {
	return "nxm_tun_metadata51"
}

type NxmTunMetadata51Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata51Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata51Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata51Masked, error) {
	nxmtunmetadata51masked := &NxmTunMetadata51Masked{Oxm: parent}
	nxmtunmetadata51masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata51masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata51masked, nil
}

func NewNxmTunMetadata51Masked() *NxmTunMetadata51Masked {
	return &NxmTunMetadata51Masked{
		Oxm: NewOxm(112508),
	}
}
func (self *NxmTunMetadata51Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata51Masked) GetName() string {
	return "nxm_tun_metadata51_masked"
}

type NxmTunMetadata52 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata52) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata52(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata52, error) {
	nxmtunmetadata52 := &NxmTunMetadata52{Oxm: parent}
	nxmtunmetadata52.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata52, nil
}

func NewNxmTunMetadata52() *NxmTunMetadata52 {
	return &NxmTunMetadata52{
		Oxm: NewOxm(112764),
	}
}
func (self *NxmTunMetadata52) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata52) GetName() string {
	return "nxm_tun_metadata52"
}

type NxmTunMetadata52Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata52Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata52Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata52Masked, error) {
	nxmtunmetadata52masked := &NxmTunMetadata52Masked{Oxm: parent}
	nxmtunmetadata52masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata52masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata52masked, nil
}

func NewNxmTunMetadata52Masked() *NxmTunMetadata52Masked {
	return &NxmTunMetadata52Masked{
		Oxm: NewOxm(113020),
	}
}
func (self *NxmTunMetadata52Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata52Masked) GetName() string {
	return "nxm_tun_metadata52_masked"
}

type NxmTunMetadata53 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata53) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata53(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata53, error) {
	nxmtunmetadata53 := &NxmTunMetadata53{Oxm: parent}
	nxmtunmetadata53.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata53, nil
}

func NewNxmTunMetadata53() *NxmTunMetadata53 {
	return &NxmTunMetadata53{
		Oxm: NewOxm(113276),
	}
}
func (self *NxmTunMetadata53) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata53) GetName() string {
	return "nxm_tun_metadata53"
}

type NxmTunMetadata53Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata53Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata53Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata53Masked, error) {
	nxmtunmetadata53masked := &NxmTunMetadata53Masked{Oxm: parent}
	nxmtunmetadata53masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata53masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata53masked, nil
}

func NewNxmTunMetadata53Masked() *NxmTunMetadata53Masked {
	return &NxmTunMetadata53Masked{
		Oxm: NewOxm(113532),
	}
}
func (self *NxmTunMetadata53Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata53Masked) GetName() string {
	return "nxm_tun_metadata53_masked"
}

type NxmTunMetadata54 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata54) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata54(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata54, error) {
	nxmtunmetadata54 := &NxmTunMetadata54{Oxm: parent}
	nxmtunmetadata54.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata54, nil
}

func NewNxmTunMetadata54() *NxmTunMetadata54 {
	return &NxmTunMetadata54{
		Oxm: NewOxm(113788),
	}
}
func (self *NxmTunMetadata54) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata54) GetName() string {
	return "nxm_tun_metadata54"
}

type NxmTunMetadata54Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata54Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata54Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata54Masked, error) {
	nxmtunmetadata54masked := &NxmTunMetadata54Masked{Oxm: parent}
	nxmtunmetadata54masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata54masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata54masked, nil
}

func NewNxmTunMetadata54Masked() *NxmTunMetadata54Masked {
	return &NxmTunMetadata54Masked{
		Oxm: NewOxm(114044),
	}
}
func (self *NxmTunMetadata54Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata54Masked) GetName() string {
	return "nxm_tun_metadata54_masked"
}

type NxmTunMetadata55 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata55) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata55(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata55, error) {
	nxmtunmetadata55 := &NxmTunMetadata55{Oxm: parent}
	nxmtunmetadata55.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata55, nil
}

func NewNxmTunMetadata55() *NxmTunMetadata55 {
	return &NxmTunMetadata55{
		Oxm: NewOxm(114300),
	}
}
func (self *NxmTunMetadata55) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata55) GetName() string {
	return "nxm_tun_metadata55"
}

type NxmTunMetadata55Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata55Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata55Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata55Masked, error) {
	nxmtunmetadata55masked := &NxmTunMetadata55Masked{Oxm: parent}
	nxmtunmetadata55masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata55masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata55masked, nil
}

func NewNxmTunMetadata55Masked() *NxmTunMetadata55Masked {
	return &NxmTunMetadata55Masked{
		Oxm: NewOxm(114556),
	}
}
func (self *NxmTunMetadata55Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata55Masked) GetName() string {
	return "nxm_tun_metadata55_masked"
}

type NxmTunMetadata56 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata56) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata56(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata56, error) {
	nxmtunmetadata56 := &NxmTunMetadata56{Oxm: parent}
	nxmtunmetadata56.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata56, nil
}

func NewNxmTunMetadata56() *NxmTunMetadata56 {
	return &NxmTunMetadata56{
		Oxm: NewOxm(114812),
	}
}
func (self *NxmTunMetadata56) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata56) GetName() string {
	return "nxm_tun_metadata56"
}

type NxmTunMetadata56Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata56Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata56Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata56Masked, error) {
	nxmtunmetadata56masked := &NxmTunMetadata56Masked{Oxm: parent}
	nxmtunmetadata56masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata56masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata56masked, nil
}

func NewNxmTunMetadata56Masked() *NxmTunMetadata56Masked {
	return &NxmTunMetadata56Masked{
		Oxm: NewOxm(115068),
	}
}
func (self *NxmTunMetadata56Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata56Masked) GetName() string {
	return "nxm_tun_metadata56_masked"
}

type NxmTunMetadata57 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata57) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata57(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata57, error) {
	nxmtunmetadata57 := &NxmTunMetadata57{Oxm: parent}
	nxmtunmetadata57.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata57, nil
}

func NewNxmTunMetadata57() *NxmTunMetadata57 {
	return &NxmTunMetadata57{
		Oxm: NewOxm(115324),
	}
}
func (self *NxmTunMetadata57) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata57) GetName() string {
	return "nxm_tun_metadata57"
}

type NxmTunMetadata57Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata57Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata57Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata57Masked, error) {
	nxmtunmetadata57masked := &NxmTunMetadata57Masked{Oxm: parent}
	nxmtunmetadata57masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata57masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata57masked, nil
}

func NewNxmTunMetadata57Masked() *NxmTunMetadata57Masked {
	return &NxmTunMetadata57Masked{
		Oxm: NewOxm(115580),
	}
}
func (self *NxmTunMetadata57Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata57Masked) GetName() string {
	return "nxm_tun_metadata57_masked"
}

type NxmTunMetadata58 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata58) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata58(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata58, error) {
	nxmtunmetadata58 := &NxmTunMetadata58{Oxm: parent}
	nxmtunmetadata58.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata58, nil
}

func NewNxmTunMetadata58() *NxmTunMetadata58 {
	return &NxmTunMetadata58{
		Oxm: NewOxm(115836),
	}
}
func (self *NxmTunMetadata58) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata58) GetName() string {
	return "nxm_tun_metadata58"
}

type NxmTunMetadata58Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata58Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata58Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata58Masked, error) {
	nxmtunmetadata58masked := &NxmTunMetadata58Masked{Oxm: parent}
	nxmtunmetadata58masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata58masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata58masked, nil
}

func NewNxmTunMetadata58Masked() *NxmTunMetadata58Masked {
	return &NxmTunMetadata58Masked{
		Oxm: NewOxm(116092),
	}
}
func (self *NxmTunMetadata58Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata58Masked) GetName() string {
	return "nxm_tun_metadata58_masked"
}

type NxmTunMetadata59 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata59) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata59(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata59, error) {
	nxmtunmetadata59 := &NxmTunMetadata59{Oxm: parent}
	nxmtunmetadata59.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata59, nil
}

func NewNxmTunMetadata59() *NxmTunMetadata59 {
	return &NxmTunMetadata59{
		Oxm: NewOxm(116348),
	}
}
func (self *NxmTunMetadata59) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata59) GetName() string {
	return "nxm_tun_metadata59"
}

type NxmTunMetadata59Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata59Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata59Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata59Masked, error) {
	nxmtunmetadata59masked := &NxmTunMetadata59Masked{Oxm: parent}
	nxmtunmetadata59masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata59masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata59masked, nil
}

func NewNxmTunMetadata59Masked() *NxmTunMetadata59Masked {
	return &NxmTunMetadata59Masked{
		Oxm: NewOxm(116604),
	}
}
func (self *NxmTunMetadata59Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata59Masked) GetName() string {
	return "nxm_tun_metadata59_masked"
}

type NxmTunMetadata5Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata5Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata5Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata5Masked, error) {
	nxmtunmetadata5masked := &NxmTunMetadata5Masked{Oxm: parent}
	nxmtunmetadata5masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata5masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata5masked, nil
}

func NewNxmTunMetadata5Masked() *NxmTunMetadata5Masked {
	return &NxmTunMetadata5Masked{
		Oxm: NewOxm(88956),
	}
}
func (self *NxmTunMetadata5Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata5Masked) GetName() string {
	return "nxm_tun_metadata5_masked"
}

type NxmTunMetadata6 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata6) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata6(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata6, error) {
	nxmtunmetadata6 := &NxmTunMetadata6{Oxm: parent}
	nxmtunmetadata6.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata6, nil
}

func NewNxmTunMetadata6() *NxmTunMetadata6 {
	return &NxmTunMetadata6{
		Oxm: NewOxm(89212),
	}
}
func (self *NxmTunMetadata6) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata6) GetName() string {
	return "nxm_tun_metadata6"
}

type NxmTunMetadata60 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata60) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata60(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata60, error) {
	nxmtunmetadata60 := &NxmTunMetadata60{Oxm: parent}
	nxmtunmetadata60.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata60, nil
}

func NewNxmTunMetadata60() *NxmTunMetadata60 {
	return &NxmTunMetadata60{
		Oxm: NewOxm(116860),
	}
}
func (self *NxmTunMetadata60) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata60) GetName() string {
	return "nxm_tun_metadata60"
}

type NxmTunMetadata60Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata60Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata60Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata60Masked, error) {
	nxmtunmetadata60masked := &NxmTunMetadata60Masked{Oxm: parent}
	nxmtunmetadata60masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata60masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata60masked, nil
}

func NewNxmTunMetadata60Masked() *NxmTunMetadata60Masked {
	return &NxmTunMetadata60Masked{
		Oxm: NewOxm(117116),
	}
}
func (self *NxmTunMetadata60Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata60Masked) GetName() string {
	return "nxm_tun_metadata60_masked"
}

type NxmTunMetadata61 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata61) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata61(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata61, error) {
	nxmtunmetadata61 := &NxmTunMetadata61{Oxm: parent}
	nxmtunmetadata61.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata61, nil
}

func NewNxmTunMetadata61() *NxmTunMetadata61 {
	return &NxmTunMetadata61{
		Oxm: NewOxm(117372),
	}
}
func (self *NxmTunMetadata61) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata61) GetName() string {
	return "nxm_tun_metadata61"
}

type NxmTunMetadata61Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata61Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata61Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata61Masked, error) {
	nxmtunmetadata61masked := &NxmTunMetadata61Masked{Oxm: parent}
	nxmtunmetadata61masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata61masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata61masked, nil
}

func NewNxmTunMetadata61Masked() *NxmTunMetadata61Masked {
	return &NxmTunMetadata61Masked{
		Oxm: NewOxm(117628),
	}
}
func (self *NxmTunMetadata61Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata61Masked) GetName() string {
	return "nxm_tun_metadata61_masked"
}

type NxmTunMetadata62 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata62) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata62(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata62, error) {
	nxmtunmetadata62 := &NxmTunMetadata62{Oxm: parent}
	nxmtunmetadata62.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata62, nil
}

func NewNxmTunMetadata62() *NxmTunMetadata62 {
	return &NxmTunMetadata62{
		Oxm: NewOxm(117884),
	}
}
func (self *NxmTunMetadata62) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata62) GetName() string {
	return "nxm_tun_metadata62"
}

type NxmTunMetadata62Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata62Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata62Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata62Masked, error) {
	nxmtunmetadata62masked := &NxmTunMetadata62Masked{Oxm: parent}
	nxmtunmetadata62masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata62masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata62masked, nil
}

func NewNxmTunMetadata62Masked() *NxmTunMetadata62Masked {
	return &NxmTunMetadata62Masked{
		Oxm: NewOxm(118140),
	}
}
func (self *NxmTunMetadata62Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata62Masked) GetName() string {
	return "nxm_tun_metadata62_masked"
}

type NxmTunMetadata63 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata63) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata63(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata63, error) {
	nxmtunmetadata63 := &NxmTunMetadata63{Oxm: parent}
	nxmtunmetadata63.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata63, nil
}

func NewNxmTunMetadata63() *NxmTunMetadata63 {
	return &NxmTunMetadata63{
		Oxm: NewOxm(118396),
	}
}
func (self *NxmTunMetadata63) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata63) GetName() string {
	return "nxm_tun_metadata63"
}

type NxmTunMetadata63Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata63Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata63Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata63Masked, error) {
	nxmtunmetadata63masked := &NxmTunMetadata63Masked{Oxm: parent}
	nxmtunmetadata63masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata63masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata63masked, nil
}

func NewNxmTunMetadata63Masked() *NxmTunMetadata63Masked {
	return &NxmTunMetadata63Masked{
		Oxm: NewOxm(118652),
	}
}
func (self *NxmTunMetadata63Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata63Masked) GetName() string {
	return "nxm_tun_metadata63_masked"
}

type NxmTunMetadata6Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata6Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata6Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata6Masked, error) {
	nxmtunmetadata6masked := &NxmTunMetadata6Masked{Oxm: parent}
	nxmtunmetadata6masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata6masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata6masked, nil
}

func NewNxmTunMetadata6Masked() *NxmTunMetadata6Masked {
	return &NxmTunMetadata6Masked{
		Oxm: NewOxm(89468),
	}
}
func (self *NxmTunMetadata6Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata6Masked) GetName() string {
	return "nxm_tun_metadata6_masked"
}

type NxmTunMetadata7 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata7) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata7(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata7, error) {
	nxmtunmetadata7 := &NxmTunMetadata7{Oxm: parent}
	nxmtunmetadata7.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata7, nil
}

func NewNxmTunMetadata7() *NxmTunMetadata7 {
	return &NxmTunMetadata7{
		Oxm: NewOxm(89724),
	}
}
func (self *NxmTunMetadata7) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata7) GetName() string {
	return "nxm_tun_metadata7"
}

type NxmTunMetadata7Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata7Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata7Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata7Masked, error) {
	nxmtunmetadata7masked := &NxmTunMetadata7Masked{Oxm: parent}
	nxmtunmetadata7masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata7masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata7masked, nil
}

func NewNxmTunMetadata7Masked() *NxmTunMetadata7Masked {
	return &NxmTunMetadata7Masked{
		Oxm: NewOxm(89980),
	}
}
func (self *NxmTunMetadata7Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata7Masked) GetName() string {
	return "nxm_tun_metadata7_masked"
}

type NxmTunMetadata8 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata8) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata8(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata8, error) {
	nxmtunmetadata8 := &NxmTunMetadata8{Oxm: parent}
	nxmtunmetadata8.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata8, nil
}

func NewNxmTunMetadata8() *NxmTunMetadata8 {
	return &NxmTunMetadata8{
		Oxm: NewOxm(90236),
	}
}
func (self *NxmTunMetadata8) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata8) GetName() string {
	return "nxm_tun_metadata8"
}

type NxmTunMetadata8Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata8Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata8Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata8Masked, error) {
	nxmtunmetadata8masked := &NxmTunMetadata8Masked{Oxm: parent}
	nxmtunmetadata8masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata8masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata8masked, nil
}

func NewNxmTunMetadata8Masked() *NxmTunMetadata8Masked {
	return &NxmTunMetadata8Masked{
		Oxm: NewOxm(90492),
	}
}
func (self *NxmTunMetadata8Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata8Masked) GetName() string {
	return "nxm_tun_metadata8_masked"
}

type NxmTunMetadata9 struct {
	*Oxm
	Value []byte
}

func (self *NxmTunMetadata9) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeNxmTunMetadata9(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata9, error) {
	nxmtunmetadata9 := &NxmTunMetadata9{Oxm: parent}
	nxmtunmetadata9.Value = decoder.Read(decoder.Length())
	return nxmtunmetadata9, nil
}

func NewNxmTunMetadata9() *NxmTunMetadata9 {
	return &NxmTunMetadata9{
		Oxm: NewOxm(90748),
	}
}
func (self *NxmTunMetadata9) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata9) GetName() string {
	return "nxm_tun_metadata9"
}

type NxmTunMetadata9Masked struct {
	*Oxm
	Value     []byte
	ValueMask []byte
}

func (self *NxmTunMetadata9Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeNxmTunMetadata9Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunMetadata9Masked, error) {
	nxmtunmetadata9masked := &NxmTunMetadata9Masked{Oxm: parent}
	nxmtunmetadata9masked.Value = decoder.Read(decoder.Length())
	nxmtunmetadata9masked.ValueMask = decoder.Read(decoder.Length())
	return nxmtunmetadata9masked, nil
}

func NewNxmTunMetadata9Masked() *NxmTunMetadata9Masked {
	return &NxmTunMetadata9Masked{
		Oxm: NewOxm(91004),
	}
}
func (self *NxmTunMetadata9Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunMetadata9Masked) GetName() string {
	return "nxm_tun_metadata9_masked"
}

type NxmTunSrc struct {
	*Oxm
	Value net.IP
}

func (self *NxmTunSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeNxmTunSrc(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunSrc, error) {
	nxmtunsrc := &NxmTunSrc{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmTunSrc packet too short: %d < 4", decoder.Length())
	}
	nxmtunsrc.Value = net.IP(decoder.Read(4))
	return nxmtunsrc, nil
}

func NewNxmTunSrc() *NxmTunSrc {
	return &NxmTunSrc{
		Oxm: NewOxm(81412),
	}
}
func (self *NxmTunSrc) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunSrc) GetName() string {
	return "nxm_tun_src"
}

type NxmTunSrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *NxmTunSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeNxmTunSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmTunSrcMasked, error) {
	nxmtunsrcmasked := &NxmTunSrcMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("NxmTunSrcMasked packet too short: %d < 8", decoder.Length())
	}
	nxmtunsrcmasked.Value = net.IP(decoder.Read(4))
	nxmtunsrcmasked.ValueMask = net.IP(decoder.Read(4))
	return nxmtunsrcmasked, nil
}

func NewNxmTunSrcMasked() *NxmTunSrcMasked {
	return &NxmTunSrcMasked{
		Oxm: NewOxm(81668),
	}
}
func (self *NxmTunSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmTunSrcMasked) GetName() string {
	return "nxm_tun_src_masked"
}

type NxmUdpDst struct {
	*Oxm
	Value uint16
}

func (self *NxmUdpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmUdpDst(parent *Oxm, decoder *goloxi.Decoder) (*NxmUdpDst, error) {
	nxmudpdst := &NxmUdpDst{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmUdpDst packet too short: %d < 2", decoder.Length())
	}
	nxmudpdst.Value = uint16(decoder.ReadUint16())
	return nxmudpdst, nil
}

func NewNxmUdpDst() *NxmUdpDst {
	return &NxmUdpDst{
		Oxm: NewOxm(6146),
	}
}
func (self *NxmUdpDst) GetValue() interface{} {
	return self.Value
}

func (self *NxmUdpDst) GetName() string {
	return "nxm_udp_dst"
}

type NxmUdpDstMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmUdpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmUdpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmUdpDstMasked, error) {
	nxmudpdstmasked := &NxmUdpDstMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmUdpDstMasked packet too short: %d < 4", decoder.Length())
	}
	nxmudpdstmasked.Value = uint16(decoder.ReadUint16())
	nxmudpdstmasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmudpdstmasked, nil
}

func NewNxmUdpDstMasked() *NxmUdpDstMasked {
	return &NxmUdpDstMasked{
		Oxm: NewOxm(6402),
	}
}
func (self *NxmUdpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmUdpDstMasked) GetName() string {
	return "nxm_udp_dst_masked"
}

type NxmUdpSrc struct {
	*Oxm
	Value uint16
}

func (self *NxmUdpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmUdpSrc(parent *Oxm, decoder *goloxi.Decoder) (*NxmUdpSrc, error) {
	nxmudpsrc := &NxmUdpSrc{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmUdpSrc packet too short: %d < 2", decoder.Length())
	}
	nxmudpsrc.Value = uint16(decoder.ReadUint16())
	return nxmudpsrc, nil
}

func NewNxmUdpSrc() *NxmUdpSrc {
	return &NxmUdpSrc{
		Oxm: NewOxm(5634),
	}
}
func (self *NxmUdpSrc) GetValue() interface{} {
	return self.Value
}

func (self *NxmUdpSrc) GetName() string {
	return "nxm_udp_src"
}

type NxmUdpSrcMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmUdpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmUdpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmUdpSrcMasked, error) {
	nxmudpsrcmasked := &NxmUdpSrcMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmUdpSrcMasked packet too short: %d < 4", decoder.Length())
	}
	nxmudpsrcmasked.Value = uint16(decoder.ReadUint16())
	nxmudpsrcmasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmudpsrcmasked, nil
}

func NewNxmUdpSrcMasked() *NxmUdpSrcMasked {
	return &NxmUdpSrcMasked{
		Oxm: NewOxm(5890),
	}
}
func (self *NxmUdpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmUdpSrcMasked) GetName() string {
	return "nxm_udp_src_masked"
}

type NxmVlanTci struct {
	*Oxm
	Value uint16
}

func (self *NxmVlanTci) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeNxmVlanTci(parent *Oxm, decoder *goloxi.Decoder) (*NxmVlanTci, error) {
	nxmvlantci := &NxmVlanTci{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("NxmVlanTci packet too short: %d < 2", decoder.Length())
	}
	nxmvlantci.Value = uint16(decoder.ReadUint16())
	return nxmvlantci, nil
}

func NewNxmVlanTci() *NxmVlanTci {
	return &NxmVlanTci{
		Oxm: NewOxm(2050),
	}
}
func (self *NxmVlanTci) GetValue() interface{} {
	return self.Value
}

func (self *NxmVlanTci) GetName() string {
	return "nxm_vlan_tci"
}

type NxmVlanTciMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *NxmVlanTciMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeNxmVlanTciMasked(parent *Oxm, decoder *goloxi.Decoder) (*NxmVlanTciMasked, error) {
	nxmvlantcimasked := &NxmVlanTciMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("NxmVlanTciMasked packet too short: %d < 4", decoder.Length())
	}
	nxmvlantcimasked.Value = uint16(decoder.ReadUint16())
	nxmvlantcimasked.ValueMask = uint16(decoder.ReadUint16())
	return nxmvlantcimasked, nil
}

func NewNxmVlanTciMasked() *NxmVlanTciMasked {
	return &NxmVlanTciMasked{
		Oxm: NewOxm(2306),
	}
}
func (self *NxmVlanTciMasked) GetValue() interface{} {
	return self.Value
}

func (self *NxmVlanTciMasked) GetName() string {
	return "nxm_vlan_tci_masked"
}

type NxmXxreg0 struct {
	*Oxm
	Value uint128
}

func (self *NxmXxreg0) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))

	return nil
}

func decodeNxmXxreg0(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg0, error) {
	nxmxxreg0 := &NxmXxreg0{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmXxreg0 packet too short: %d < 16", decoder.Length())
	}
	nxmxxreg0.Value = uint128(decoder.ReadUint128())
	return nxmxxreg0, nil
}

func NewNxmXxreg0() *NxmXxreg0 {
	return &NxmXxreg0{
		Oxm: NewOxm(122384),
	}
}
func (self *NxmXxreg0) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg0) GetName() string {
	return "nxm_xxreg0"
}

type NxmXxreg0Masked struct {
	*Oxm
	Value     uint128
	ValueMask uint128
}

func (self *NxmXxreg0Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))
	encoder.PutUint128(uint128(self.ValueMask))

	return nil
}

func decodeNxmXxreg0Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg0Masked, error) {
	nxmxxreg0masked := &NxmXxreg0Masked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmXxreg0Masked packet too short: %d < 32", decoder.Length())
	}
	nxmxxreg0masked.Value = uint128(decoder.ReadUint128())
	nxmxxreg0masked.ValueMask = uint128(decoder.ReadUint128())
	return nxmxxreg0masked, nil
}

func NewNxmXxreg0Masked() *NxmXxreg0Masked {
	return &NxmXxreg0Masked{
		Oxm: NewOxm(122640),
	}
}
func (self *NxmXxreg0Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg0Masked) GetName() string {
	return "nxm_xxreg0_masked"
}

type NxmXxreg1 struct {
	*Oxm
	Value uint128
}

func (self *NxmXxreg1) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))

	return nil
}

func decodeNxmXxreg1(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg1, error) {
	nxmxxreg1 := &NxmXxreg1{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmXxreg1 packet too short: %d < 16", decoder.Length())
	}
	nxmxxreg1.Value = uint128(decoder.ReadUint128())
	return nxmxxreg1, nil
}

func NewNxmXxreg1() *NxmXxreg1 {
	return &NxmXxreg1{
		Oxm: NewOxm(122896),
	}
}
func (self *NxmXxreg1) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg1) GetName() string {
	return "nxm_xxreg1"
}

type NxmXxreg1Masked struct {
	*Oxm
	Value     uint128
	ValueMask uint128
}

func (self *NxmXxreg1Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))
	encoder.PutUint128(uint128(self.ValueMask))

	return nil
}

func decodeNxmXxreg1Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg1Masked, error) {
	nxmxxreg1masked := &NxmXxreg1Masked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmXxreg1Masked packet too short: %d < 32", decoder.Length())
	}
	nxmxxreg1masked.Value = uint128(decoder.ReadUint128())
	nxmxxreg1masked.ValueMask = uint128(decoder.ReadUint128())
	return nxmxxreg1masked, nil
}

func NewNxmXxreg1Masked() *NxmXxreg1Masked {
	return &NxmXxreg1Masked{
		Oxm: NewOxm(123152),
	}
}
func (self *NxmXxreg1Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg1Masked) GetName() string {
	return "nxm_xxreg1_masked"
}

type NxmXxreg2 struct {
	*Oxm
	Value uint128
}

func (self *NxmXxreg2) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))

	return nil
}

func decodeNxmXxreg2(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg2, error) {
	nxmxxreg2 := &NxmXxreg2{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmXxreg2 packet too short: %d < 16", decoder.Length())
	}
	nxmxxreg2.Value = uint128(decoder.ReadUint128())
	return nxmxxreg2, nil
}

func NewNxmXxreg2() *NxmXxreg2 {
	return &NxmXxreg2{
		Oxm: NewOxm(123408),
	}
}
func (self *NxmXxreg2) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg2) GetName() string {
	return "nxm_xxreg2"
}

type NxmXxreg2Masked struct {
	*Oxm
	Value     uint128
	ValueMask uint128
}

func (self *NxmXxreg2Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))
	encoder.PutUint128(uint128(self.ValueMask))

	return nil
}

func decodeNxmXxreg2Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg2Masked, error) {
	nxmxxreg2masked := &NxmXxreg2Masked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmXxreg2Masked packet too short: %d < 32", decoder.Length())
	}
	nxmxxreg2masked.Value = uint128(decoder.ReadUint128())
	nxmxxreg2masked.ValueMask = uint128(decoder.ReadUint128())
	return nxmxxreg2masked, nil
}

func NewNxmXxreg2Masked() *NxmXxreg2Masked {
	return &NxmXxreg2Masked{
		Oxm: NewOxm(123664),
	}
}
func (self *NxmXxreg2Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg2Masked) GetName() string {
	return "nxm_xxreg2_masked"
}

type NxmXxreg3 struct {
	*Oxm
	Value uint128
}

func (self *NxmXxreg3) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))

	return nil
}

func decodeNxmXxreg3(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg3, error) {
	nxmxxreg3 := &NxmXxreg3{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("NxmXxreg3 packet too short: %d < 16", decoder.Length())
	}
	nxmxxreg3.Value = uint128(decoder.ReadUint128())
	return nxmxxreg3, nil
}

func NewNxmXxreg3() *NxmXxreg3 {
	return &NxmXxreg3{
		Oxm: NewOxm(123920),
	}
}
func (self *NxmXxreg3) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg3) GetName() string {
	return "nxm_xxreg3"
}

type NxmXxreg3Masked struct {
	*Oxm
	Value     uint128
	ValueMask uint128
}

func (self *NxmXxreg3Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))
	encoder.PutUint128(uint128(self.ValueMask))

	return nil
}

func decodeNxmXxreg3Masked(parent *Oxm, decoder *goloxi.Decoder) (*NxmXxreg3Masked, error) {
	nxmxxreg3masked := &NxmXxreg3Masked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("NxmXxreg3Masked packet too short: %d < 32", decoder.Length())
	}
	nxmxxreg3masked.Value = uint128(decoder.ReadUint128())
	nxmxxreg3masked.ValueMask = uint128(decoder.ReadUint128())
	return nxmxxreg3masked, nil
}

func NewNxmXxreg3Masked() *NxmXxreg3Masked {
	return &NxmXxreg3Masked{
		Oxm: NewOxm(124176),
	}
}
func (self *NxmXxreg3Masked) GetValue() interface{} {
	return self.Value
}

func (self *NxmXxreg3Masked) GetName() string {
	return "nxm_xxreg3_masked"
}

type OxmArpOp struct {
	*Oxm
	Value uint16
}

func (self *OxmArpOp) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmArpOp(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpOp, error) {
	oxmarpop := &OxmArpOp{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmArpOp packet too short: %d < 2", decoder.Length())
	}
	oxmarpop.Value = uint16(decoder.ReadUint16())
	return oxmarpop, nil
}

func NewOxmArpOp() *OxmArpOp {
	return &OxmArpOp{
		Oxm: NewOxm(2147494402),
	}
}
func (self *OxmArpOp) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpOp) GetName() string {
	return "oxm_arp_op"
}

type OxmArpOpMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmArpOpMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmArpOpMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpOpMasked, error) {
	oxmarpopmasked := &OxmArpOpMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmArpOpMasked packet too short: %d < 4", decoder.Length())
	}
	oxmarpopmasked.Value = uint16(decoder.ReadUint16())
	oxmarpopmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmarpopmasked, nil
}

func NewOxmArpOpMasked() *OxmArpOpMasked {
	return &OxmArpOpMasked{
		Oxm: NewOxm(2147494660),
	}
}
func (self *OxmArpOpMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpOpMasked) GetName() string {
	return "oxm_arp_op_masked"
}

type OxmArpSha struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmArpSha) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmArpSha(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpSha, error) {
	oxmarpsha := &OxmArpSha{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmArpSha packet too short: %d < 6", decoder.Length())
	}
	oxmarpsha.Value = net.HardwareAddr(decoder.Read(6))
	return oxmarpsha, nil
}

func NewOxmArpSha() *OxmArpSha {
	return &OxmArpSha{
		Oxm: NewOxm(2147495942),
	}
}
func (self *OxmArpSha) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpSha) GetName() string {
	return "oxm_arp_sha"
}

type OxmArpShaMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmArpShaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmArpShaMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpShaMasked, error) {
	oxmarpshamasked := &OxmArpShaMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmArpShaMasked packet too short: %d < 12", decoder.Length())
	}
	oxmarpshamasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmarpshamasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmarpshamasked, nil
}

func NewOxmArpShaMasked() *OxmArpShaMasked {
	return &OxmArpShaMasked{
		Oxm: NewOxm(2147496204),
	}
}
func (self *OxmArpShaMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpShaMasked) GetName() string {
	return "oxm_arp_sha_masked"
}

type OxmArpSpa struct {
	*Oxm
	Value uint32
}

func (self *OxmArpSpa) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmArpSpa(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpSpa, error) {
	oxmarpspa := &OxmArpSpa{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmArpSpa packet too short: %d < 4", decoder.Length())
	}
	oxmarpspa.Value = uint32(decoder.ReadUint32())
	return oxmarpspa, nil
}

func NewOxmArpSpa() *OxmArpSpa {
	return &OxmArpSpa{
		Oxm: NewOxm(2147494916),
	}
}
func (self *OxmArpSpa) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpSpa) GetName() string {
	return "oxm_arp_spa"
}

type OxmArpSpaMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmArpSpaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmArpSpaMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpSpaMasked, error) {
	oxmarpspamasked := &OxmArpSpaMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmArpSpaMasked packet too short: %d < 8", decoder.Length())
	}
	oxmarpspamasked.Value = uint32(decoder.ReadUint32())
	oxmarpspamasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmarpspamasked, nil
}

func NewOxmArpSpaMasked() *OxmArpSpaMasked {
	return &OxmArpSpaMasked{
		Oxm: NewOxm(2147495176),
	}
}
func (self *OxmArpSpaMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpSpaMasked) GetName() string {
	return "oxm_arp_spa_masked"
}

type OxmArpTha struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmArpTha) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmArpTha(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpTha, error) {
	oxmarptha := &OxmArpTha{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmArpTha packet too short: %d < 6", decoder.Length())
	}
	oxmarptha.Value = net.HardwareAddr(decoder.Read(6))
	return oxmarptha, nil
}

func NewOxmArpTha() *OxmArpTha {
	return &OxmArpTha{
		Oxm: NewOxm(2147496454),
	}
}
func (self *OxmArpTha) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpTha) GetName() string {
	return "oxm_arp_tha"
}

type OxmArpThaMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmArpThaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmArpThaMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpThaMasked, error) {
	oxmarpthamasked := &OxmArpThaMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmArpThaMasked packet too short: %d < 12", decoder.Length())
	}
	oxmarpthamasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmarpthamasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmarpthamasked, nil
}

func NewOxmArpThaMasked() *OxmArpThaMasked {
	return &OxmArpThaMasked{
		Oxm: NewOxm(2147496716),
	}
}
func (self *OxmArpThaMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpThaMasked) GetName() string {
	return "oxm_arp_tha_masked"
}

type OxmArpTpa struct {
	*Oxm
	Value uint32
}

func (self *OxmArpTpa) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmArpTpa(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpTpa, error) {
	oxmarptpa := &OxmArpTpa{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmArpTpa packet too short: %d < 4", decoder.Length())
	}
	oxmarptpa.Value = uint32(decoder.ReadUint32())
	return oxmarptpa, nil
}

func NewOxmArpTpa() *OxmArpTpa {
	return &OxmArpTpa{
		Oxm: NewOxm(2147495428),
	}
}
func (self *OxmArpTpa) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpTpa) GetName() string {
	return "oxm_arp_tpa"
}

type OxmArpTpaMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmArpTpaMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmArpTpaMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmArpTpaMasked, error) {
	oxmarptpamasked := &OxmArpTpaMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmArpTpaMasked packet too short: %d < 8", decoder.Length())
	}
	oxmarptpamasked.Value = uint32(decoder.ReadUint32())
	oxmarptpamasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmarptpamasked, nil
}

func NewOxmArpTpaMasked() *OxmArpTpaMasked {
	return &OxmArpTpaMasked{
		Oxm: NewOxm(2147495688),
	}
}
func (self *OxmArpTpaMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmArpTpaMasked) GetName() string {
	return "oxm_arp_tpa_masked"
}

type OxmBsnEgrPortGroupId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnEgrPortGroupId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnEgrPortGroupId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnEgrPortGroupId, error) {
	oxmbsnegrportgroupid := &OxmBsnEgrPortGroupId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnEgrPortGroupId packet too short: %d < 4", decoder.Length())
	}
	oxmbsnegrportgroupid.Value = uint32(decoder.ReadUint32())
	return oxmbsnegrportgroupid, nil
}

func NewOxmBsnEgrPortGroupId() *OxmBsnEgrPortGroupId {
	return &OxmBsnEgrPortGroupId{
		Oxm: NewOxm(200196),
	}
}
func (self *OxmBsnEgrPortGroupId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnEgrPortGroupId) GetName() string {
	return "oxm_bsn_egr_port_group_id"
}

type OxmBsnEgrPortGroupIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnEgrPortGroupIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnEgrPortGroupIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnEgrPortGroupIdMasked, error) {
	oxmbsnegrportgroupidmasked := &OxmBsnEgrPortGroupIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnEgrPortGroupIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnegrportgroupidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnegrportgroupidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnegrportgroupidmasked, nil
}

func NewOxmBsnEgrPortGroupIdMasked() *OxmBsnEgrPortGroupIdMasked {
	return &OxmBsnEgrPortGroupIdMasked{
		Oxm: NewOxm(200456),
	}
}
func (self *OxmBsnEgrPortGroupIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnEgrPortGroupIdMasked) GetName() string {
	return "oxm_bsn_egr_port_group_id_masked"
}

type OxmBsnGlobalVrfAllowed struct {
	*Oxm
	Value uint8
}

func (self *OxmBsnGlobalVrfAllowed) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmBsnGlobalVrfAllowed(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnGlobalVrfAllowed, error) {
	oxmbsnglobalvrfallowed := &OxmBsnGlobalVrfAllowed{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmBsnGlobalVrfAllowed packet too short: %d < 1", decoder.Length())
	}
	oxmbsnglobalvrfallowed.Value = uint8(decoder.ReadByte())
	return oxmbsnglobalvrfallowed, nil
}

func NewOxmBsnGlobalVrfAllowed() *OxmBsnGlobalVrfAllowed {
	return &OxmBsnGlobalVrfAllowed{
		Oxm: NewOxm(198145),
	}
}
func (self *OxmBsnGlobalVrfAllowed) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnGlobalVrfAllowed) GetName() string {
	return "oxm_bsn_global_vrf_allowed"
}

type OxmBsnGlobalVrfAllowedMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmBsnGlobalVrfAllowedMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmBsnGlobalVrfAllowedMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnGlobalVrfAllowedMasked, error) {
	oxmbsnglobalvrfallowedmasked := &OxmBsnGlobalVrfAllowedMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmBsnGlobalVrfAllowedMasked packet too short: %d < 2", decoder.Length())
	}
	oxmbsnglobalvrfallowedmasked.Value = uint8(decoder.ReadByte())
	oxmbsnglobalvrfallowedmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmbsnglobalvrfallowedmasked, nil
}

func NewOxmBsnGlobalVrfAllowedMasked() *OxmBsnGlobalVrfAllowedMasked {
	return &OxmBsnGlobalVrfAllowedMasked{
		Oxm: NewOxm(198402),
	}
}
func (self *OxmBsnGlobalVrfAllowedMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnGlobalVrfAllowedMasked) GetName() string {
	return "oxm_bsn_global_vrf_allowed_masked"
}

type OxmBsnInPorts128 struct {
	*Oxm
	Value Bitmap128
}

func (self *OxmBsnInPorts128) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)

	return nil
}

func decodeOxmBsnInPorts128(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInPorts128, error) {
	oxmbsninports128 := &OxmBsnInPorts128{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmBsnInPorts128 packet too short: %d < 16", decoder.Length())
	}
	oxmbsninports128.Value.Decode(decoder)
	return oxmbsninports128, nil
}

func NewOxmBsnInPorts128() *OxmBsnInPorts128 {
	return &OxmBsnInPorts128{
		Oxm: NewOxm(196624),
	}
}
func (self *OxmBsnInPorts128) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInPorts128) GetName() string {
	return "oxm_bsn_in_ports_128"
}

type OxmBsnInPorts128Masked struct {
	*Oxm
	Value     Bitmap128
	ValueMask Bitmap128
}

func (self *OxmBsnInPorts128Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)
	self.ValueMask.Serialize(encoder)

	return nil
}

func decodeOxmBsnInPorts128Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInPorts128Masked, error) {
	oxmbsninports128masked := &OxmBsnInPorts128Masked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("OxmBsnInPorts128Masked packet too short: %d < 32", decoder.Length())
	}
	oxmbsninports128masked.Value.Decode(decoder)
	oxmbsninports128masked.ValueMask.Decode(decoder)
	return oxmbsninports128masked, nil
}

func NewOxmBsnInPorts128Masked() *OxmBsnInPorts128Masked {
	return &OxmBsnInPorts128Masked{
		Oxm: NewOxm(196896),
	}
}
func (self *OxmBsnInPorts128Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInPorts128Masked) GetName() string {
	return "oxm_bsn_in_ports_128_masked"
}

type OxmBsnInPorts512 struct {
	*Oxm
	Value Bitmap512
}

func (self *OxmBsnInPorts512) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)

	return nil
}

func decodeOxmBsnInPorts512(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInPorts512, error) {
	oxmbsninports512 := &OxmBsnInPorts512{Oxm: parent}
	if decoder.Length() < 64 {
		return nil, fmt.Errorf("OxmBsnInPorts512 packet too short: %d < 64", decoder.Length())
	}
	oxmbsninports512.Value.Decode(decoder)
	return oxmbsninports512, nil
}

func NewOxmBsnInPorts512() *OxmBsnInPorts512 {
	return &OxmBsnInPorts512{
		Oxm: NewOxm(206400),
	}
}
func (self *OxmBsnInPorts512) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInPorts512) GetName() string {
	return "oxm_bsn_in_ports_512"
}

type OxmBsnInPorts512Masked struct {
	*Oxm
	Value     Bitmap512
	ValueMask Bitmap512
}

func (self *OxmBsnInPorts512Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)
	self.ValueMask.Serialize(encoder)

	return nil
}

func decodeOxmBsnInPorts512Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInPorts512Masked, error) {
	oxmbsninports512masked := &OxmBsnInPorts512Masked{Oxm: parent}
	if decoder.Length() < 128 {
		return nil, fmt.Errorf("OxmBsnInPorts512Masked packet too short: %d < 128", decoder.Length())
	}
	oxmbsninports512masked.Value.Decode(decoder)
	oxmbsninports512masked.ValueMask.Decode(decoder)
	return oxmbsninports512masked, nil
}

func NewOxmBsnInPorts512Masked() *OxmBsnInPorts512Masked {
	return &OxmBsnInPorts512Masked{
		Oxm: NewOxm(206720),
	}
}
func (self *OxmBsnInPorts512Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInPorts512Masked) GetName() string {
	return "oxm_bsn_in_ports_512_masked"
}

type OxmBsnIngressPortGroupId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnIngressPortGroupId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnIngressPortGroupId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnIngressPortGroupId, error) {
	oxmbsningressportgroupid := &OxmBsnIngressPortGroupId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnIngressPortGroupId packet too short: %d < 4", decoder.Length())
	}
	oxmbsningressportgroupid.Value = uint32(decoder.ReadUint32())
	return oxmbsningressportgroupid, nil
}

func NewOxmBsnIngressPortGroupId() *OxmBsnIngressPortGroupId {
	return &OxmBsnIngressPortGroupId{
		Oxm: NewOxm(206852),
	}
}
func (self *OxmBsnIngressPortGroupId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnIngressPortGroupId) GetName() string {
	return "oxm_bsn_ingress_port_group_id"
}

type OxmBsnIngressPortGroupIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnIngressPortGroupIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnIngressPortGroupIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnIngressPortGroupIdMasked, error) {
	oxmbsningressportgroupidmasked := &OxmBsnIngressPortGroupIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnIngressPortGroupIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsningressportgroupidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsningressportgroupidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsningressportgroupidmasked, nil
}

func NewOxmBsnIngressPortGroupIdMasked() *OxmBsnIngressPortGroupIdMasked {
	return &OxmBsnIngressPortGroupIdMasked{
		Oxm: NewOxm(207112),
	}
}
func (self *OxmBsnIngressPortGroupIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnIngressPortGroupIdMasked) GetName() string {
	return "oxm_bsn_ingress_port_group_id_masked"
}

type OxmBsnInnerEthDst struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmBsnInnerEthDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmBsnInnerEthDst(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInnerEthDst, error) {
	oxmbsninnerethdst := &OxmBsnInnerEthDst{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmBsnInnerEthDst packet too short: %d < 6", decoder.Length())
	}
	oxmbsninnerethdst.Value = net.HardwareAddr(decoder.Read(6))
	return oxmbsninnerethdst, nil
}

func NewOxmBsnInnerEthDst() *OxmBsnInnerEthDst {
	return &OxmBsnInnerEthDst{
		Oxm: NewOxm(207878),
	}
}
func (self *OxmBsnInnerEthDst) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInnerEthDst) GetName() string {
	return "oxm_bsn_inner_eth_dst"
}

type OxmBsnInnerEthDstMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmBsnInnerEthDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmBsnInnerEthDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInnerEthDstMasked, error) {
	oxmbsninnerethdstmasked := &OxmBsnInnerEthDstMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmBsnInnerEthDstMasked packet too short: %d < 12", decoder.Length())
	}
	oxmbsninnerethdstmasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmbsninnerethdstmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmbsninnerethdstmasked, nil
}

func NewOxmBsnInnerEthDstMasked() *OxmBsnInnerEthDstMasked {
	return &OxmBsnInnerEthDstMasked{
		Oxm: NewOxm(208140),
	}
}
func (self *OxmBsnInnerEthDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInnerEthDstMasked) GetName() string {
	return "oxm_bsn_inner_eth_dst_masked"
}

type OxmBsnInnerEthSrc struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmBsnInnerEthSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmBsnInnerEthSrc(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInnerEthSrc, error) {
	oxmbsninnerethsrc := &OxmBsnInnerEthSrc{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmBsnInnerEthSrc packet too short: %d < 6", decoder.Length())
	}
	oxmbsninnerethsrc.Value = net.HardwareAddr(decoder.Read(6))
	return oxmbsninnerethsrc, nil
}

func NewOxmBsnInnerEthSrc() *OxmBsnInnerEthSrc {
	return &OxmBsnInnerEthSrc{
		Oxm: NewOxm(208390),
	}
}
func (self *OxmBsnInnerEthSrc) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInnerEthSrc) GetName() string {
	return "oxm_bsn_inner_eth_src"
}

type OxmBsnInnerEthSrcMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmBsnInnerEthSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmBsnInnerEthSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInnerEthSrcMasked, error) {
	oxmbsninnerethsrcmasked := &OxmBsnInnerEthSrcMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmBsnInnerEthSrcMasked packet too short: %d < 12", decoder.Length())
	}
	oxmbsninnerethsrcmasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmbsninnerethsrcmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmbsninnerethsrcmasked, nil
}

func NewOxmBsnInnerEthSrcMasked() *OxmBsnInnerEthSrcMasked {
	return &OxmBsnInnerEthSrcMasked{
		Oxm: NewOxm(208652),
	}
}
func (self *OxmBsnInnerEthSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInnerEthSrcMasked) GetName() string {
	return "oxm_bsn_inner_eth_src_masked"
}

type OxmBsnInnerVlanVid struct {
	*Oxm
	Value uint16
}

func (self *OxmBsnInnerVlanVid) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmBsnInnerVlanVid(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInnerVlanVid, error) {
	oxmbsninnervlanvid := &OxmBsnInnerVlanVid{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmBsnInnerVlanVid packet too short: %d < 2", decoder.Length())
	}
	oxmbsninnervlanvid.Value = uint16(decoder.ReadUint16())
	return oxmbsninnervlanvid, nil
}

func NewOxmBsnInnerVlanVid() *OxmBsnInnerVlanVid {
	return &OxmBsnInnerVlanVid{
		Oxm: NewOxm(208898),
	}
}
func (self *OxmBsnInnerVlanVid) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInnerVlanVid) GetName() string {
	return "oxm_bsn_inner_vlan_vid"
}

type OxmBsnInnerVlanVidMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmBsnInnerVlanVidMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmBsnInnerVlanVidMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnInnerVlanVidMasked, error) {
	oxmbsninnervlanvidmasked := &OxmBsnInnerVlanVidMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnInnerVlanVidMasked packet too short: %d < 4", decoder.Length())
	}
	oxmbsninnervlanvidmasked.Value = uint16(decoder.ReadUint16())
	oxmbsninnervlanvidmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmbsninnervlanvidmasked, nil
}

func NewOxmBsnInnerVlanVidMasked() *OxmBsnInnerVlanVidMasked {
	return &OxmBsnInnerVlanVidMasked{
		Oxm: NewOxm(209156),
	}
}
func (self *OxmBsnInnerVlanVidMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnInnerVlanVidMasked) GetName() string {
	return "oxm_bsn_inner_vlan_vid_masked"
}

type OxmBsnIpFragmentation struct {
	*Oxm
	Value uint8
}

func (self *OxmBsnIpFragmentation) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmBsnIpFragmentation(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnIpFragmentation, error) {
	oxmbsnipfragmentation := &OxmBsnIpFragmentation{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmBsnIpFragmentation packet too short: %d < 1", decoder.Length())
	}
	oxmbsnipfragmentation.Value = uint8(decoder.ReadByte())
	return oxmbsnipfragmentation, nil
}

func NewOxmBsnIpFragmentation() *OxmBsnIpFragmentation {
	return &OxmBsnIpFragmentation{
		Oxm: NewOxm(209921),
	}
}
func (self *OxmBsnIpFragmentation) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnIpFragmentation) GetName() string {
	return "oxm_bsn_ip_fragmentation"
}

type OxmBsnIpFragmentationMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmBsnIpFragmentationMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmBsnIpFragmentationMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnIpFragmentationMasked, error) {
	oxmbsnipfragmentationmasked := &OxmBsnIpFragmentationMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmBsnIpFragmentationMasked packet too short: %d < 2", decoder.Length())
	}
	oxmbsnipfragmentationmasked.Value = uint8(decoder.ReadByte())
	oxmbsnipfragmentationmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmbsnipfragmentationmasked, nil
}

func NewOxmBsnIpFragmentationMasked() *OxmBsnIpFragmentationMasked {
	return &OxmBsnIpFragmentationMasked{
		Oxm: NewOxm(210178),
	}
}
func (self *OxmBsnIpFragmentationMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnIpFragmentationMasked) GetName() string {
	return "oxm_bsn_ip_fragmentation_masked"
}

type OxmBsnL2CacheHit struct {
	*Oxm
	Value uint8
}

func (self *OxmBsnL2CacheHit) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmBsnL2CacheHit(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL2CacheHit, error) {
	oxmbsnl2cachehit := &OxmBsnL2CacheHit{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmBsnL2CacheHit packet too short: %d < 1", decoder.Length())
	}
	oxmbsnl2cachehit.Value = uint8(decoder.ReadByte())
	return oxmbsnl2cachehit, nil
}

func NewOxmBsnL2CacheHit() *OxmBsnL2CacheHit {
	return &OxmBsnL2CacheHit{
		Oxm: NewOxm(205825),
	}
}
func (self *OxmBsnL2CacheHit) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL2CacheHit) GetName() string {
	return "oxm_bsn_l2_cache_hit"
}

type OxmBsnL2CacheHitMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmBsnL2CacheHitMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmBsnL2CacheHitMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL2CacheHitMasked, error) {
	oxmbsnl2cachehitmasked := &OxmBsnL2CacheHitMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmBsnL2CacheHitMasked packet too short: %d < 2", decoder.Length())
	}
	oxmbsnl2cachehitmasked.Value = uint8(decoder.ReadByte())
	oxmbsnl2cachehitmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmbsnl2cachehitmasked, nil
}

func NewOxmBsnL2CacheHitMasked() *OxmBsnL2CacheHitMasked {
	return &OxmBsnL2CacheHitMasked{
		Oxm: NewOxm(206082),
	}
}
func (self *OxmBsnL2CacheHitMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL2CacheHitMasked) GetName() string {
	return "oxm_bsn_l2_cache_hit_masked"
}

type OxmBsnL3DstClassId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnL3DstClassId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnL3DstClassId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL3DstClassId, error) {
	oxmbsnl3dstclassid := &OxmBsnL3DstClassId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnL3DstClassId packet too short: %d < 4", decoder.Length())
	}
	oxmbsnl3dstclassid.Value = uint32(decoder.ReadUint32())
	return oxmbsnl3dstclassid, nil
}

func NewOxmBsnL3DstClassId() *OxmBsnL3DstClassId {
	return &OxmBsnL3DstClassId{
		Oxm: NewOxm(199684),
	}
}
func (self *OxmBsnL3DstClassId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL3DstClassId) GetName() string {
	return "oxm_bsn_l3_dst_class_id"
}

type OxmBsnL3DstClassIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnL3DstClassIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnL3DstClassIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL3DstClassIdMasked, error) {
	oxmbsnl3dstclassidmasked := &OxmBsnL3DstClassIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnL3DstClassIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnl3dstclassidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnl3dstclassidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnl3dstclassidmasked, nil
}

func NewOxmBsnL3DstClassIdMasked() *OxmBsnL3DstClassIdMasked {
	return &OxmBsnL3DstClassIdMasked{
		Oxm: NewOxm(199944),
	}
}
func (self *OxmBsnL3DstClassIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL3DstClassIdMasked) GetName() string {
	return "oxm_bsn_l3_dst_class_id_masked"
}

type OxmBsnL3InterfaceClassId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnL3InterfaceClassId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnL3InterfaceClassId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL3InterfaceClassId, error) {
	oxmbsnl3interfaceclassid := &OxmBsnL3InterfaceClassId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnL3InterfaceClassId packet too short: %d < 4", decoder.Length())
	}
	oxmbsnl3interfaceclassid.Value = uint32(decoder.ReadUint32())
	return oxmbsnl3interfaceclassid, nil
}

func NewOxmBsnL3InterfaceClassId() *OxmBsnL3InterfaceClassId {
	return &OxmBsnL3InterfaceClassId{
		Oxm: NewOxm(198660),
	}
}
func (self *OxmBsnL3InterfaceClassId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL3InterfaceClassId) GetName() string {
	return "oxm_bsn_l3_interface_class_id"
}

type OxmBsnL3InterfaceClassIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnL3InterfaceClassIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnL3InterfaceClassIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL3InterfaceClassIdMasked, error) {
	oxmbsnl3interfaceclassidmasked := &OxmBsnL3InterfaceClassIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnL3InterfaceClassIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnl3interfaceclassidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnl3interfaceclassidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnl3interfaceclassidmasked, nil
}

func NewOxmBsnL3InterfaceClassIdMasked() *OxmBsnL3InterfaceClassIdMasked {
	return &OxmBsnL3InterfaceClassIdMasked{
		Oxm: NewOxm(198920),
	}
}
func (self *OxmBsnL3InterfaceClassIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL3InterfaceClassIdMasked) GetName() string {
	return "oxm_bsn_l3_interface_class_id_masked"
}

type OxmBsnL3SrcClassId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnL3SrcClassId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnL3SrcClassId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL3SrcClassId, error) {
	oxmbsnl3srcclassid := &OxmBsnL3SrcClassId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnL3SrcClassId packet too short: %d < 4", decoder.Length())
	}
	oxmbsnl3srcclassid.Value = uint32(decoder.ReadUint32())
	return oxmbsnl3srcclassid, nil
}

func NewOxmBsnL3SrcClassId() *OxmBsnL3SrcClassId {
	return &OxmBsnL3SrcClassId{
		Oxm: NewOxm(199172),
	}
}
func (self *OxmBsnL3SrcClassId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL3SrcClassId) GetName() string {
	return "oxm_bsn_l3_src_class_id"
}

type OxmBsnL3SrcClassIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnL3SrcClassIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnL3SrcClassIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnL3SrcClassIdMasked, error) {
	oxmbsnl3srcclassidmasked := &OxmBsnL3SrcClassIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnL3SrcClassIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnl3srcclassidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnl3srcclassidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnl3srcclassidmasked, nil
}

func NewOxmBsnL3SrcClassIdMasked() *OxmBsnL3SrcClassIdMasked {
	return &OxmBsnL3SrcClassIdMasked{
		Oxm: NewOxm(199432),
	}
}
func (self *OxmBsnL3SrcClassIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnL3SrcClassIdMasked) GetName() string {
	return "oxm_bsn_l3_src_class_id_masked"
}

type OxmBsnLagId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnLagId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnLagId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnLagId, error) {
	oxmbsnlagid := &OxmBsnLagId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnLagId packet too short: %d < 4", decoder.Length())
	}
	oxmbsnlagid.Value = uint32(decoder.ReadUint32())
	return oxmbsnlagid, nil
}

func NewOxmBsnLagId() *OxmBsnLagId {
	return &OxmBsnLagId{
		Oxm: NewOxm(197124),
	}
}
func (self *OxmBsnLagId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnLagId) GetName() string {
	return "oxm_bsn_lag_id"
}

type OxmBsnLagIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnLagIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnLagIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnLagIdMasked, error) {
	oxmbsnlagidmasked := &OxmBsnLagIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnLagIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnlagidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnlagidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnlagidmasked, nil
}

func NewOxmBsnLagIdMasked() *OxmBsnLagIdMasked {
	return &OxmBsnLagIdMasked{
		Oxm: NewOxm(197384),
	}
}
func (self *OxmBsnLagIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnLagIdMasked) GetName() string {
	return "oxm_bsn_lag_id_masked"
}

type OxmBsnTcpFlags struct {
	*Oxm
	Value uint16
}

func (self *OxmBsnTcpFlags) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmBsnTcpFlags(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnTcpFlags, error) {
	oxmbsntcpflags := &OxmBsnTcpFlags{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmBsnTcpFlags packet too short: %d < 2", decoder.Length())
	}
	oxmbsntcpflags.Value = uint16(decoder.ReadUint16())
	return oxmbsntcpflags, nil
}

func NewOxmBsnTcpFlags() *OxmBsnTcpFlags {
	return &OxmBsnTcpFlags{
		Oxm: NewOxm(204802),
	}
}
func (self *OxmBsnTcpFlags) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnTcpFlags) GetName() string {
	return "oxm_bsn_tcp_flags"
}

type OxmBsnTcpFlagsMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmBsnTcpFlagsMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmBsnTcpFlagsMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnTcpFlagsMasked, error) {
	oxmbsntcpflagsmasked := &OxmBsnTcpFlagsMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnTcpFlagsMasked packet too short: %d < 4", decoder.Length())
	}
	oxmbsntcpflagsmasked.Value = uint16(decoder.ReadUint16())
	oxmbsntcpflagsmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmbsntcpflagsmasked, nil
}

func NewOxmBsnTcpFlagsMasked() *OxmBsnTcpFlagsMasked {
	return &OxmBsnTcpFlagsMasked{
		Oxm: NewOxm(205060),
	}
}
func (self *OxmBsnTcpFlagsMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnTcpFlagsMasked) GetName() string {
	return "oxm_bsn_tcp_flags_masked"
}

type OxmBsnUdf0 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf0) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf0(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf0, error) {
	oxmbsnudf0 := &OxmBsnUdf0{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf0 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf0.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf0, nil
}

func NewOxmBsnUdf0() *OxmBsnUdf0 {
	return &OxmBsnUdf0{
		Oxm: NewOxm(200708),
	}
}
func (self *OxmBsnUdf0) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf0) GetName() string {
	return "oxm_bsn_udf0"
}

type OxmBsnUdf0Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf0Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf0Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf0Masked, error) {
	oxmbsnudf0masked := &OxmBsnUdf0Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf0Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf0masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf0masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf0masked, nil
}

func NewOxmBsnUdf0Masked() *OxmBsnUdf0Masked {
	return &OxmBsnUdf0Masked{
		Oxm: NewOxm(200968),
	}
}
func (self *OxmBsnUdf0Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf0Masked) GetName() string {
	return "oxm_bsn_udf0_masked"
}

type OxmBsnUdf1 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf1) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf1(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf1, error) {
	oxmbsnudf1 := &OxmBsnUdf1{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf1 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf1.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf1, nil
}

func NewOxmBsnUdf1() *OxmBsnUdf1 {
	return &OxmBsnUdf1{
		Oxm: NewOxm(201220),
	}
}
func (self *OxmBsnUdf1) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf1) GetName() string {
	return "oxm_bsn_udf1"
}

type OxmBsnUdf1Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf1Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf1Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf1Masked, error) {
	oxmbsnudf1masked := &OxmBsnUdf1Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf1Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf1masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf1masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf1masked, nil
}

func NewOxmBsnUdf1Masked() *OxmBsnUdf1Masked {
	return &OxmBsnUdf1Masked{
		Oxm: NewOxm(201480),
	}
}
func (self *OxmBsnUdf1Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf1Masked) GetName() string {
	return "oxm_bsn_udf1_masked"
}

type OxmBsnUdf2 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf2) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf2(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf2, error) {
	oxmbsnudf2 := &OxmBsnUdf2{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf2 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf2.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf2, nil
}

func NewOxmBsnUdf2() *OxmBsnUdf2 {
	return &OxmBsnUdf2{
		Oxm: NewOxm(201732),
	}
}
func (self *OxmBsnUdf2) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf2) GetName() string {
	return "oxm_bsn_udf2"
}

type OxmBsnUdf2Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf2Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf2Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf2Masked, error) {
	oxmbsnudf2masked := &OxmBsnUdf2Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf2Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf2masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf2masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf2masked, nil
}

func NewOxmBsnUdf2Masked() *OxmBsnUdf2Masked {
	return &OxmBsnUdf2Masked{
		Oxm: NewOxm(201992),
	}
}
func (self *OxmBsnUdf2Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf2Masked) GetName() string {
	return "oxm_bsn_udf2_masked"
}

type OxmBsnUdf3 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf3) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf3(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf3, error) {
	oxmbsnudf3 := &OxmBsnUdf3{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf3 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf3.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf3, nil
}

func NewOxmBsnUdf3() *OxmBsnUdf3 {
	return &OxmBsnUdf3{
		Oxm: NewOxm(202244),
	}
}
func (self *OxmBsnUdf3) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf3) GetName() string {
	return "oxm_bsn_udf3"
}

type OxmBsnUdf3Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf3Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf3Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf3Masked, error) {
	oxmbsnudf3masked := &OxmBsnUdf3Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf3Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf3masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf3masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf3masked, nil
}

func NewOxmBsnUdf3Masked() *OxmBsnUdf3Masked {
	return &OxmBsnUdf3Masked{
		Oxm: NewOxm(202504),
	}
}
func (self *OxmBsnUdf3Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf3Masked) GetName() string {
	return "oxm_bsn_udf3_masked"
}

type OxmBsnUdf4 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf4) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf4(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf4, error) {
	oxmbsnudf4 := &OxmBsnUdf4{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf4 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf4.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf4, nil
}

func NewOxmBsnUdf4() *OxmBsnUdf4 {
	return &OxmBsnUdf4{
		Oxm: NewOxm(202756),
	}
}
func (self *OxmBsnUdf4) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf4) GetName() string {
	return "oxm_bsn_udf4"
}

type OxmBsnUdf4Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf4Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf4Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf4Masked, error) {
	oxmbsnudf4masked := &OxmBsnUdf4Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf4Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf4masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf4masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf4masked, nil
}

func NewOxmBsnUdf4Masked() *OxmBsnUdf4Masked {
	return &OxmBsnUdf4Masked{
		Oxm: NewOxm(203016),
	}
}
func (self *OxmBsnUdf4Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf4Masked) GetName() string {
	return "oxm_bsn_udf4_masked"
}

type OxmBsnUdf5 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf5) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf5(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf5, error) {
	oxmbsnudf5 := &OxmBsnUdf5{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf5 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf5.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf5, nil
}

func NewOxmBsnUdf5() *OxmBsnUdf5 {
	return &OxmBsnUdf5{
		Oxm: NewOxm(203268),
	}
}
func (self *OxmBsnUdf5) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf5) GetName() string {
	return "oxm_bsn_udf5"
}

type OxmBsnUdf5Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf5Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf5Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf5Masked, error) {
	oxmbsnudf5masked := &OxmBsnUdf5Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf5Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf5masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf5masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf5masked, nil
}

func NewOxmBsnUdf5Masked() *OxmBsnUdf5Masked {
	return &OxmBsnUdf5Masked{
		Oxm: NewOxm(203528),
	}
}
func (self *OxmBsnUdf5Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf5Masked) GetName() string {
	return "oxm_bsn_udf5_masked"
}

type OxmBsnUdf6 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf6) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf6(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf6, error) {
	oxmbsnudf6 := &OxmBsnUdf6{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf6 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf6.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf6, nil
}

func NewOxmBsnUdf6() *OxmBsnUdf6 {
	return &OxmBsnUdf6{
		Oxm: NewOxm(203780),
	}
}
func (self *OxmBsnUdf6) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf6) GetName() string {
	return "oxm_bsn_udf6"
}

type OxmBsnUdf6Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf6Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf6Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf6Masked, error) {
	oxmbsnudf6masked := &OxmBsnUdf6Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf6Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf6masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf6masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf6masked, nil
}

func NewOxmBsnUdf6Masked() *OxmBsnUdf6Masked {
	return &OxmBsnUdf6Masked{
		Oxm: NewOxm(204040),
	}
}
func (self *OxmBsnUdf6Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf6Masked) GetName() string {
	return "oxm_bsn_udf6_masked"
}

type OxmBsnUdf7 struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnUdf7) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnUdf7(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf7, error) {
	oxmbsnudf7 := &OxmBsnUdf7{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnUdf7 packet too short: %d < 4", decoder.Length())
	}
	oxmbsnudf7.Value = uint32(decoder.ReadUint32())
	return oxmbsnudf7, nil
}

func NewOxmBsnUdf7() *OxmBsnUdf7 {
	return &OxmBsnUdf7{
		Oxm: NewOxm(204292),
	}
}
func (self *OxmBsnUdf7) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf7) GetName() string {
	return "oxm_bsn_udf7"
}

type OxmBsnUdf7Masked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnUdf7Masked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnUdf7Masked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnUdf7Masked, error) {
	oxmbsnudf7masked := &OxmBsnUdf7Masked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnUdf7Masked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnudf7masked.Value = uint32(decoder.ReadUint32())
	oxmbsnudf7masked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnudf7masked, nil
}

func NewOxmBsnUdf7Masked() *OxmBsnUdf7Masked {
	return &OxmBsnUdf7Masked{
		Oxm: NewOxm(204552),
	}
}
func (self *OxmBsnUdf7Masked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnUdf7Masked) GetName() string {
	return "oxm_bsn_udf7_masked"
}

type OxmBsnVfi struct {
	*Oxm
	Value uint16
}

func (self *OxmBsnVfi) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmBsnVfi(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVfi, error) {
	oxmbsnvfi := &OxmBsnVfi{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmBsnVfi packet too short: %d < 2", decoder.Length())
	}
	oxmbsnvfi.Value = uint16(decoder.ReadUint16())
	return oxmbsnvfi, nil
}

func NewOxmBsnVfi() *OxmBsnVfi {
	return &OxmBsnVfi{
		Oxm: NewOxm(209410),
	}
}
func (self *OxmBsnVfi) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVfi) GetName() string {
	return "oxm_bsn_vfi"
}

type OxmBsnVfiMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmBsnVfiMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmBsnVfiMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVfiMasked, error) {
	oxmbsnvfimasked := &OxmBsnVfiMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnVfiMasked packet too short: %d < 4", decoder.Length())
	}
	oxmbsnvfimasked.Value = uint16(decoder.ReadUint16())
	oxmbsnvfimasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmbsnvfimasked, nil
}

func NewOxmBsnVfiMasked() *OxmBsnVfiMasked {
	return &OxmBsnVfiMasked{
		Oxm: NewOxm(209668),
	}
}
func (self *OxmBsnVfiMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVfiMasked) GetName() string {
	return "oxm_bsn_vfi_masked"
}

type OxmBsnVlanXlatePortGroupId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnVlanXlatePortGroupId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnVlanXlatePortGroupId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVlanXlatePortGroupId, error) {
	oxmbsnvlanxlateportgroupid := &OxmBsnVlanXlatePortGroupId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnVlanXlatePortGroupId packet too short: %d < 4", decoder.Length())
	}
	oxmbsnvlanxlateportgroupid.Value = uint32(decoder.ReadUint32())
	return oxmbsnvlanxlateportgroupid, nil
}

func NewOxmBsnVlanXlatePortGroupId() *OxmBsnVlanXlatePortGroupId {
	return &OxmBsnVlanXlatePortGroupId{
		Oxm: NewOxm(205316),
	}
}
func (self *OxmBsnVlanXlatePortGroupId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVlanXlatePortGroupId) GetName() string {
	return "oxm_bsn_vlan_xlate_port_group_id"
}

type OxmBsnVlanXlatePortGroupIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnVlanXlatePortGroupIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnVlanXlatePortGroupIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVlanXlatePortGroupIdMasked, error) {
	oxmbsnvlanxlateportgroupidmasked := &OxmBsnVlanXlatePortGroupIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnVlanXlatePortGroupIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnvlanxlateportgroupidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnvlanxlateportgroupidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnvlanxlateportgroupidmasked, nil
}

func NewOxmBsnVlanXlatePortGroupIdMasked() *OxmBsnVlanXlatePortGroupIdMasked {
	return &OxmBsnVlanXlatePortGroupIdMasked{
		Oxm: NewOxm(205576),
	}
}
func (self *OxmBsnVlanXlatePortGroupIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVlanXlatePortGroupIdMasked) GetName() string {
	return "oxm_bsn_vlan_xlate_port_group_id_masked"
}

type OxmBsnVrf struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnVrf) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnVrf(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVrf, error) {
	oxmbsnvrf := &OxmBsnVrf{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnVrf packet too short: %d < 4", decoder.Length())
	}
	oxmbsnvrf.Value = uint32(decoder.ReadUint32())
	return oxmbsnvrf, nil
}

func NewOxmBsnVrf() *OxmBsnVrf {
	return &OxmBsnVrf{
		Oxm: NewOxm(197636),
	}
}
func (self *OxmBsnVrf) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVrf) GetName() string {
	return "oxm_bsn_vrf"
}

type OxmBsnVrfMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnVrfMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnVrfMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVrfMasked, error) {
	oxmbsnvrfmasked := &OxmBsnVrfMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnVrfMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnvrfmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnvrfmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnvrfmasked, nil
}

func NewOxmBsnVrfMasked() *OxmBsnVrfMasked {
	return &OxmBsnVrfMasked{
		Oxm: NewOxm(197896),
	}
}
func (self *OxmBsnVrfMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVrfMasked) GetName() string {
	return "oxm_bsn_vrf_masked"
}

type OxmBsnVxlanNetworkId struct {
	*Oxm
	Value uint32
}

func (self *OxmBsnVxlanNetworkId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmBsnVxlanNetworkId(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVxlanNetworkId, error) {
	oxmbsnvxlannetworkid := &OxmBsnVxlanNetworkId{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmBsnVxlanNetworkId packet too short: %d < 4", decoder.Length())
	}
	oxmbsnvxlannetworkid.Value = uint32(decoder.ReadUint32())
	return oxmbsnvxlannetworkid, nil
}

func NewOxmBsnVxlanNetworkId() *OxmBsnVxlanNetworkId {
	return &OxmBsnVxlanNetworkId{
		Oxm: NewOxm(207364),
	}
}
func (self *OxmBsnVxlanNetworkId) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVxlanNetworkId) GetName() string {
	return "oxm_bsn_vxlan_network_id"
}

type OxmBsnVxlanNetworkIdMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmBsnVxlanNetworkIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmBsnVxlanNetworkIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmBsnVxlanNetworkIdMasked, error) {
	oxmbsnvxlannetworkidmasked := &OxmBsnVxlanNetworkIdMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmBsnVxlanNetworkIdMasked packet too short: %d < 8", decoder.Length())
	}
	oxmbsnvxlannetworkidmasked.Value = uint32(decoder.ReadUint32())
	oxmbsnvxlannetworkidmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmbsnvxlannetworkidmasked, nil
}

func NewOxmBsnVxlanNetworkIdMasked() *OxmBsnVxlanNetworkIdMasked {
	return &OxmBsnVxlanNetworkIdMasked{
		Oxm: NewOxm(207624),
	}
}
func (self *OxmBsnVxlanNetworkIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmBsnVxlanNetworkIdMasked) GetName() string {
	return "oxm_bsn_vxlan_network_id_masked"
}

type OxmConnTrackingIpv6Dst struct {
	*Oxm
	Value net.IP
}

func (self *OxmConnTrackingIpv6Dst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeOxmConnTrackingIpv6Dst(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingIpv6Dst, error) {
	oxmconntrackingipv6dst := &OxmConnTrackingIpv6Dst{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmConnTrackingIpv6Dst packet too short: %d < 16", decoder.Length())
	}
	oxmconntrackingipv6dst.Value = net.IP(decoder.Read(16))
	return oxmconntrackingipv6dst, nil
}

func NewOxmConnTrackingIpv6Dst() *OxmConnTrackingIpv6Dst {
	return &OxmConnTrackingIpv6Dst{
		Oxm: NewOxm(128528),
	}
}
func (self *OxmConnTrackingIpv6Dst) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingIpv6Dst) GetName() string {
	return "oxm_conn_tracking_ipv6_dst"
}

type OxmConnTrackingIpv6DstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmConnTrackingIpv6DstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeOxmConnTrackingIpv6DstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingIpv6DstMasked, error) {
	oxmconntrackingipv6dstmasked := &OxmConnTrackingIpv6DstMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("OxmConnTrackingIpv6DstMasked packet too short: %d < 32", decoder.Length())
	}
	oxmconntrackingipv6dstmasked.Value = net.IP(decoder.Read(16))
	oxmconntrackingipv6dstmasked.ValueMask = net.IP(decoder.Read(16))
	return oxmconntrackingipv6dstmasked, nil
}

func NewOxmConnTrackingIpv6DstMasked() *OxmConnTrackingIpv6DstMasked {
	return &OxmConnTrackingIpv6DstMasked{
		Oxm: NewOxm(128800),
	}
}
func (self *OxmConnTrackingIpv6DstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingIpv6DstMasked) GetName() string {
	return "oxm_conn_tracking_ipv6_dst_masked"
}

type OxmConnTrackingIpv6Src struct {
	*Oxm
	Value net.IP
}

func (self *OxmConnTrackingIpv6Src) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeOxmConnTrackingIpv6Src(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingIpv6Src, error) {
	oxmconntrackingipv6src := &OxmConnTrackingIpv6Src{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmConnTrackingIpv6Src packet too short: %d < 16", decoder.Length())
	}
	oxmconntrackingipv6src.Value = net.IP(decoder.Read(16))
	return oxmconntrackingipv6src, nil
}

func NewOxmConnTrackingIpv6Src() *OxmConnTrackingIpv6Src {
	return &OxmConnTrackingIpv6Src{
		Oxm: NewOxm(128016),
	}
}
func (self *OxmConnTrackingIpv6Src) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingIpv6Src) GetName() string {
	return "oxm_conn_tracking_ipv6_src"
}

type OxmConnTrackingIpv6SrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmConnTrackingIpv6SrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeOxmConnTrackingIpv6SrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingIpv6SrcMasked, error) {
	oxmconntrackingipv6srcmasked := &OxmConnTrackingIpv6SrcMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("OxmConnTrackingIpv6SrcMasked packet too short: %d < 32", decoder.Length())
	}
	oxmconntrackingipv6srcmasked.Value = net.IP(decoder.Read(16))
	oxmconntrackingipv6srcmasked.ValueMask = net.IP(decoder.Read(16))
	return oxmconntrackingipv6srcmasked, nil
}

func NewOxmConnTrackingIpv6SrcMasked() *OxmConnTrackingIpv6SrcMasked {
	return &OxmConnTrackingIpv6SrcMasked{
		Oxm: NewOxm(128288),
	}
}
func (self *OxmConnTrackingIpv6SrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingIpv6SrcMasked) GetName() string {
	return "oxm_conn_tracking_ipv6_src_masked"
}

type OxmConnTrackingLabel struct {
	*Oxm
	Value uint128
}

func (self *OxmConnTrackingLabel) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))

	return nil
}

func decodeOxmConnTrackingLabel(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingLabel, error) {
	oxmconntrackinglabel := &OxmConnTrackingLabel{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmConnTrackingLabel packet too short: %d < 16", decoder.Length())
	}
	oxmconntrackinglabel.Value = uint128(decoder.ReadUint128())
	return oxmconntrackinglabel, nil
}

func NewOxmConnTrackingLabel() *OxmConnTrackingLabel {
	return &OxmConnTrackingLabel{
		Oxm: NewOxm(120848),
	}
}
func (self *OxmConnTrackingLabel) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingLabel) GetName() string {
	return "oxm_conn_tracking_label"
}

type OxmConnTrackingLabelMasked struct {
	*Oxm
	Value     uint128
	ValueMask uint128
}

func (self *OxmConnTrackingLabelMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint128(uint128(self.Value))
	encoder.PutUint128(uint128(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingLabelMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingLabelMasked, error) {
	oxmconntrackinglabelmasked := &OxmConnTrackingLabelMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("OxmConnTrackingLabelMasked packet too short: %d < 32", decoder.Length())
	}
	oxmconntrackinglabelmasked.Value = uint128(decoder.ReadUint128())
	oxmconntrackinglabelmasked.ValueMask = uint128(decoder.ReadUint128())
	return oxmconntrackinglabelmasked, nil
}

func NewOxmConnTrackingLabelMasked() *OxmConnTrackingLabelMasked {
	return &OxmConnTrackingLabelMasked{
		Oxm: NewOxm(121120),
	}
}
func (self *OxmConnTrackingLabelMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingLabelMasked) GetName() string {
	return "oxm_conn_tracking_label_masked"
}

type OxmConnTrackingMark struct {
	*Oxm
	Value uint32
}

func (self *OxmConnTrackingMark) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmConnTrackingMark(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingMark, error) {
	oxmconntrackingmark := &OxmConnTrackingMark{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmConnTrackingMark packet too short: %d < 4", decoder.Length())
	}
	oxmconntrackingmark.Value = uint32(decoder.ReadUint32())
	return oxmconntrackingmark, nil
}

func NewOxmConnTrackingMark() *OxmConnTrackingMark {
	return &OxmConnTrackingMark{
		Oxm: NewOxm(120324),
	}
}
func (self *OxmConnTrackingMark) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingMark) GetName() string {
	return "oxm_conn_tracking_mark"
}

type OxmConnTrackingMarkMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmConnTrackingMarkMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingMarkMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingMarkMasked, error) {
	oxmconntrackingmarkmasked := &OxmConnTrackingMarkMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmConnTrackingMarkMasked packet too short: %d < 8", decoder.Length())
	}
	oxmconntrackingmarkmasked.Value = uint32(decoder.ReadUint32())
	oxmconntrackingmarkmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmconntrackingmarkmasked, nil
}

func NewOxmConnTrackingMarkMasked() *OxmConnTrackingMarkMasked {
	return &OxmConnTrackingMarkMasked{
		Oxm: NewOxm(120584),
	}
}
func (self *OxmConnTrackingMarkMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingMarkMasked) GetName() string {
	return "oxm_conn_tracking_mark_masked"
}

type OxmConnTrackingNwDst struct {
	*Oxm
	Value uint32
}

func (self *OxmConnTrackingNwDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmConnTrackingNwDst(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingNwDst, error) {
	oxmconntrackingnwdst := &OxmConnTrackingNwDst{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmConnTrackingNwDst packet too short: %d < 4", decoder.Length())
	}
	oxmconntrackingnwdst.Value = uint32(decoder.ReadUint32())
	return oxmconntrackingnwdst, nil
}

func NewOxmConnTrackingNwDst() *OxmConnTrackingNwDst {
	return &OxmConnTrackingNwDst{
		Oxm: NewOxm(127492),
	}
}
func (self *OxmConnTrackingNwDst) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingNwDst) GetName() string {
	return "oxm_conn_tracking_nw_dst"
}

type OxmConnTrackingNwDstMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmConnTrackingNwDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingNwDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingNwDstMasked, error) {
	oxmconntrackingnwdstmasked := &OxmConnTrackingNwDstMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmConnTrackingNwDstMasked packet too short: %d < 8", decoder.Length())
	}
	oxmconntrackingnwdstmasked.Value = uint32(decoder.ReadUint32())
	oxmconntrackingnwdstmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmconntrackingnwdstmasked, nil
}

func NewOxmConnTrackingNwDstMasked() *OxmConnTrackingNwDstMasked {
	return &OxmConnTrackingNwDstMasked{
		Oxm: NewOxm(127752),
	}
}
func (self *OxmConnTrackingNwDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingNwDstMasked) GetName() string {
	return "oxm_conn_tracking_nw_dst_masked"
}

type OxmConnTrackingNwProto struct {
	*Oxm
	Value uint8
}

func (self *OxmConnTrackingNwProto) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmConnTrackingNwProto(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingNwProto, error) {
	oxmconntrackingnwproto := &OxmConnTrackingNwProto{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmConnTrackingNwProto packet too short: %d < 1", decoder.Length())
	}
	oxmconntrackingnwproto.Value = uint8(decoder.ReadByte())
	return oxmconntrackingnwproto, nil
}

func NewOxmConnTrackingNwProto() *OxmConnTrackingNwProto {
	return &OxmConnTrackingNwProto{
		Oxm: NewOxm(126465),
	}
}
func (self *OxmConnTrackingNwProto) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingNwProto) GetName() string {
	return "oxm_conn_tracking_nw_proto"
}

type OxmConnTrackingNwProtoMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmConnTrackingNwProtoMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingNwProtoMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingNwProtoMasked, error) {
	oxmconntrackingnwprotomasked := &OxmConnTrackingNwProtoMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmConnTrackingNwProtoMasked packet too short: %d < 2", decoder.Length())
	}
	oxmconntrackingnwprotomasked.Value = uint8(decoder.ReadByte())
	oxmconntrackingnwprotomasked.ValueMask = uint8(decoder.ReadByte())
	return oxmconntrackingnwprotomasked, nil
}

func NewOxmConnTrackingNwProtoMasked() *OxmConnTrackingNwProtoMasked {
	return &OxmConnTrackingNwProtoMasked{
		Oxm: NewOxm(126722),
	}
}
func (self *OxmConnTrackingNwProtoMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingNwProtoMasked) GetName() string {
	return "oxm_conn_tracking_nw_proto_masked"
}

type OxmConnTrackingNwSrc struct {
	*Oxm
	Value uint32
}

func (self *OxmConnTrackingNwSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmConnTrackingNwSrc(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingNwSrc, error) {
	oxmconntrackingnwsrc := &OxmConnTrackingNwSrc{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmConnTrackingNwSrc packet too short: %d < 4", decoder.Length())
	}
	oxmconntrackingnwsrc.Value = uint32(decoder.ReadUint32())
	return oxmconntrackingnwsrc, nil
}

func NewOxmConnTrackingNwSrc() *OxmConnTrackingNwSrc {
	return &OxmConnTrackingNwSrc{
		Oxm: NewOxm(126980),
	}
}
func (self *OxmConnTrackingNwSrc) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingNwSrc) GetName() string {
	return "oxm_conn_tracking_nw_src"
}

type OxmConnTrackingNwSrcMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmConnTrackingNwSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingNwSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingNwSrcMasked, error) {
	oxmconntrackingnwsrcmasked := &OxmConnTrackingNwSrcMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmConnTrackingNwSrcMasked packet too short: %d < 8", decoder.Length())
	}
	oxmconntrackingnwsrcmasked.Value = uint32(decoder.ReadUint32())
	oxmconntrackingnwsrcmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmconntrackingnwsrcmasked, nil
}

func NewOxmConnTrackingNwSrcMasked() *OxmConnTrackingNwSrcMasked {
	return &OxmConnTrackingNwSrcMasked{
		Oxm: NewOxm(127240),
	}
}
func (self *OxmConnTrackingNwSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingNwSrcMasked) GetName() string {
	return "oxm_conn_tracking_nw_src_masked"
}

type OxmConnTrackingState struct {
	*Oxm
	Value uint32
}

func (self *OxmConnTrackingState) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmConnTrackingState(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingState, error) {
	oxmconntrackingstate := &OxmConnTrackingState{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmConnTrackingState packet too short: %d < 4", decoder.Length())
	}
	oxmconntrackingstate.Value = uint32(decoder.ReadUint32())
	return oxmconntrackingstate, nil
}

func NewOxmConnTrackingState() *OxmConnTrackingState {
	return &OxmConnTrackingState{
		Oxm: NewOxm(119300),
	}
}
func (self *OxmConnTrackingState) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingState) GetName() string {
	return "oxm_conn_tracking_state"
}

type OxmConnTrackingStateMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmConnTrackingStateMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingStateMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingStateMasked, error) {
	oxmconntrackingstatemasked := &OxmConnTrackingStateMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmConnTrackingStateMasked packet too short: %d < 8", decoder.Length())
	}
	oxmconntrackingstatemasked.Value = uint32(decoder.ReadUint32())
	oxmconntrackingstatemasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmconntrackingstatemasked, nil
}

func NewOxmConnTrackingStateMasked() *OxmConnTrackingStateMasked {
	return &OxmConnTrackingStateMasked{
		Oxm: NewOxm(119560),
	}
}
func (self *OxmConnTrackingStateMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingStateMasked) GetName() string {
	return "oxm_conn_tracking_state_masked"
}

type OxmConnTrackingTpDst struct {
	*Oxm
	Value uint16
}

func (self *OxmConnTrackingTpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmConnTrackingTpDst(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingTpDst, error) {
	oxmconntrackingtpdst := &OxmConnTrackingTpDst{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmConnTrackingTpDst packet too short: %d < 2", decoder.Length())
	}
	oxmconntrackingtpdst.Value = uint16(decoder.ReadUint16())
	return oxmconntrackingtpdst, nil
}

func NewOxmConnTrackingTpDst() *OxmConnTrackingTpDst {
	return &OxmConnTrackingTpDst{
		Oxm: NewOxm(129538),
	}
}
func (self *OxmConnTrackingTpDst) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingTpDst) GetName() string {
	return "oxm_conn_tracking_tp_dst"
}

type OxmConnTrackingTpDstMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmConnTrackingTpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingTpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingTpDstMasked, error) {
	oxmconntrackingtpdstmasked := &OxmConnTrackingTpDstMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmConnTrackingTpDstMasked packet too short: %d < 4", decoder.Length())
	}
	oxmconntrackingtpdstmasked.Value = uint16(decoder.ReadUint16())
	oxmconntrackingtpdstmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmconntrackingtpdstmasked, nil
}

func NewOxmConnTrackingTpDstMasked() *OxmConnTrackingTpDstMasked {
	return &OxmConnTrackingTpDstMasked{
		Oxm: NewOxm(129796),
	}
}
func (self *OxmConnTrackingTpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingTpDstMasked) GetName() string {
	return "oxm_conn_tracking_tp_dst_masked"
}

type OxmConnTrackingTpSrc struct {
	*Oxm
	Value uint16
}

func (self *OxmConnTrackingTpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmConnTrackingTpSrc(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingTpSrc, error) {
	oxmconntrackingtpsrc := &OxmConnTrackingTpSrc{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmConnTrackingTpSrc packet too short: %d < 2", decoder.Length())
	}
	oxmconntrackingtpsrc.Value = uint16(decoder.ReadUint16())
	return oxmconntrackingtpsrc, nil
}

func NewOxmConnTrackingTpSrc() *OxmConnTrackingTpSrc {
	return &OxmConnTrackingTpSrc{
		Oxm: NewOxm(129026),
	}
}
func (self *OxmConnTrackingTpSrc) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingTpSrc) GetName() string {
	return "oxm_conn_tracking_tp_src"
}

type OxmConnTrackingTpSrcMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmConnTrackingTpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingTpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingTpSrcMasked, error) {
	oxmconntrackingtpsrcmasked := &OxmConnTrackingTpSrcMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmConnTrackingTpSrcMasked packet too short: %d < 4", decoder.Length())
	}
	oxmconntrackingtpsrcmasked.Value = uint16(decoder.ReadUint16())
	oxmconntrackingtpsrcmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmconntrackingtpsrcmasked, nil
}

func NewOxmConnTrackingTpSrcMasked() *OxmConnTrackingTpSrcMasked {
	return &OxmConnTrackingTpSrcMasked{
		Oxm: NewOxm(129284),
	}
}
func (self *OxmConnTrackingTpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingTpSrcMasked) GetName() string {
	return "oxm_conn_tracking_tp_src_masked"
}

type OxmConnTrackingZone struct {
	*Oxm
	Value uint16
}

func (self *OxmConnTrackingZone) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmConnTrackingZone(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingZone, error) {
	oxmconntrackingzone := &OxmConnTrackingZone{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmConnTrackingZone packet too short: %d < 2", decoder.Length())
	}
	oxmconntrackingzone.Value = uint16(decoder.ReadUint16())
	return oxmconntrackingzone, nil
}

func NewOxmConnTrackingZone() *OxmConnTrackingZone {
	return &OxmConnTrackingZone{
		Oxm: NewOxm(119810),
	}
}
func (self *OxmConnTrackingZone) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingZone) GetName() string {
	return "oxm_conn_tracking_zone"
}

type OxmConnTrackingZoneMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmConnTrackingZoneMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmConnTrackingZoneMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmConnTrackingZoneMasked, error) {
	oxmconntrackingzonemasked := &OxmConnTrackingZoneMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmConnTrackingZoneMasked packet too short: %d < 4", decoder.Length())
	}
	oxmconntrackingzonemasked.Value = uint16(decoder.ReadUint16())
	oxmconntrackingzonemasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmconntrackingzonemasked, nil
}

func NewOxmConnTrackingZoneMasked() *OxmConnTrackingZoneMasked {
	return &OxmConnTrackingZoneMasked{
		Oxm: NewOxm(120068),
	}
}
func (self *OxmConnTrackingZoneMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmConnTrackingZoneMasked) GetName() string {
	return "oxm_conn_tracking_zone_masked"
}

type OxmEthDst struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmEthDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmEthDst(parent *Oxm, decoder *goloxi.Decoder) (*OxmEthDst, error) {
	oxmethdst := &OxmEthDst{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmEthDst packet too short: %d < 6", decoder.Length())
	}
	oxmethdst.Value = net.HardwareAddr(decoder.Read(6))
	return oxmethdst, nil
}

func NewOxmEthDst() *OxmEthDst {
	return &OxmEthDst{
		Oxm: NewOxm(2147485190),
	}
}
func (self *OxmEthDst) GetValue() interface{} {
	return self.Value
}

func (self *OxmEthDst) GetName() string {
	return "oxm_eth_dst"
}

type OxmEthDstMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmEthDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmEthDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmEthDstMasked, error) {
	oxmethdstmasked := &OxmEthDstMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmEthDstMasked packet too short: %d < 12", decoder.Length())
	}
	oxmethdstmasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmethdstmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmethdstmasked, nil
}

func NewOxmEthDstMasked() *OxmEthDstMasked {
	return &OxmEthDstMasked{
		Oxm: NewOxm(2147485452),
	}
}
func (self *OxmEthDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmEthDstMasked) GetName() string {
	return "oxm_eth_dst_masked"
}

type OxmEthSrc struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmEthSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmEthSrc(parent *Oxm, decoder *goloxi.Decoder) (*OxmEthSrc, error) {
	oxmethsrc := &OxmEthSrc{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmEthSrc packet too short: %d < 6", decoder.Length())
	}
	oxmethsrc.Value = net.HardwareAddr(decoder.Read(6))
	return oxmethsrc, nil
}

func NewOxmEthSrc() *OxmEthSrc {
	return &OxmEthSrc{
		Oxm: NewOxm(2147485702),
	}
}
func (self *OxmEthSrc) GetValue() interface{} {
	return self.Value
}

func (self *OxmEthSrc) GetName() string {
	return "oxm_eth_src"
}

type OxmEthSrcMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmEthSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmEthSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmEthSrcMasked, error) {
	oxmethsrcmasked := &OxmEthSrcMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmEthSrcMasked packet too short: %d < 12", decoder.Length())
	}
	oxmethsrcmasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmethsrcmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmethsrcmasked, nil
}

func NewOxmEthSrcMasked() *OxmEthSrcMasked {
	return &OxmEthSrcMasked{
		Oxm: NewOxm(2147485964),
	}
}
func (self *OxmEthSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmEthSrcMasked) GetName() string {
	return "oxm_eth_src_masked"
}

type OxmEthType struct {
	*Oxm
	Value uint16
}

func (self *OxmEthType) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmEthType(parent *Oxm, decoder *goloxi.Decoder) (*OxmEthType, error) {
	oxmethtype := &OxmEthType{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmEthType packet too short: %d < 2", decoder.Length())
	}
	oxmethtype.Value = uint16(decoder.ReadUint16())
	return oxmethtype, nil
}

func NewOxmEthType() *OxmEthType {
	return &OxmEthType{
		Oxm: NewOxm(2147486210),
	}
}
func (self *OxmEthType) GetValue() interface{} {
	return self.Value
}

func (self *OxmEthType) GetName() string {
	return "oxm_eth_type"
}

type OxmEthTypeMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmEthTypeMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmEthTypeMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmEthTypeMasked, error) {
	oxmethtypemasked := &OxmEthTypeMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmEthTypeMasked packet too short: %d < 4", decoder.Length())
	}
	oxmethtypemasked.Value = uint16(decoder.ReadUint16())
	oxmethtypemasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmethtypemasked, nil
}

func NewOxmEthTypeMasked() *OxmEthTypeMasked {
	return &OxmEthTypeMasked{
		Oxm: NewOxm(2147486468),
	}
}
func (self *OxmEthTypeMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmEthTypeMasked) GetName() string {
	return "oxm_eth_type_masked"
}

type OxmIcmpv4Code struct {
	*Oxm
	Value uint8
}

func (self *OxmIcmpv4Code) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmIcmpv4Code(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv4Code, error) {
	oxmicmpv4code := &OxmIcmpv4Code{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmIcmpv4Code packet too short: %d < 1", decoder.Length())
	}
	oxmicmpv4code.Value = uint8(decoder.ReadByte())
	return oxmicmpv4code, nil
}

func NewOxmIcmpv4Code() *OxmIcmpv4Code {
	return &OxmIcmpv4Code{
		Oxm: NewOxm(2147493889),
	}
}
func (self *OxmIcmpv4Code) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv4Code) GetName() string {
	return "oxm_icmpv4_code"
}

type OxmIcmpv4CodeMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmIcmpv4CodeMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmIcmpv4CodeMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv4CodeMasked, error) {
	oxmicmpv4codemasked := &OxmIcmpv4CodeMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIcmpv4CodeMasked packet too short: %d < 2", decoder.Length())
	}
	oxmicmpv4codemasked.Value = uint8(decoder.ReadByte())
	oxmicmpv4codemasked.ValueMask = uint8(decoder.ReadByte())
	return oxmicmpv4codemasked, nil
}

func NewOxmIcmpv4CodeMasked() *OxmIcmpv4CodeMasked {
	return &OxmIcmpv4CodeMasked{
		Oxm: NewOxm(2147494146),
	}
}
func (self *OxmIcmpv4CodeMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv4CodeMasked) GetName() string {
	return "oxm_icmpv4_code_masked"
}

type OxmIcmpv4Type struct {
	*Oxm
	Value uint8
}

func (self *OxmIcmpv4Type) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmIcmpv4Type(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv4Type, error) {
	oxmicmpv4type := &OxmIcmpv4Type{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmIcmpv4Type packet too short: %d < 1", decoder.Length())
	}
	oxmicmpv4type.Value = uint8(decoder.ReadByte())
	return oxmicmpv4type, nil
}

func NewOxmIcmpv4Type() *OxmIcmpv4Type {
	return &OxmIcmpv4Type{
		Oxm: NewOxm(2147493377),
	}
}
func (self *OxmIcmpv4Type) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv4Type) GetName() string {
	return "oxm_icmpv4_type"
}

type OxmIcmpv4TypeMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmIcmpv4TypeMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmIcmpv4TypeMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv4TypeMasked, error) {
	oxmicmpv4typemasked := &OxmIcmpv4TypeMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIcmpv4TypeMasked packet too short: %d < 2", decoder.Length())
	}
	oxmicmpv4typemasked.Value = uint8(decoder.ReadByte())
	oxmicmpv4typemasked.ValueMask = uint8(decoder.ReadByte())
	return oxmicmpv4typemasked, nil
}

func NewOxmIcmpv4TypeMasked() *OxmIcmpv4TypeMasked {
	return &OxmIcmpv4TypeMasked{
		Oxm: NewOxm(2147493634),
	}
}
func (self *OxmIcmpv4TypeMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv4TypeMasked) GetName() string {
	return "oxm_icmpv4_type_masked"
}

type OxmIcmpv6Code struct {
	*Oxm
	Value uint8
}

func (self *OxmIcmpv6Code) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmIcmpv6Code(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv6Code, error) {
	oxmicmpv6code := &OxmIcmpv6Code{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmIcmpv6Code packet too short: %d < 1", decoder.Length())
	}
	oxmicmpv6code.Value = uint8(decoder.ReadByte())
	return oxmicmpv6code, nil
}

func NewOxmIcmpv6Code() *OxmIcmpv6Code {
	return &OxmIcmpv6Code{
		Oxm: NewOxm(2147499009),
	}
}
func (self *OxmIcmpv6Code) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv6Code) GetName() string {
	return "oxm_icmpv6_code"
}

type OxmIcmpv6CodeMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmIcmpv6CodeMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmIcmpv6CodeMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv6CodeMasked, error) {
	oxmicmpv6codemasked := &OxmIcmpv6CodeMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIcmpv6CodeMasked packet too short: %d < 2", decoder.Length())
	}
	oxmicmpv6codemasked.Value = uint8(decoder.ReadByte())
	oxmicmpv6codemasked.ValueMask = uint8(decoder.ReadByte())
	return oxmicmpv6codemasked, nil
}

func NewOxmIcmpv6CodeMasked() *OxmIcmpv6CodeMasked {
	return &OxmIcmpv6CodeMasked{
		Oxm: NewOxm(2147499266),
	}
}
func (self *OxmIcmpv6CodeMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv6CodeMasked) GetName() string {
	return "oxm_icmpv6_code_masked"
}

type OxmIcmpv6Type struct {
	*Oxm
	Value uint8
}

func (self *OxmIcmpv6Type) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmIcmpv6Type(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv6Type, error) {
	oxmicmpv6type := &OxmIcmpv6Type{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmIcmpv6Type packet too short: %d < 1", decoder.Length())
	}
	oxmicmpv6type.Value = uint8(decoder.ReadByte())
	return oxmicmpv6type, nil
}

func NewOxmIcmpv6Type() *OxmIcmpv6Type {
	return &OxmIcmpv6Type{
		Oxm: NewOxm(2147498497),
	}
}
func (self *OxmIcmpv6Type) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv6Type) GetName() string {
	return "oxm_icmpv6_type"
}

type OxmIcmpv6TypeMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmIcmpv6TypeMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmIcmpv6TypeMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIcmpv6TypeMasked, error) {
	oxmicmpv6typemasked := &OxmIcmpv6TypeMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIcmpv6TypeMasked packet too short: %d < 2", decoder.Length())
	}
	oxmicmpv6typemasked.Value = uint8(decoder.ReadByte())
	oxmicmpv6typemasked.ValueMask = uint8(decoder.ReadByte())
	return oxmicmpv6typemasked, nil
}

func NewOxmIcmpv6TypeMasked() *OxmIcmpv6TypeMasked {
	return &OxmIcmpv6TypeMasked{
		Oxm: NewOxm(2147498754),
	}
}
func (self *OxmIcmpv6TypeMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIcmpv6TypeMasked) GetName() string {
	return "oxm_icmpv6_type_masked"
}

type OxmInPhyPort struct {
	*Oxm
	Value PortNo
}

func (self *OxmInPhyPort) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)

	return nil
}

func decodeOxmInPhyPort(parent *Oxm, decoder *goloxi.Decoder) (*OxmInPhyPort, error) {
	oxminphyport := &OxmInPhyPort{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmInPhyPort packet too short: %d < 4", decoder.Length())
	}
	oxminphyport.Value.Decode(decoder)
	return oxminphyport, nil
}

func NewOxmInPhyPort() *OxmInPhyPort {
	return &OxmInPhyPort{
		Oxm: NewOxm(2147484164),
	}
}
func (self *OxmInPhyPort) GetValue() interface{} {
	return self.Value
}

func (self *OxmInPhyPort) GetName() string {
	return "oxm_in_phy_port"
}

type OxmInPhyPortMasked struct {
	*Oxm
	Value     PortNo
	ValueMask PortNo
}

func (self *OxmInPhyPortMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)
	self.ValueMask.Serialize(encoder)

	return nil
}

func decodeOxmInPhyPortMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmInPhyPortMasked, error) {
	oxminphyportmasked := &OxmInPhyPortMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmInPhyPortMasked packet too short: %d < 8", decoder.Length())
	}
	oxminphyportmasked.Value.Decode(decoder)
	oxminphyportmasked.ValueMask.Decode(decoder)
	return oxminphyportmasked, nil
}

func NewOxmInPhyPortMasked() *OxmInPhyPortMasked {
	return &OxmInPhyPortMasked{
		Oxm: NewOxm(2147484424),
	}
}
func (self *OxmInPhyPortMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmInPhyPortMasked) GetName() string {
	return "oxm_in_phy_port_masked"
}

type OxmInPort struct {
	*Oxm
	Value PortNo
}

func (self *OxmInPort) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)

	return nil
}

func decodeOxmInPort(parent *Oxm, decoder *goloxi.Decoder) (*OxmInPort, error) {
	oxminport := &OxmInPort{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmInPort packet too short: %d < 4", decoder.Length())
	}
	oxminport.Value.Decode(decoder)
	return oxminport, nil
}

func NewOxmInPort() *OxmInPort {
	return &OxmInPort{
		Oxm: NewOxm(2147483652),
	}
}
func (self *OxmInPort) GetValue() interface{} {
	return self.Value
}

func (self *OxmInPort) GetName() string {
	return "oxm_in_port"
}

type OxmInPortMasked struct {
	*Oxm
	Value     PortNo
	ValueMask PortNo
}

func (self *OxmInPortMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	self.Value.Serialize(encoder)
	self.ValueMask.Serialize(encoder)

	return nil
}

func decodeOxmInPortMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmInPortMasked, error) {
	oxminportmasked := &OxmInPortMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmInPortMasked packet too short: %d < 8", decoder.Length())
	}
	oxminportmasked.Value.Decode(decoder)
	oxminportmasked.ValueMask.Decode(decoder)
	return oxminportmasked, nil
}

func NewOxmInPortMasked() *OxmInPortMasked {
	return &OxmInPortMasked{
		Oxm: NewOxm(2147483912),
	}
}
func (self *OxmInPortMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmInPortMasked) GetName() string {
	return "oxm_in_port_masked"
}

type OxmIpDscp struct {
	*Oxm
	Value uint8
}

func (self *OxmIpDscp) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmIpDscp(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpDscp, error) {
	oxmipdscp := &OxmIpDscp{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmIpDscp packet too short: %d < 1", decoder.Length())
	}
	oxmipdscp.Value = uint8(decoder.ReadByte())
	return oxmipdscp, nil
}

func NewOxmIpDscp() *OxmIpDscp {
	return &OxmIpDscp{
		Oxm: NewOxm(2147487745),
	}
}
func (self *OxmIpDscp) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpDscp) GetName() string {
	return "oxm_ip_dscp"
}

type OxmIpDscpMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmIpDscpMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmIpDscpMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpDscpMasked, error) {
	oxmipdscpmasked := &OxmIpDscpMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIpDscpMasked packet too short: %d < 2", decoder.Length())
	}
	oxmipdscpmasked.Value = uint8(decoder.ReadByte())
	oxmipdscpmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmipdscpmasked, nil
}

func NewOxmIpDscpMasked() *OxmIpDscpMasked {
	return &OxmIpDscpMasked{
		Oxm: NewOxm(2147488002),
	}
}
func (self *OxmIpDscpMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpDscpMasked) GetName() string {
	return "oxm_ip_dscp_masked"
}

type OxmIpEcn struct {
	*Oxm
	Value uint8
}

func (self *OxmIpEcn) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmIpEcn(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpEcn, error) {
	oxmipecn := &OxmIpEcn{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmIpEcn packet too short: %d < 1", decoder.Length())
	}
	oxmipecn.Value = uint8(decoder.ReadByte())
	return oxmipecn, nil
}

func NewOxmIpEcn() *OxmIpEcn {
	return &OxmIpEcn{
		Oxm: NewOxm(2147488257),
	}
}
func (self *OxmIpEcn) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpEcn) GetName() string {
	return "oxm_ip_ecn"
}

type OxmIpEcnMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmIpEcnMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmIpEcnMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpEcnMasked, error) {
	oxmipecnmasked := &OxmIpEcnMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIpEcnMasked packet too short: %d < 2", decoder.Length())
	}
	oxmipecnmasked.Value = uint8(decoder.ReadByte())
	oxmipecnmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmipecnmasked, nil
}

func NewOxmIpEcnMasked() *OxmIpEcnMasked {
	return &OxmIpEcnMasked{
		Oxm: NewOxm(2147488514),
	}
}
func (self *OxmIpEcnMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpEcnMasked) GetName() string {
	return "oxm_ip_ecn_masked"
}

type OxmIpProto struct {
	*Oxm
	Value uint8
}

func (self *OxmIpProto) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmIpProto(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpProto, error) {
	oxmipproto := &OxmIpProto{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmIpProto packet too short: %d < 1", decoder.Length())
	}
	oxmipproto.Value = uint8(decoder.ReadByte())
	return oxmipproto, nil
}

func NewOxmIpProto() *OxmIpProto {
	return &OxmIpProto{
		Oxm: NewOxm(2147488769),
	}
}
func (self *OxmIpProto) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpProto) GetName() string {
	return "oxm_ip_proto"
}

type OxmIpProtoMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmIpProtoMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmIpProtoMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpProtoMasked, error) {
	oxmipprotomasked := &OxmIpProtoMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIpProtoMasked packet too short: %d < 2", decoder.Length())
	}
	oxmipprotomasked.Value = uint8(decoder.ReadByte())
	oxmipprotomasked.ValueMask = uint8(decoder.ReadByte())
	return oxmipprotomasked, nil
}

func NewOxmIpProtoMasked() *OxmIpProtoMasked {
	return &OxmIpProtoMasked{
		Oxm: NewOxm(2147489026),
	}
}
func (self *OxmIpProtoMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpProtoMasked) GetName() string {
	return "oxm_ip_proto_masked"
}

type OxmIpv4Dst struct {
	*Oxm
	Value net.IP
}

func (self *OxmIpv4Dst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeOxmIpv4Dst(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv4Dst, error) {
	oxmipv4dst := &OxmIpv4Dst{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmIpv4Dst packet too short: %d < 4", decoder.Length())
	}
	oxmipv4dst.Value = net.IP(decoder.Read(4))
	return oxmipv4dst, nil
}

func NewOxmIpv4Dst() *OxmIpv4Dst {
	return &OxmIpv4Dst{
		Oxm: NewOxm(2147489796),
	}
}
func (self *OxmIpv4Dst) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv4Dst) GetName() string {
	return "oxm_ipv4_dst"
}

type OxmIpv4DstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmIpv4DstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeOxmIpv4DstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv4DstMasked, error) {
	oxmipv4dstmasked := &OxmIpv4DstMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmIpv4DstMasked packet too short: %d < 8", decoder.Length())
	}
	oxmipv4dstmasked.Value = net.IP(decoder.Read(4))
	oxmipv4dstmasked.ValueMask = net.IP(decoder.Read(4))
	return oxmipv4dstmasked, nil
}

func NewOxmIpv4DstMasked() *OxmIpv4DstMasked {
	return &OxmIpv4DstMasked{
		Oxm: NewOxm(2147490056),
	}
}
func (self *OxmIpv4DstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv4DstMasked) GetName() string {
	return "oxm_ipv4_dst_masked"
}

type OxmIpv4Src struct {
	*Oxm
	Value net.IP
}

func (self *OxmIpv4Src) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeOxmIpv4Src(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv4Src, error) {
	oxmipv4src := &OxmIpv4Src{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmIpv4Src packet too short: %d < 4", decoder.Length())
	}
	oxmipv4src.Value = net.IP(decoder.Read(4))
	return oxmipv4src, nil
}

func NewOxmIpv4Src() *OxmIpv4Src {
	return &OxmIpv4Src{
		Oxm: NewOxm(2147489284),
	}
}
func (self *OxmIpv4Src) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv4Src) GetName() string {
	return "oxm_ipv4_src"
}

type OxmIpv4SrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmIpv4SrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeOxmIpv4SrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv4SrcMasked, error) {
	oxmipv4srcmasked := &OxmIpv4SrcMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmIpv4SrcMasked packet too short: %d < 8", decoder.Length())
	}
	oxmipv4srcmasked.Value = net.IP(decoder.Read(4))
	oxmipv4srcmasked.ValueMask = net.IP(decoder.Read(4))
	return oxmipv4srcmasked, nil
}

func NewOxmIpv4SrcMasked() *OxmIpv4SrcMasked {
	return &OxmIpv4SrcMasked{
		Oxm: NewOxm(2147489544),
	}
}
func (self *OxmIpv4SrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv4SrcMasked) GetName() string {
	return "oxm_ipv4_src_masked"
}

type OxmIpv6Dst struct {
	*Oxm
	Value net.IP
}

func (self *OxmIpv6Dst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeOxmIpv6Dst(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6Dst, error) {
	oxmipv6dst := &OxmIpv6Dst{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmIpv6Dst packet too short: %d < 16", decoder.Length())
	}
	oxmipv6dst.Value = net.IP(decoder.Read(16))
	return oxmipv6dst, nil
}

func NewOxmIpv6Dst() *OxmIpv6Dst {
	return &OxmIpv6Dst{
		Oxm: NewOxm(2147497488),
	}
}
func (self *OxmIpv6Dst) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6Dst) GetName() string {
	return "oxm_ipv6_dst"
}

type OxmIpv6DstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmIpv6DstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeOxmIpv6DstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6DstMasked, error) {
	oxmipv6dstmasked := &OxmIpv6DstMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("OxmIpv6DstMasked packet too short: %d < 32", decoder.Length())
	}
	oxmipv6dstmasked.Value = net.IP(decoder.Read(16))
	oxmipv6dstmasked.ValueMask = net.IP(decoder.Read(16))
	return oxmipv6dstmasked, nil
}

func NewOxmIpv6DstMasked() *OxmIpv6DstMasked {
	return &OxmIpv6DstMasked{
		Oxm: NewOxm(2147497760),
	}
}
func (self *OxmIpv6DstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6DstMasked) GetName() string {
	return "oxm_ipv6_dst_masked"
}

type OxmIpv6Exthdr struct {
	*Oxm
	Value uint16
}

func (self *OxmIpv6Exthdr) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmIpv6Exthdr(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6Exthdr, error) {
	oxmipv6exthdr := &OxmIpv6Exthdr{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmIpv6Exthdr packet too short: %d < 2", decoder.Length())
	}
	oxmipv6exthdr.Value = uint16(decoder.ReadUint16())
	return oxmipv6exthdr, nil
}

func NewOxmIpv6Exthdr() *OxmIpv6Exthdr {
	return &OxmIpv6Exthdr{
		Oxm: NewOxm(2147503618),
	}
}
func (self *OxmIpv6Exthdr) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6Exthdr) GetName() string {
	return "oxm_ipv6_exthdr"
}

type OxmIpv6ExthdrMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmIpv6ExthdrMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmIpv6ExthdrMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6ExthdrMasked, error) {
	oxmipv6exthdrmasked := &OxmIpv6ExthdrMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmIpv6ExthdrMasked packet too short: %d < 4", decoder.Length())
	}
	oxmipv6exthdrmasked.Value = uint16(decoder.ReadUint16())
	oxmipv6exthdrmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmipv6exthdrmasked, nil
}

func NewOxmIpv6ExthdrMasked() *OxmIpv6ExthdrMasked {
	return &OxmIpv6ExthdrMasked{
		Oxm: NewOxm(2147503876),
	}
}
func (self *OxmIpv6ExthdrMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6ExthdrMasked) GetName() string {
	return "oxm_ipv6_exthdr_masked"
}

type OxmIpv6Flabel struct {
	*Oxm
	Value uint32
}

func (self *OxmIpv6Flabel) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmIpv6Flabel(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6Flabel, error) {
	oxmipv6flabel := &OxmIpv6Flabel{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmIpv6Flabel packet too short: %d < 4", decoder.Length())
	}
	oxmipv6flabel.Value = uint32(decoder.ReadUint32())
	return oxmipv6flabel, nil
}

func NewOxmIpv6Flabel() *OxmIpv6Flabel {
	return &OxmIpv6Flabel{
		Oxm: NewOxm(2147497988),
	}
}
func (self *OxmIpv6Flabel) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6Flabel) GetName() string {
	return "oxm_ipv6_flabel"
}

type OxmIpv6FlabelMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmIpv6FlabelMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmIpv6FlabelMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6FlabelMasked, error) {
	oxmipv6flabelmasked := &OxmIpv6FlabelMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmIpv6FlabelMasked packet too short: %d < 8", decoder.Length())
	}
	oxmipv6flabelmasked.Value = uint32(decoder.ReadUint32())
	oxmipv6flabelmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmipv6flabelmasked, nil
}

func NewOxmIpv6FlabelMasked() *OxmIpv6FlabelMasked {
	return &OxmIpv6FlabelMasked{
		Oxm: NewOxm(2147498248),
	}
}
func (self *OxmIpv6FlabelMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6FlabelMasked) GetName() string {
	return "oxm_ipv6_flabel_masked"
}

type OxmIpv6NdSll struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmIpv6NdSll) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmIpv6NdSll(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6NdSll, error) {
	oxmipv6ndsll := &OxmIpv6NdSll{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmIpv6NdSll packet too short: %d < 6", decoder.Length())
	}
	oxmipv6ndsll.Value = net.HardwareAddr(decoder.Read(6))
	return oxmipv6ndsll, nil
}

func NewOxmIpv6NdSll() *OxmIpv6NdSll {
	return &OxmIpv6NdSll{
		Oxm: NewOxm(2147500038),
	}
}
func (self *OxmIpv6NdSll) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6NdSll) GetName() string {
	return "oxm_ipv6_nd_sll"
}

type OxmIpv6NdSllMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmIpv6NdSllMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmIpv6NdSllMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6NdSllMasked, error) {
	oxmipv6ndsllmasked := &OxmIpv6NdSllMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmIpv6NdSllMasked packet too short: %d < 12", decoder.Length())
	}
	oxmipv6ndsllmasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmipv6ndsllmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmipv6ndsllmasked, nil
}

func NewOxmIpv6NdSllMasked() *OxmIpv6NdSllMasked {
	return &OxmIpv6NdSllMasked{
		Oxm: NewOxm(2147500300),
	}
}
func (self *OxmIpv6NdSllMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6NdSllMasked) GetName() string {
	return "oxm_ipv6_nd_sll_masked"
}

type OxmIpv6NdTarget struct {
	*Oxm
	Value net.IP
}

func (self *OxmIpv6NdTarget) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeOxmIpv6NdTarget(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6NdTarget, error) {
	oxmipv6ndtarget := &OxmIpv6NdTarget{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmIpv6NdTarget packet too short: %d < 16", decoder.Length())
	}
	oxmipv6ndtarget.Value = net.IP(decoder.Read(16))
	return oxmipv6ndtarget, nil
}

func NewOxmIpv6NdTarget() *OxmIpv6NdTarget {
	return &OxmIpv6NdTarget{
		Oxm: NewOxm(2147499536),
	}
}
func (self *OxmIpv6NdTarget) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6NdTarget) GetName() string {
	return "oxm_ipv6_nd_target"
}

type OxmIpv6NdTargetMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmIpv6NdTargetMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeOxmIpv6NdTargetMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6NdTargetMasked, error) {
	oxmipv6ndtargetmasked := &OxmIpv6NdTargetMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("OxmIpv6NdTargetMasked packet too short: %d < 32", decoder.Length())
	}
	oxmipv6ndtargetmasked.Value = net.IP(decoder.Read(16))
	oxmipv6ndtargetmasked.ValueMask = net.IP(decoder.Read(16))
	return oxmipv6ndtargetmasked, nil
}

func NewOxmIpv6NdTargetMasked() *OxmIpv6NdTargetMasked {
	return &OxmIpv6NdTargetMasked{
		Oxm: NewOxm(2147499808),
	}
}
func (self *OxmIpv6NdTargetMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6NdTargetMasked) GetName() string {
	return "oxm_ipv6_nd_target_masked"
}

type OxmIpv6NdTll struct {
	*Oxm
	Value net.HardwareAddr
}

func (self *OxmIpv6NdTll) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)

	return nil
}

func decodeOxmIpv6NdTll(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6NdTll, error) {
	oxmipv6ndtll := &OxmIpv6NdTll{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmIpv6NdTll packet too short: %d < 6", decoder.Length())
	}
	oxmipv6ndtll.Value = net.HardwareAddr(decoder.Read(6))
	return oxmipv6ndtll, nil
}

func NewOxmIpv6NdTll() *OxmIpv6NdTll {
	return &OxmIpv6NdTll{
		Oxm: NewOxm(2147500550),
	}
}
func (self *OxmIpv6NdTll) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6NdTll) GetName() string {
	return "oxm_ipv6_nd_tll"
}

type OxmIpv6NdTllMasked struct {
	*Oxm
	Value     net.HardwareAddr
	ValueMask net.HardwareAddr
}

func (self *OxmIpv6NdTllMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value)
	encoder.Write(self.ValueMask)

	return nil
}

func decodeOxmIpv6NdTllMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6NdTllMasked, error) {
	oxmipv6ndtllmasked := &OxmIpv6NdTllMasked{Oxm: parent}
	if decoder.Length() < 12 {
		return nil, fmt.Errorf("OxmIpv6NdTllMasked packet too short: %d < 12", decoder.Length())
	}
	oxmipv6ndtllmasked.Value = net.HardwareAddr(decoder.Read(6))
	oxmipv6ndtllmasked.ValueMask = net.HardwareAddr(decoder.Read(6))
	return oxmipv6ndtllmasked, nil
}

func NewOxmIpv6NdTllMasked() *OxmIpv6NdTllMasked {
	return &OxmIpv6NdTllMasked{
		Oxm: NewOxm(2147500812),
	}
}
func (self *OxmIpv6NdTllMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6NdTllMasked) GetName() string {
	return "oxm_ipv6_nd_tll_masked"
}

type OxmIpv6Src struct {
	*Oxm
	Value net.IP
}

func (self *OxmIpv6Src) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())

	return nil
}

func decodeOxmIpv6Src(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6Src, error) {
	oxmipv6src := &OxmIpv6Src{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmIpv6Src packet too short: %d < 16", decoder.Length())
	}
	oxmipv6src.Value = net.IP(decoder.Read(16))
	return oxmipv6src, nil
}

func NewOxmIpv6Src() *OxmIpv6Src {
	return &OxmIpv6Src{
		Oxm: NewOxm(2147496976),
	}
}
func (self *OxmIpv6Src) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6Src) GetName() string {
	return "oxm_ipv6_src"
}

type OxmIpv6SrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmIpv6SrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To16())
	encoder.Write(self.ValueMask.To16())

	return nil
}

func decodeOxmIpv6SrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmIpv6SrcMasked, error) {
	oxmipv6srcmasked := &OxmIpv6SrcMasked{Oxm: parent}
	if decoder.Length() < 32 {
		return nil, fmt.Errorf("OxmIpv6SrcMasked packet too short: %d < 32", decoder.Length())
	}
	oxmipv6srcmasked.Value = net.IP(decoder.Read(16))
	oxmipv6srcmasked.ValueMask = net.IP(decoder.Read(16))
	return oxmipv6srcmasked, nil
}

func NewOxmIpv6SrcMasked() *OxmIpv6SrcMasked {
	return &OxmIpv6SrcMasked{
		Oxm: NewOxm(2147497248),
	}
}
func (self *OxmIpv6SrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmIpv6SrcMasked) GetName() string {
	return "oxm_ipv6_src_masked"
}

type OxmMetadata struct {
	*Oxm
	Value uint64
}

func (self *OxmMetadata) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint64(uint64(self.Value))

	return nil
}

func decodeOxmMetadata(parent *Oxm, decoder *goloxi.Decoder) (*OxmMetadata, error) {
	oxmmetadata := &OxmMetadata{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmMetadata packet too short: %d < 8", decoder.Length())
	}
	oxmmetadata.Value = uint64(decoder.ReadUint64())
	return oxmmetadata, nil
}

func NewOxmMetadata() *OxmMetadata {
	return &OxmMetadata{
		Oxm: NewOxm(2147484680),
	}
}
func (self *OxmMetadata) GetValue() interface{} {
	return self.Value
}

func (self *OxmMetadata) GetName() string {
	return "oxm_metadata"
}

type OxmMetadataMasked struct {
	*Oxm
	Value     uint64
	ValueMask uint64
}

func (self *OxmMetadataMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint64(uint64(self.Value))
	encoder.PutUint64(uint64(self.ValueMask))

	return nil
}

func decodeOxmMetadataMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmMetadataMasked, error) {
	oxmmetadatamasked := &OxmMetadataMasked{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmMetadataMasked packet too short: %d < 16", decoder.Length())
	}
	oxmmetadatamasked.Value = uint64(decoder.ReadUint64())
	oxmmetadatamasked.ValueMask = uint64(decoder.ReadUint64())
	return oxmmetadatamasked, nil
}

func NewOxmMetadataMasked() *OxmMetadataMasked {
	return &OxmMetadataMasked{
		Oxm: NewOxm(2147484944),
	}
}
func (self *OxmMetadataMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmMetadataMasked) GetName() string {
	return "oxm_metadata_masked"
}

type OxmMplsBos struct {
	*Oxm
	Value uint8
}

func (self *OxmMplsBos) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmMplsBos(parent *Oxm, decoder *goloxi.Decoder) (*OxmMplsBos, error) {
	oxmmplsbos := &OxmMplsBos{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmMplsBos packet too short: %d < 1", decoder.Length())
	}
	oxmmplsbos.Value = uint8(decoder.ReadByte())
	return oxmmplsbos, nil
}

func NewOxmMplsBos() *OxmMplsBos {
	return &OxmMplsBos{
		Oxm: NewOxm(2147502081),
	}
}
func (self *OxmMplsBos) GetValue() interface{} {
	return self.Value
}

func (self *OxmMplsBos) GetName() string {
	return "oxm_mpls_bos"
}

type OxmMplsBosMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmMplsBosMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmMplsBosMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmMplsBosMasked, error) {
	oxmmplsbosmasked := &OxmMplsBosMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmMplsBosMasked packet too short: %d < 2", decoder.Length())
	}
	oxmmplsbosmasked.Value = uint8(decoder.ReadByte())
	oxmmplsbosmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmmplsbosmasked, nil
}

func NewOxmMplsBosMasked() *OxmMplsBosMasked {
	return &OxmMplsBosMasked{
		Oxm: NewOxm(2147502338),
	}
}
func (self *OxmMplsBosMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmMplsBosMasked) GetName() string {
	return "oxm_mpls_bos_masked"
}

type OxmMplsLabel struct {
	*Oxm
	Value uint32
}

func (self *OxmMplsLabel) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))

	return nil
}

func decodeOxmMplsLabel(parent *Oxm, decoder *goloxi.Decoder) (*OxmMplsLabel, error) {
	oxmmplslabel := &OxmMplsLabel{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmMplsLabel packet too short: %d < 4", decoder.Length())
	}
	oxmmplslabel.Value = uint32(decoder.ReadUint32())
	return oxmmplslabel, nil
}

func NewOxmMplsLabel() *OxmMplsLabel {
	return &OxmMplsLabel{
		Oxm: NewOxm(2147501060),
	}
}
func (self *OxmMplsLabel) GetValue() interface{} {
	return self.Value
}

func (self *OxmMplsLabel) GetName() string {
	return "oxm_mpls_label"
}

type OxmMplsLabelMasked struct {
	*Oxm
	Value     uint32
	ValueMask uint32
}

func (self *OxmMplsLabelMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.Value))
	encoder.PutUint32(uint32(self.ValueMask))

	return nil
}

func decodeOxmMplsLabelMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmMplsLabelMasked, error) {
	oxmmplslabelmasked := &OxmMplsLabelMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmMplsLabelMasked packet too short: %d < 8", decoder.Length())
	}
	oxmmplslabelmasked.Value = uint32(decoder.ReadUint32())
	oxmmplslabelmasked.ValueMask = uint32(decoder.ReadUint32())
	return oxmmplslabelmasked, nil
}

func NewOxmMplsLabelMasked() *OxmMplsLabelMasked {
	return &OxmMplsLabelMasked{
		Oxm: NewOxm(2147501320),
	}
}
func (self *OxmMplsLabelMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmMplsLabelMasked) GetName() string {
	return "oxm_mpls_label_masked"
}

type OxmMplsTc struct {
	*Oxm
	Value uint8
}

func (self *OxmMplsTc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmMplsTc(parent *Oxm, decoder *goloxi.Decoder) (*OxmMplsTc, error) {
	oxmmplstc := &OxmMplsTc{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmMplsTc packet too short: %d < 1", decoder.Length())
	}
	oxmmplstc.Value = uint8(decoder.ReadByte())
	return oxmmplstc, nil
}

func NewOxmMplsTc() *OxmMplsTc {
	return &OxmMplsTc{
		Oxm: NewOxm(2147501569),
	}
}
func (self *OxmMplsTc) GetValue() interface{} {
	return self.Value
}

func (self *OxmMplsTc) GetName() string {
	return "oxm_mpls_tc"
}

type OxmMplsTcMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmMplsTcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmMplsTcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmMplsTcMasked, error) {
	oxmmplstcmasked := &OxmMplsTcMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmMplsTcMasked packet too short: %d < 2", decoder.Length())
	}
	oxmmplstcmasked.Value = uint8(decoder.ReadByte())
	oxmmplstcmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmmplstcmasked, nil
}

func NewOxmMplsTcMasked() *OxmMplsTcMasked {
	return &OxmMplsTcMasked{
		Oxm: NewOxm(2147501826),
	}
}
func (self *OxmMplsTcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmMplsTcMasked) GetName() string {
	return "oxm_mpls_tc_masked"
}

type OxmOvsTcpFlags struct {
	*Oxm
	ExperimenterId uint32
	Value          uint16
}

func (self *OxmOvsTcpFlags) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.ExperimenterId))
	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmOvsTcpFlags(parent *Oxm, decoder *goloxi.Decoder) (*OxmOvsTcpFlags, error) {
	oxmovstcpflags := &OxmOvsTcpFlags{Oxm: parent}
	if decoder.Length() < 6 {
		return nil, fmt.Errorf("OxmOvsTcpFlags packet too short: %d < 6", decoder.Length())
	}
	oxmovstcpflags.ExperimenterId = uint32(decoder.ReadUint32())
	// if oxmovstcpflags.ExperimenterId != 1330529792 {
	// 	return fmt.Errorf("Wrong value '%d' for type, expected '1330529792'.", oxmovstcpflags.ExperimenterId)
	// }
	oxmovstcpflags.Value = uint16(decoder.ReadUint16())
	return oxmovstcpflags, nil
}

func NewOxmOvsTcpFlags() *OxmOvsTcpFlags {
	return &OxmOvsTcpFlags{
		Oxm: NewOxm(4294923270),
	}
}
func (self *OxmOvsTcpFlags) GetValue() interface{} {
	return self.Value
}

func (self *OxmOvsTcpFlags) GetName() string {
	return "oxm_ovs_tcp_flags"
}

type OxmOvsTcpFlagsMasked struct {
	*Oxm
	ExperimenterId uint32
	Value          uint16
	ValueMask      uint16
}

func (self *OxmOvsTcpFlagsMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint32(uint32(self.ExperimenterId))
	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmOvsTcpFlagsMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmOvsTcpFlagsMasked, error) {
	oxmovstcpflagsmasked := &OxmOvsTcpFlagsMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmOvsTcpFlagsMasked packet too short: %d < 8", decoder.Length())
	}
	oxmovstcpflagsmasked.ExperimenterId = uint32(decoder.ReadUint32())
	// if oxmovstcpflagsmasked.ExperimenterId != 1330529792 {
	// 	return fmt.Errorf("Wrong value '%d' for type, expected '1330529792'.", oxmovstcpflagsmasked.ExperimenterId)
	// }
	oxmovstcpflagsmasked.Value = uint16(decoder.ReadUint16())
	oxmovstcpflagsmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmovstcpflagsmasked, nil
}

func NewOxmOvsTcpFlagsMasked() *OxmOvsTcpFlagsMasked {
	return &OxmOvsTcpFlagsMasked{
		Oxm: NewOxm(4294923528),
	}
}
func (self *OxmOvsTcpFlagsMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmOvsTcpFlagsMasked) GetName() string {
	return "oxm_ovs_tcp_flags_masked"
}

type OxmSctpDst struct {
	*Oxm
	Value uint16
}

func (self *OxmSctpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmSctpDst(parent *Oxm, decoder *goloxi.Decoder) (*OxmSctpDst, error) {
	oxmsctpdst := &OxmSctpDst{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmSctpDst packet too short: %d < 2", decoder.Length())
	}
	oxmsctpdst.Value = uint16(decoder.ReadUint16())
	return oxmsctpdst, nil
}

func NewOxmSctpDst() *OxmSctpDst {
	return &OxmSctpDst{
		Oxm: NewOxm(2147492866),
	}
}
func (self *OxmSctpDst) GetValue() interface{} {
	return self.Value
}

func (self *OxmSctpDst) GetName() string {
	return "oxm_sctp_dst"
}

type OxmSctpDstMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmSctpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmSctpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmSctpDstMasked, error) {
	oxmsctpdstmasked := &OxmSctpDstMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmSctpDstMasked packet too short: %d < 4", decoder.Length())
	}
	oxmsctpdstmasked.Value = uint16(decoder.ReadUint16())
	oxmsctpdstmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmsctpdstmasked, nil
}

func NewOxmSctpDstMasked() *OxmSctpDstMasked {
	return &OxmSctpDstMasked{
		Oxm: NewOxm(2147493124),
	}
}
func (self *OxmSctpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmSctpDstMasked) GetName() string {
	return "oxm_sctp_dst_masked"
}

type OxmSctpSrc struct {
	*Oxm
	Value uint16
}

func (self *OxmSctpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmSctpSrc(parent *Oxm, decoder *goloxi.Decoder) (*OxmSctpSrc, error) {
	oxmsctpsrc := &OxmSctpSrc{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmSctpSrc packet too short: %d < 2", decoder.Length())
	}
	oxmsctpsrc.Value = uint16(decoder.ReadUint16())
	return oxmsctpsrc, nil
}

func NewOxmSctpSrc() *OxmSctpSrc {
	return &OxmSctpSrc{
		Oxm: NewOxm(2147492354),
	}
}
func (self *OxmSctpSrc) GetValue() interface{} {
	return self.Value
}

func (self *OxmSctpSrc) GetName() string {
	return "oxm_sctp_src"
}

type OxmSctpSrcMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmSctpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmSctpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmSctpSrcMasked, error) {
	oxmsctpsrcmasked := &OxmSctpSrcMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmSctpSrcMasked packet too short: %d < 4", decoder.Length())
	}
	oxmsctpsrcmasked.Value = uint16(decoder.ReadUint16())
	oxmsctpsrcmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmsctpsrcmasked, nil
}

func NewOxmSctpSrcMasked() *OxmSctpSrcMasked {
	return &OxmSctpSrcMasked{
		Oxm: NewOxm(2147492612),
	}
}
func (self *OxmSctpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmSctpSrcMasked) GetName() string {
	return "oxm_sctp_src_masked"
}

type OxmTcpDst struct {
	*Oxm
	Value uint16
}

func (self *OxmTcpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmTcpDst(parent *Oxm, decoder *goloxi.Decoder) (*OxmTcpDst, error) {
	oxmtcpdst := &OxmTcpDst{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmTcpDst packet too short: %d < 2", decoder.Length())
	}
	oxmtcpdst.Value = uint16(decoder.ReadUint16())
	return oxmtcpdst, nil
}

func NewOxmTcpDst() *OxmTcpDst {
	return &OxmTcpDst{
		Oxm: NewOxm(2147490818),
	}
}
func (self *OxmTcpDst) GetValue() interface{} {
	return self.Value
}

func (self *OxmTcpDst) GetName() string {
	return "oxm_tcp_dst"
}

type OxmTcpDstMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmTcpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmTcpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmTcpDstMasked, error) {
	oxmtcpdstmasked := &OxmTcpDstMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmTcpDstMasked packet too short: %d < 4", decoder.Length())
	}
	oxmtcpdstmasked.Value = uint16(decoder.ReadUint16())
	oxmtcpdstmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmtcpdstmasked, nil
}

func NewOxmTcpDstMasked() *OxmTcpDstMasked {
	return &OxmTcpDstMasked{
		Oxm: NewOxm(2147491076),
	}
}
func (self *OxmTcpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmTcpDstMasked) GetName() string {
	return "oxm_tcp_dst_masked"
}

type OxmTcpSrc struct {
	*Oxm
	Value uint16
}

func (self *OxmTcpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmTcpSrc(parent *Oxm, decoder *goloxi.Decoder) (*OxmTcpSrc, error) {
	oxmtcpsrc := &OxmTcpSrc{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmTcpSrc packet too short: %d < 2", decoder.Length())
	}
	oxmtcpsrc.Value = uint16(decoder.ReadUint16())
	return oxmtcpsrc, nil
}

func NewOxmTcpSrc() *OxmTcpSrc {
	return &OxmTcpSrc{
		Oxm: NewOxm(2147490306),
	}
}
func (self *OxmTcpSrc) GetValue() interface{} {
	return self.Value
}

func (self *OxmTcpSrc) GetName() string {
	return "oxm_tcp_src"
}

type OxmTcpSrcMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmTcpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmTcpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmTcpSrcMasked, error) {
	oxmtcpsrcmasked := &OxmTcpSrcMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmTcpSrcMasked packet too short: %d < 4", decoder.Length())
	}
	oxmtcpsrcmasked.Value = uint16(decoder.ReadUint16())
	oxmtcpsrcmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmtcpsrcmasked, nil
}

func NewOxmTcpSrcMasked() *OxmTcpSrcMasked {
	return &OxmTcpSrcMasked{
		Oxm: NewOxm(2147490564),
	}
}
func (self *OxmTcpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmTcpSrcMasked) GetName() string {
	return "oxm_tcp_src_masked"
}

type OxmTunnelId struct {
	*Oxm
	Value uint64
}

func (self *OxmTunnelId) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint64(uint64(self.Value))

	return nil
}

func decodeOxmTunnelId(parent *Oxm, decoder *goloxi.Decoder) (*OxmTunnelId, error) {
	oxmtunnelid := &OxmTunnelId{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmTunnelId packet too short: %d < 8", decoder.Length())
	}
	oxmtunnelid.Value = uint64(decoder.ReadUint64())
	return oxmtunnelid, nil
}

func NewOxmTunnelId() *OxmTunnelId {
	return &OxmTunnelId{
		Oxm: NewOxm(2147503112),
	}
}
func (self *OxmTunnelId) GetValue() interface{} {
	return self.Value
}

func (self *OxmTunnelId) GetName() string {
	return "oxm_tunnel_id"
}

type OxmTunnelIdMasked struct {
	*Oxm
	Value     uint64
	ValueMask uint64
}

func (self *OxmTunnelIdMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint64(uint64(self.Value))
	encoder.PutUint64(uint64(self.ValueMask))

	return nil
}

func decodeOxmTunnelIdMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmTunnelIdMasked, error) {
	oxmtunnelidmasked := &OxmTunnelIdMasked{Oxm: parent}
	if decoder.Length() < 16 {
		return nil, fmt.Errorf("OxmTunnelIdMasked packet too short: %d < 16", decoder.Length())
	}
	oxmtunnelidmasked.Value = uint64(decoder.ReadUint64())
	oxmtunnelidmasked.ValueMask = uint64(decoder.ReadUint64())
	return oxmtunnelidmasked, nil
}

func NewOxmTunnelIdMasked() *OxmTunnelIdMasked {
	return &OxmTunnelIdMasked{
		Oxm: NewOxm(2147503376),
	}
}
func (self *OxmTunnelIdMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmTunnelIdMasked) GetName() string {
	return "oxm_tunnel_id_masked"
}

type OxmTunnelIpv4Dst struct {
	*Oxm
	Value net.IP
}

func (self *OxmTunnelIpv4Dst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeOxmTunnelIpv4Dst(parent *Oxm, decoder *goloxi.Decoder) (*OxmTunnelIpv4Dst, error) {
	oxmtunnelipv4dst := &OxmTunnelIpv4Dst{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmTunnelIpv4Dst packet too short: %d < 4", decoder.Length())
	}
	oxmtunnelipv4dst.Value = net.IP(decoder.Read(4))
	return oxmtunnelipv4dst, nil
}

func NewOxmTunnelIpv4Dst() *OxmTunnelIpv4Dst {
	return &OxmTunnelIpv4Dst{
		Oxm: NewOxm(81924),
	}
}
func (self *OxmTunnelIpv4Dst) GetValue() interface{} {
	return self.Value
}

func (self *OxmTunnelIpv4Dst) GetName() string {
	return "oxm_tunnel_ipv4_dst"
}

type OxmTunnelIpv4DstMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmTunnelIpv4DstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeOxmTunnelIpv4DstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmTunnelIpv4DstMasked, error) {
	oxmtunnelipv4dstmasked := &OxmTunnelIpv4DstMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmTunnelIpv4DstMasked packet too short: %d < 8", decoder.Length())
	}
	oxmtunnelipv4dstmasked.Value = net.IP(decoder.Read(4))
	oxmtunnelipv4dstmasked.ValueMask = net.IP(decoder.Read(4))
	return oxmtunnelipv4dstmasked, nil
}

func NewOxmTunnelIpv4DstMasked() *OxmTunnelIpv4DstMasked {
	return &OxmTunnelIpv4DstMasked{
		Oxm: NewOxm(82184),
	}
}
func (self *OxmTunnelIpv4DstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmTunnelIpv4DstMasked) GetName() string {
	return "oxm_tunnel_ipv4_dst_masked"
}

type OxmTunnelIpv4Src struct {
	*Oxm
	Value net.IP
}

func (self *OxmTunnelIpv4Src) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())

	return nil
}

func decodeOxmTunnelIpv4Src(parent *Oxm, decoder *goloxi.Decoder) (*OxmTunnelIpv4Src, error) {
	oxmtunnelipv4src := &OxmTunnelIpv4Src{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmTunnelIpv4Src packet too short: %d < 4", decoder.Length())
	}
	oxmtunnelipv4src.Value = net.IP(decoder.Read(4))
	return oxmtunnelipv4src, nil
}

func NewOxmTunnelIpv4Src() *OxmTunnelIpv4Src {
	return &OxmTunnelIpv4Src{
		Oxm: NewOxm(81412),
	}
}
func (self *OxmTunnelIpv4Src) GetValue() interface{} {
	return self.Value
}

func (self *OxmTunnelIpv4Src) GetName() string {
	return "oxm_tunnel_ipv4_src"
}

type OxmTunnelIpv4SrcMasked struct {
	*Oxm
	Value     net.IP
	ValueMask net.IP
}

func (self *OxmTunnelIpv4SrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.Write(self.Value.To4())
	encoder.Write(self.ValueMask.To4())

	return nil
}

func decodeOxmTunnelIpv4SrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmTunnelIpv4SrcMasked, error) {
	oxmtunnelipv4srcmasked := &OxmTunnelIpv4SrcMasked{Oxm: parent}
	if decoder.Length() < 8 {
		return nil, fmt.Errorf("OxmTunnelIpv4SrcMasked packet too short: %d < 8", decoder.Length())
	}
	oxmtunnelipv4srcmasked.Value = net.IP(decoder.Read(4))
	oxmtunnelipv4srcmasked.ValueMask = net.IP(decoder.Read(4))
	return oxmtunnelipv4srcmasked, nil
}

func NewOxmTunnelIpv4SrcMasked() *OxmTunnelIpv4SrcMasked {
	return &OxmTunnelIpv4SrcMasked{
		Oxm: NewOxm(81672),
	}
}
func (self *OxmTunnelIpv4SrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmTunnelIpv4SrcMasked) GetName() string {
	return "oxm_tunnel_ipv4_src_masked"
}

type OxmUdpDst struct {
	*Oxm
	Value uint16
}

func (self *OxmUdpDst) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmUdpDst(parent *Oxm, decoder *goloxi.Decoder) (*OxmUdpDst, error) {
	oxmudpdst := &OxmUdpDst{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmUdpDst packet too short: %d < 2", decoder.Length())
	}
	oxmudpdst.Value = uint16(decoder.ReadUint16())
	return oxmudpdst, nil
}

func NewOxmUdpDst() *OxmUdpDst {
	return &OxmUdpDst{
		Oxm: NewOxm(2147491842),
	}
}
func (self *OxmUdpDst) GetValue() interface{} {
	return self.Value
}

func (self *OxmUdpDst) GetName() string {
	return "oxm_udp_dst"
}

type OxmUdpDstMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmUdpDstMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmUdpDstMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmUdpDstMasked, error) {
	oxmudpdstmasked := &OxmUdpDstMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmUdpDstMasked packet too short: %d < 4", decoder.Length())
	}
	oxmudpdstmasked.Value = uint16(decoder.ReadUint16())
	oxmudpdstmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmudpdstmasked, nil
}

func NewOxmUdpDstMasked() *OxmUdpDstMasked {
	return &OxmUdpDstMasked{
		Oxm: NewOxm(2147492100),
	}
}
func (self *OxmUdpDstMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmUdpDstMasked) GetName() string {
	return "oxm_udp_dst_masked"
}

type OxmUdpSrc struct {
	*Oxm
	Value uint16
}

func (self *OxmUdpSrc) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmUdpSrc(parent *Oxm, decoder *goloxi.Decoder) (*OxmUdpSrc, error) {
	oxmudpsrc := &OxmUdpSrc{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmUdpSrc packet too short: %d < 2", decoder.Length())
	}
	oxmudpsrc.Value = uint16(decoder.ReadUint16())
	return oxmudpsrc, nil
}

func NewOxmUdpSrc() *OxmUdpSrc {
	return &OxmUdpSrc{
		Oxm: NewOxm(2147491330),
	}
}
func (self *OxmUdpSrc) GetValue() interface{} {
	return self.Value
}

func (self *OxmUdpSrc) GetName() string {
	return "oxm_udp_src"
}

type OxmUdpSrcMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmUdpSrcMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmUdpSrcMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmUdpSrcMasked, error) {
	oxmudpsrcmasked := &OxmUdpSrcMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmUdpSrcMasked packet too short: %d < 4", decoder.Length())
	}
	oxmudpsrcmasked.Value = uint16(decoder.ReadUint16())
	oxmudpsrcmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmudpsrcmasked, nil
}

func NewOxmUdpSrcMasked() *OxmUdpSrcMasked {
	return &OxmUdpSrcMasked{
		Oxm: NewOxm(2147491588),
	}
}
func (self *OxmUdpSrcMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmUdpSrcMasked) GetName() string {
	return "oxm_udp_src_masked"
}

type OxmVlanPcp struct {
	*Oxm
	Value uint8
}

func (self *OxmVlanPcp) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))

	return nil
}

func decodeOxmVlanPcp(parent *Oxm, decoder *goloxi.Decoder) (*OxmVlanPcp, error) {
	oxmvlanpcp := &OxmVlanPcp{Oxm: parent}
	if decoder.Length() < 1 {
		return nil, fmt.Errorf("OxmVlanPcp packet too short: %d < 1", decoder.Length())
	}
	oxmvlanpcp.Value = uint8(decoder.ReadByte())
	return oxmvlanpcp, nil
}

func NewOxmVlanPcp() *OxmVlanPcp {
	return &OxmVlanPcp{
		Oxm: NewOxm(2147487233),
	}
}
func (self *OxmVlanPcp) GetValue() interface{} {
	return self.Value
}

func (self *OxmVlanPcp) GetName() string {
	return "oxm_vlan_pcp"
}

type OxmVlanPcpMasked struct {
	*Oxm
	Value     uint8
	ValueMask uint8
}

func (self *OxmVlanPcpMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint8(uint8(self.Value))
	encoder.PutUint8(uint8(self.ValueMask))

	return nil
}

func decodeOxmVlanPcpMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmVlanPcpMasked, error) {
	oxmvlanpcpmasked := &OxmVlanPcpMasked{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmVlanPcpMasked packet too short: %d < 2", decoder.Length())
	}
	oxmvlanpcpmasked.Value = uint8(decoder.ReadByte())
	oxmvlanpcpmasked.ValueMask = uint8(decoder.ReadByte())
	return oxmvlanpcpmasked, nil
}

func NewOxmVlanPcpMasked() *OxmVlanPcpMasked {
	return &OxmVlanPcpMasked{
		Oxm: NewOxm(2147487490),
	}
}
func (self *OxmVlanPcpMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmVlanPcpMasked) GetName() string {
	return "oxm_vlan_pcp_masked"
}

type OxmVlanVid struct {
	*Oxm
	Value uint16
}

func (self *OxmVlanVid) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))

	return nil
}

func decodeOxmVlanVid(parent *Oxm, decoder *goloxi.Decoder) (*OxmVlanVid, error) {
	oxmvlanvid := &OxmVlanVid{Oxm: parent}
	if decoder.Length() < 2 {
		return nil, fmt.Errorf("OxmVlanVid packet too short: %d < 2", decoder.Length())
	}
	oxmvlanvid.Value = uint16(decoder.ReadUint16())
	return oxmvlanvid, nil
}

func NewOxmVlanVid() *OxmVlanVid {
	return &OxmVlanVid{
		Oxm: NewOxm(2147486722),
	}
}
func (self *OxmVlanVid) GetValue() interface{} {
	return self.Value
}

func (self *OxmVlanVid) GetName() string {
	return "oxm_vlan_vid"
}

type OxmVlanVidMasked struct {
	*Oxm
	Value     uint16
	ValueMask uint16
}

func (self *OxmVlanVidMasked) Serialize(encoder *goloxi.Encoder) error {
	if err := self.Oxm.Serialize(encoder); err != nil {
		return err
	}

	encoder.PutUint16(uint16(self.Value))
	encoder.PutUint16(uint16(self.ValueMask))

	return nil
}

func decodeOxmVlanVidMasked(parent *Oxm, decoder *goloxi.Decoder) (*OxmVlanVidMasked, error) {
	oxmvlanvidmasked := &OxmVlanVidMasked{Oxm: parent}
	if decoder.Length() < 4 {
		return nil, fmt.Errorf("OxmVlanVidMasked packet too short: %d < 4", decoder.Length())
	}
	oxmvlanvidmasked.Value = uint16(decoder.ReadUint16())
	oxmvlanvidmasked.ValueMask = uint16(decoder.ReadUint16())
	return oxmvlanvidmasked, nil
}

func NewOxmVlanVidMasked() *OxmVlanVidMasked {
	return &OxmVlanVidMasked{
		Oxm: NewOxm(2147486980),
	}
}
func (self *OxmVlanVidMasked) GetValue() interface{} {
	return self.Value
}

func (self *OxmVlanVidMasked) GetName() string {
	return "oxm_vlan_vid_masked"
}
